[{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/","tags":"","title":"Categories"},{"body":"(centos) hostname [root@develop ~]$ hostnamectl set-hostname develop [root@develop ~]$ (tar) -I, –use-compress-program $ tar -I zstd -xvf zsh-5.8-5-x86_64.pkg.tar.zst (centos) xargs # 공백이나 개행문자가 포함된 파일명 삭제 $ fine . -type -f -print0 | xargs -O /bin/rm -f $ ls *.txt | xargs cat \u003e\u003e abc.txt $ ls | grep *.bak | xargs -I{} cp {} /home/bak_file (centos) lsof $ lsof -u jenkins -a +D /data $ lsof -i 4 $ lsof -t -i TCP:8100 $ ps -ef | grep `lsof -t -i tcp:8100` $ lsof -t -i tcp:8100 | xargs kill -9 (centos) zsh $ yum install zsh $ sh -c \"$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" $ vi ~/.zshrc ZSH_THEME=\"agnoster\" $ git clone https://github.com/powerline/fonts.git $ cd fonts \u0026\u0026 ./install.sh $ git clone https://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions $ git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting $ vi ~/.zshrc plugins=( git zsh-autosuggestions zsh-syntax-highlighting ) $ vi ~/.oh-my-zsh/themes/agnoster.zsh-theme prompt_newline() { if [[ -n $CURRENT_BG ]]; then echo -n \"%{%k%F{$CURRENT_BG}%}$SEGMENT_SEPARATOR %{%k%F{blue}%}$SEGMENT_SEPARATOR\" else echo -n \"%{%k%}\" fi echo -n \"%{%f%}\" CURRENT_BG='' } build_prompt() { RETVAL=$? prompt_status prompt_virtualenv prompt_context prompt_dir prompt_git prompt_hg prompt_newline prompt_end } 새 창 보기\n(systemctl) Requires 속성 logstash 서비스를 elasticsearch 서비스의 종속으로 구성해야할 필요가 생겼습니다.\n$ vi /etc/systemd/system/logstash.service [Unit] Description=logstash Requires=elasticsearch.service # 종속성 확인 $ systemctl list-dependencies logstash.service logstash.service ● ├─-.mount ● ├─elasticsearch.service ● ├─system.slice ● └─sysinit.target ● ├─dev-hugepages.mount ● ├─dev-mqueue.mount (cockpit) grafana, grafana-pcp $ yum install grafana grafana-pcp $ systemctl enable --now grafana-server http://host:3000/ 으로 접속\n최초 로그인: 새 창 열림\n포트 변경은 /etc/grafana/grafana.ini 파일에서 http_port = 3000 를 변경하면 됩니다.\n서비스 재시작: systemctl restart grafana-server\n가상호스트 설정: 새 창 보기\n로그인 후 설정\n좌측 메뉴 Configuration \u003e Plugin 선택 Performance Co-Pilot 플러그인을 활성화 (enable 버튼 클릭) cockpit-pcp에서 redis 설치 후 grafana에서 Configuration \u003e Data Sources 선택 (grafana는 cockpit-pcp 의 메트릭 정보를 redis 를 통해 가져옵니다. redis 설치는 cockpit 에서 버튼 클릭 한번으로 끝남) HTTP의 URL 항목만 http://127.0.0.1:44322 으로 입력 후 Save \u0026 Test 버튼 클릭 대시보드: 새 창 보기\n(cockpit) cockpit-pcp 설치 시스템모니터링 기능이며 cockpit-pcp를 설치하여 메트릭 정보를 볼 수 있습니다.\n새 창 보기\n$ yum install cockpit-pcp $ systemctl enable pmlogger.service $ systemctl enable pmproxy.service $ systemctl daemon-reload $ systemctl start pmlogger.service $ systemctl start pmproxy.service pmproxy.service 활성화를 통해 여러 머신의 메트릭 정보를 볼 수도 있습니다. (redis 설치됨)\n참고: 새 창 보기\n(dnf-makecache) 오류 dnf-makecache는 centos의 자동업데이트 기능입니다.\n오류: repo 'appstream': Cannot prepare internal mirrorlist: No URLs in mirrorlist 를 위해 메타데이타 내려받기에 실패하였습니다\n새 창 보기\ndisable 명령어는 다음과 같습니다.\n$ gsettings set org.gnome.software download-updates false $ systemctl disable dnf-makecache.service $ systemctl disable dnf-makecache.timer 정상 작동하도록 하기 위해 yum 저장소 설정 파일을 수정합니다.\n새 창 보기\n$ sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-Linux-* $ sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-Linux-* # yum upgrade 테스트 참고: dnf 저장소 관리 새 창 보기\n(ELK) elasticsearch 패스워드 설정 elasticsearch와 kibana에 id/pw 방식의 보안을 적용하기 위해 elasticsearch 에 패스워드를 설정합니다.\nelasticsearch 에 패스워드를 설정하는 명령어는 elasticsearch-setup-passwords interactive 입니다.\n오류 내용이 ERROR: X-Pack Security is disabled by configuration 으로 나올 경우 설정파일elasticsearch.yml이 기본으로 되어있을 경우 발생합니다.\n$ /usr/share/elasticsearch/bin/elasticsearch-setup-passwords interactive Unexpected response code [500] from calling GET http://172.28.200.30:8200/_security/_authenticate?pretty It doesn't look like the X-Pack security feature is enabled on this Elasticsearch node. Please check if you have enabled X-Pack security in your elasticsearch.yml configuration file. ERROR: X-Pack Security is disabled by configuration. $ 설정파일elasticsearch.yml에서 아래와 같이 옵션을 추가합니다.\n참고 링크: 새 창 보기\n102 103 # 2022.01.27 104 xpack.security.enabled: true 설정 추가 후 systemctl restart elasticsearch 재시작을하면 xpack.security.transport.ssl.enabled 을 추가하라는 메시지가 나옵니다.\n-- Unit elasticsearch.service has begun starting up. 1월 27 18:25:13 centos8 systemd-entrypoint[11169]: ERROR: [1] bootstrap checks failed. You must address the points described in the following [1] lines before starting Elasticsearch. 1월 27 18:25:13 centos8 systemd-entrypoint[11169]: bootstrap check failure [1] of [1]: Transport SSL must be enabled if security is enabled on a [basic] license. Please set [xpack.security.transport.ssl.enabled] to [true] or disa\u003e 1월 27 18:25:13 centos8 systemd-entrypoint[11169]: ERROR: Elasticsearch did not exit normally - check the logs at /outlog/PROD/es/elasticsearch.log 변경 후 재시작을 합니다.\n103 # 2022.01.27 104 xpack.security.enabled: true 105 xpack.security.transport.ssl.enabled: true elasticsearch-setup-passwords interactive 명령으로 패스워드를 설정합니다.\n$ /usr/share/elasticsearch/bin/elasticsearch-setup-passwords interactive Initiating the setup of passwords for reserved users elastic,apm_system,kibana,kibana_system,logstash_system,beats_system,remote_monitoring_user. You will be prompted to enter passwords as the process progresses. Please confirm that you would like to continue [y/N]y Enter password for [elastic]: passwords must be at least [6] characters long Try again. Enter password for [elastic]: Reenter password for [elastic]: Enter password for [apm_system]: Reenter password for [apm_system]: Enter password for [kibana_system]: Reenter password for [kibana_system]: Enter password for [logstash_system]: Reenter password for [logstash_system]: Enter password for [beats_system]: Reenter password for [beats_system]: Enter password for [remote_monitoring_user]: Reenter password for [remote_monitoring_user]: Changed password for user [apm_system] Changed password for user [kibana_system] Changed password for user [kibana] Changed password for user [logstash_system] Changed password for user [beats_system] Changed password for user [remote_monitoring_user] Changed password for user [elastic] $ elasticsearch 의 security 적용으로 인해 kibana 의 설정을 확인해야합니다.\n설정파일/etc/kibana/kibana.yml에 아래 내용을 추가하고 kibana를 재시작(systemctl restart kibana)합니다.\n50 #elasticsearch.username: \"kibana_system\" 51 #elasticsearch.password: \"pass\" 52 elasticsearch.username: \"elastic\" 53 elasticsearch.password: \"패스워드\" 브라우저로 kibana 에 접속하면 id/pw 를 요구합니다.\n새 창 보기\nkibana 설정파일/etc/kibana/kibana.yml에 elasticsearch.password 값이 평문이 아닌 encryption 문자열로 설정하겠습니다.\nkibana-keystore 명령어로 key 저장소 생성 생성된 key 저장소에 elasticsearch.password 추가 # kibana-keystore 의 경로를 확인합니다. $ rpm -ql kibana | grep '/bin/kibana' /usr/share/kibana/bin/kibana /usr/share/kibana/bin/kibana-encryption-keys /usr/share/kibana/bin/kibana-keystore /usr/share/kibana/bin/kibana-plugin $ # key 저장소를 생성합니다. $ /usr/share/kibana/bin/kibana create A Kibana keystore already exists. Overwrite? [y/N] N Exiting without modifying keystore. $ # 이미 key 저장소가 있다고하여 저장소를 확인해보려 했지만 찾을 수 없었습니다. # 어딘가에 key 저장소가 있다고 생각하고 add 를 합니다. $ $ ./kibana-keystore add elasticsearch.password Enter value for elasticsearch.password: ********* # 저장된 key 를 확인합니다. $ ./kibana-keystore list elasticsearch.password # kibana.yml 설정파일에 \"elasticsearch.password\" 항목을 주석처리 합니다. # kibana 에서 관리하는 key 저장소에 등록된 값으로 사용될 것입니다. $ vi /etc/kibana/kibana.yml #elasticsearch.password=패스워드 kibana-keystore 에 정상적으로 등록되지 않았다면 아래와 같은 로그를 만나게 됩니다.\n아래 오류를 보기위해 테스트를 하려면,\n$ ./kibana-keystore list elasticsearch.password $ ./kibana-keystore remove elasticsearch.password $ ./kibana-keystore list $ systemctl restart kibana $ tail -f /outlog/PROD/kibana/kibana.log # 서비스 오류 로그: key 를 찾을 수 없을 경우 {\"type\":\"log\",\"@timestamp\":\"2022-01-27T20:40:02+09:00\",\"tags\":[\"warning\",\"plugins\",\"alerting\"],\"pid\":14494,\"message\":\"APIs are disabled because the Encrypted Saved Objects plugin is missing encryption key. Please set xpack.encryptedSavedObjects.encryptionKey in the kibana.yml or use the bin/kibana-encryption-keys command.\"} {\"type\":\"log\",\"@timestamp\":\"2022-01-27T20:40:02+09:00\",\"tags\":[\"info\",\"plugins\",\"ruleRegistry\"],\"pid\":14494,\"message\":\"Installing common resources shared between all indices\"} {\"type\":\"log\",\"@timestamp\":\"2022-01-27T20:40:02+09:00\",\"tags\":[\"warning\",\"plugins\",\"reporting\",\"config\"],\"pid\":14494,\"message\":\"Chromium sandbox provides an additional layer of protection, but is not supported for Linux CentOS 8.5.2111\\n OS. Automatically setting 'xpack.reporting.capture.browser.chromium.disableSandbox: true'.\"} {\"type\":\"log\",\"@timestamp\":\"2022-01-27T20:40:02+09:00\",\"tags\":[\"warning\",\"process\"],\"pid\":14494,\"message\":\"Error [ProductNotSupportedSecurityError]: The client is unable to verify that the server is Elasticsearch due to security privileges on the server side. Some functionality may not be compatible if the server is running an unsupported product.\\n at /usr/share/kibana/node_modules/@elastic/elasticsearch/lib/Transport.js:576:19\\n at onBody (/usr/share/kibana/node_modules/@elastic/elasticsearch/lib/Transport.js:369:9)\\n at IncomingMessage.onEnd (/usr/share/kibana/node_modules/@elastic/elasticsearch/lib/Transport.js:291:11)\\n at IncomingMessage.emit (node:events:402:35)\\n at endReadableNT (node:internal/streams/readable:1343:12)\\n at processTicksAndRejections (node:internal/process/task_queues:83:21)\"} {\"type\":\"log\",\"@timestamp\":\"2022-01-27T20:40:03+09:00\",\"tags\":[\"error\",\"elasticsearch-service\"],\"pid\":14494,\"message\":\"Unable to retrieve version information from Elasticsearch nodes. security_exception: [security_exception] Reason: missing authentication credentials for REST request [/_nodes?filter_path=nodes.*.version%2Cnodes.*.http.publish_address%2Cnodes.*.ip]\"} # 서비스 정상 로그 {\"type\":\"log\",\"@timestamp\":\"2022-01-27T20:51:17+09:00\",\"tags\":[\"warning\",\"plugins\",\"reporting\",\"chromium\"],\"pid\":14712,\"message\":\"Enabling the Chromium sandbox provides an additional layer of protection.\"} {\"type\":\"log\",\"@timestamp\":\"2022-01-27T20:51:19+09:00\",\"tags\":[\"info\",\"plugins\",\"securitySolution\",\"endpoint:metadata-check-transforms-task:0\",\"0\",\"1\"],\"pid\":14712,\"message\":\"no endpoint metadata transforms found\"} {\"type\":\"log\",\"@timestamp\":\"2022-01-27T20:51:26+09:00\",\"tags\":[\"info\",\"status\"],\"pid\":14712,\"message\":\"Kibana is now available (was degraded)\"} (centos) 디스크 size 확장 lsblk 명령으로 디스크 size 를 확인합니다.\n(디스크 sda 가 70G 로 되어있습니다.)\n$ lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT sda 8:0 0 70G 0 disk ├─sda1 8:1 0 1G 0 part /boot └─sda2 8:2 0 69G 0 part ├─cl_centos8-root 253:0 0 56.7G 0 lvm / ├─cl_centos8-swap 253:1 0 7G 0 lvm [SWAP] └─cl_centos8-home 253:2 0 5.3G 0 lvm /home sr0 11:0 1 1024M 0 rom $ guest-os 를 shutdown 하고, vmware 에서 디스크 capacity 를 확장합니다.\n(디스크 sda 를 80G 확장합니다.)\nguest-os 를 startup 하고 lsblk 로 확장된 크기를 확인합니다.\n(디스크 sda 가 80G 로 확장된 것을 확인할 수 있습니다.)\n$ lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT sda 8:0 0 80G 0 disk ├─sda1 8:1 0 1G 0 part /boot └─sda2 8:2 0 69G 0 part ├─cl_centos8-root 253:0 0 56.7G 0 lvm / ├─cl_centos8-swap 253:1 0 7G 0 lvm [SWAP] └─cl_centos8-home 253:2 0 5.3G 0 lvm /home sr0 11:0 1 1024M 0 rom $ sda2 를 69G 에서 79G 로 확장합니다. 확장에 사용될 명령어는 growpart 입니다.\n패키지가 설치되어 있지 않으면 yum 으로 설치를 합니다.\n$ yum install cloud-utils-growpart $ which growpart /usr/bin/growpart growpart 명령으로 피지컬 파티션sda2의 size를 확장합니다.\n확장 전에 피지컬 파티션을 상태를 확인합니다.\n$ vgdisplay --- Volume group --- VG Name cl_centos8 System ID Format lvm2 Metadata Areas 1 Metadata Sequence No 4 VG Access read/write VG Status resizable MAX LV 0 Cur LV 3 Open LV 3 Max PV 0 Cur PV 1 Act PV 1 VG Size \u003c69.00 GiB PE Size 4.00 MiB Total PE 17663 Alloc PE / Size 17663 / \u003c69.00 GiB Free PE / Size 0 / 0 VG UUID tJ9xgp-NhNP-7kPQ-JwKe-y1TQ-8jkP-1U5ox4 $ growpart 명령으로 size 를 확장합니다.\n확장 후 lsblk, vgdisplay 로 변경된 사항을 확인합니다.\n(lsblk 에서 sda2 의 size가 +10G 된 것을 볼 수 있습니다.)\n$ growpart /dev/sda 2 CHANGED: partition=2 start=2099200 old: size=144701440 end=146800640 new: size=165672927 end=167772127 $ lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT sda 8:0 0 80G 0 disk ├─sda1 8:1 0 1G 0 part /boot └─sda2 8:2 0 79G 0 part ├─cl_centos8-root 253:0 0 56.7G 0 lvm / ├─cl_centos8-swap 253:1 0 7G 0 lvm [SWAP] └─cl_centos8-home 253:2 0 5.3G 0 lvm /home sr0 11:0 1 1024M 0 rom $ 피지컬 파티션sda2 에 추가된 용량을 할당해야 합니다. (명령어 pvresize /dev/sda2)\n할당 후 vgdisplay 에서 Free PE / Size 에서 변경된 것을 확인할 수 있습니다.\n(Free PE / Size 0 / 0 \u003e Free PE / Size 2560 / 10.00 GiB)\n$ vgdisplay --- Volume group --- VG Name cl_centos8 System ID Format lvm2 Metadata Areas 1 Metadata Sequence No 4 VG Access read/write VG Status resizable MAX LV 0 Cur LV 3 Open LV 3 Max PV 0 Cur PV 1 Act PV 1 VG Size \u003c69.00 GiB PE Size 4.00 MiB Total PE 17663 Alloc PE / Size 17663 / \u003c69.00 GiB Free PE / Size 0 / 0 VG UUID tJ9xgp-NhNP-7kPQ-JwKe-y1TQ-8jkP-1U5ox4 $ pvresize /dev/sda2 Physical volume \"/dev/sda2\" changed 1 physical volume(s) resized or updated / 0 physical volume(s) not resized $ $ vgdisplay --- Volume group --- VG Name cl_centos8 System ID Format lvm2 Metadata Areas 1 Metadata Sequence No 5 VG Access read/write VG Status resizable MAX LV 0 Cur LV 3 Open LV 3 Max PV 0 Cur PV 1 Act PV 1 VG Size \u003c79.00 GiB PE Size 4.00 MiB Total PE 20223 Alloc PE / Size 17663 / \u003c69.00 GiB Free PE / Size 2560 / 10.00 GiB VG UUID tJ9xgp-NhNP-7kPQ-JwKe-y1TQ-8jkP-1U5ox4 $ \u003cbr\u003e 로지컬 파티션cl_centos8-root을 확장해야 합니다.\n로지컬 파티션을 확인부터 합니다. (명령어 lvdisplay 혹은 df로 확인할 수 있습니다.)\n(확장할 로지컬 파티션은 /dev/cl_centos8/root 입니다.)\n$ df -h Filesystem Size Used Avail Use% Mounted on devtmpfs 3.8G 0 3.8G 0% /dev tmpfs 3.8G 0 3.8G 0% /dev/shm tmpfs 3.8G 9.5M 3.8G 1% /run tmpfs 3.8G 0 3.8G 0% /sys/fs/cgroup /dev/mapper/cl_centos8-root 57G 43G 15G 75% / /dev/sda1 1014M 378M 637M 38% /boot /dev/mapper/cl_centos8-home 5.4G 372M 5.0G 7% /home //172.28.200.1/share 345G 234G 112G 68% /share tmpfs 775M 0 775M 0% /run/user/0 $ $ lvdisplay --- Logical volume --- LV Path /dev/cl_centos8/root LV Name root VG Name cl_centos8 LV UUID DzRXf6-roJe-0He9-MBow-ccu0-bWjk-qPxfZS LV Write Access read/write LV Creation host, time centos8, 2021-11-28 12:38:35 +0900 LV Status available # open 1 LV Size \u003c56.66 GiB Current LE 14504 Segments 1 Allocation inherit Read ahead sectors auto - currently set to 8192 Block device 253:0 --- Logical volume --- LV Path /dev/cl_centos8/home LV Name home VG Name cl_centos8 LV UUID 9dT8j9-MTd1-dlO2-ceHH-vnpS-KtGJ-je2ReA LV Write Access read/write LV Creation host, time centos8, 2021-11-28 12:38:35 +0900 LV Status available # open 1 LV Size \u003c5.34 GiB Current LE 1367 Segments 1 Allocation inherit Read ahead sectors auto - currently set to 8192 Block device 253:2 --- Logical volume --- LV Path /dev/cl_centos8/swap LV Name swap VG Name cl_centos8 LV UUID VSq1ve-Dn73-RLjq-q2GP-wa0r-De07-CO7edF LV Write Access read/write LV Creation host, time centos8, 2021-11-28 12:38:36 +0900 LV Status available # open 2 LV Size 7.00 GiB Current LE 1792 Segments 1 Allocation inherit Read ahead sectors auto - currently set to 8192 Block device 253:1 $ 로지컬 파티션의 size 확장 명령어 lvextend 를 사용하여 확장합니다.\n로지컬 파티션명은 lvdisplay 에 표시되는 /dev/cl_centos8/root를 사용해도되고, df 에 표시되는 /dev/mapper/cl_centos8-root를 사용해도 됩니다.\n(df 에서 /dev/mapper/cl_centos8-root 의 size 가 +10G 된 것을 확인할 수 있고, lvdisplay에서도 LV Size \u003c56.66 GiB \u003e LV Size \u003c66.66 GiB 로 변경된 것을 확인할 수 있습니다.)\n$ lvextend -r -l +100%FREE /dev/cl_centos8/root Size of logical volume cl_centos8/root changed from \u003c56.66 GiB (14504 extents) to \u003c66.66 GiB (17064 extents). Logical volume cl_centos8/root successfully resized. meta-data=/dev/mapper/cl_centos8-root isize=512 agcount=4, agsize=3713024 blks = sectsz=512 attr=2, projid32bit=1 = crc=1 finobt=1, sparse=1, rmapbt=0 = reflink=1 data = bsize=4096 blocks=14852096, imaxpct=25 = sunit=0 swidth=0 blks naming =version 2 bsize=4096 ascii-ci=0, ftype=1 log =internal log bsize=4096 blocks=7252, version=2 = sectsz=512 sunit=0 blks, lazy-count=1 realtime =none extsz=4096 blocks=0, rtextents=0 data blocks changed from 14852096 to 17473536 $ $ df -h Filesystem Size Used Avail Use% Mounted on devtmpfs 3.8G 0 3.8G 0% /dev tmpfs 3.8G 0 3.8G 0% /dev/shm tmpfs 3.8G 9.5M 3.8G 1% /run tmpfs 3.8G 0 3.8G 0% /sys/fs/cgroup /dev/mapper/cl_centos8-root 67G 43G 25G 64% / /dev/sda1 1014M 378M 637M 38% /boot /dev/mapper/cl_centos8-home 5.4G 372M 5.0G 7% /home //172.28.200.1/share 345G 234G 112G 68% /share tmpfs 775M 0 775M 0% /run/user/0 $ $ lvdisplay --- Logical volume --- LV Path /dev/cl_centos8/root LV Name root VG Name cl_centos8 LV UUID DzRXf6-roJe-0He9-MBow-ccu0-bWjk-qPxfZS LV Write Access read/write LV Creation host, time centos8, 2021-11-28 12:38:35 +0900 LV Status available # open 1 LV Size \u003c66.66 GiB Current LE 17064 Segments 2 Allocation inherit Read ahead sectors auto - currently set to 8192 Block device 253:0 --- Logical volume --- LV Path /dev/cl_centos8/home LV Name home VG Name cl_centos8 LV UUID 9dT8j9-MTd1-dlO2-ceHH-vnpS-KtGJ-je2ReA LV Write Access read/write LV Creation host, time centos8, 2021-11-28 12:38:35 +0900 LV Status available # open 1 LV Size \u003c5.34 GiB Current LE 1367 Segments 1 Allocation inherit Read ahead sectors auto - currently set to 8192 Block device 253:2 --- Logical volume --- LV Path /dev/cl_centos8/swap LV Name swap VG Name cl_centos8 LV UUID VSq1ve-Dn73-RLjq-q2GP-wa0r-De07-CO7edF LV Write Access read/write LV Creation host, time centos8, 2021-11-28 12:38:36 +0900 LV Status available # open 2 LV Size 7.00 GiB Current LE 1792 Segments 1 Allocation inherit Read ahead sectors auto - currently set to 8192 Block device 253:1 $ (jenkins) Role-based Authorization Strategy 플러그인 플러그인 설치 후 Jenkins 관리 \u003e Configure Global Security 메뉴로 이동합니다.\nAuthorization 영역에 Role-Based Strategy 를 체크합니다.\n새 창 보기\nJenkins 관리 \u003e Manage and Assign Roles 에서 세부 설정을 합니다.\n새 창 보기\n(jenkins) AnsiColor 플러그인 플러그인 설치 후 개별 job 의 구성에서 빌드 환경에 Color ANSI Console Output 을 선택하면 됩니다.\n플러그인 설명은 Adds ANSI coloring to the Console Output 입니다.\n새 창 보기\n(ansible) [TODO] 내용 확인 후 세부 작성\nansible 설치 로그 새 창 보기\n(nexus) cleanup / compact blob nexus 저장소에 오래된 snapshot 이 많아져서 공간이 부족해지면 아래 2가지 작업을 등록합니다.\ncleanup policy 및 cleanup task 만 등록할 경우 실제 blob 파일은 삭제되지 않기에 compact blob task 까지 등록해야 합니다.\ntask 등록이 된 다음에는 해당 task 에서 Run 버튼을 클릭하여 실행하고 du 명령어로 공간이 확보된 것을 확인할 수 있을 것입니다.\nRepository \u003e Cleanup Policies 메뉴에서 정책 등록\ncleanup policy 등록: 새 창 보기\nSystem \u003e Task 메뉴에서 작업 등록\ncleanup task 등록: 새 창 보기\ncompact blob task 등록: 새 창 보기\n(shell) script arguments iterator argc=$# argv=(\"$@\") echo \"argc=${argc}\" echo \"argv=${argv[*]}\" for ((i=0; i\u003cargc; i++)); do echo \"argv[$i]=${argv[$i]}\" done $ ./test.sh a b 'c d' 3 ### [start] test.sh a b c d 3 ### +++ (system-env) +++ SCRIPT_DIR=/z/project/pilot/service argc=4 argv=a b c d 3 argv[0]=a argv[1]=b argv[2]=c d argv[3]=3 (shell) script 정보 bash 에서 script 파일을 실행할 때 기본 정보를 출력했습니다.\n#!/bin/bash echo echo \"# arguments called with ----\u003e ${@} \" echo \"# \\$1 ----------------------\u003e $1 \" echo \"# \\$2 ----------------------\u003e $2 \" echo \"# path to me ---------------\u003e ${0} \" echo \"# parent path --------------\u003e ${0%/*} \" echo \"# my name ------------------\u003e ${0##*/} \" echo exit $ /z/project/pilot/service/service-www/a.sh 1 2 4 # arguments called with ----\u003e 1 2 4 # $1 ----------------------\u003e 1 # $2 ----------------------\u003e 2 # path to me ---------------\u003e /z/project/pilot/service/service-www/a.sh # parent path --------------\u003e /z/project/pilot/service/service-www # my name ------------------\u003e a.sh (libxml2) xmllint xmllint 를 이용하여 nexus 의 maven-metadata.xml 을 파싱하는 예시입니다.\n$ XML_URL=\"https://nexus/repository/maven-snapshot/mgkim/framework/framework-online/maven-metadata.xml\" $ curl -s ${XML_URL} | cat - \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003cmetadata\u003e \u003cgroupId\u003emgkim.framework\u003c/groupId\u003e \u003cartifactId\u003eframework-online\u003c/artifactId\u003e \u003cversioning\u003e \u003cversions\u003e \u003cversion\u003e1.0-SNAPSHOT\u003c/version\u003e \u003cversion\u003e2.0-SNAPSHOT\u003c/version\u003e \u003c/versions\u003e \u003clastUpdated\u003e20220110062815\u003c/lastUpdated\u003e \u003c/versioning\u003e \u003c/metadata\u003e # --xpath 에 존재하지 않는 node 명을 입력했을 경우 'XPath set is empty' 가 표시됨 $ echo $(curl -s ${XML_URL} | xmllint --xpath \"//aaa/text()\" -) XPath set is empty # node명 \"\u003cgroupId\u003e\" 의 값을 가져오는 2가지 예시 $ echo $(curl -s ${XML_URL} | xmllint --xpath \"metadata/groupId/text()\" -) mgkim.framework $ echo $(curl -s ${XML_URL} | xmllint --xpath \"//groupId/text()\" -) mgkim.framework # node명 \"\u003cversion\u003e\" 이 여러개일 경우 마지막만 반환하는 예시 $ echo $(curl -s ${XML_URL} | xmllint --xpath \"//version[last()]/text()\" -) 2.0-SNAPSHOT # curl 의 결과를 xmllint 에 전달하기 위해 # xmllint 의 마지막에 dash`-` 문자가 반드시 포함되어야 함 --xpath 는 쌍따옴표\"로 해주세요. ('일 경우 변수를 포함한 값으로 표현이 안됩니다.)\n아래는 여러 node 가 select 되는 예시에서 index 변수로 접근하는 예시입니다.\n$ XML_URL=\"https://nexus/repository/maven-snapshot/mgkim/framework/framework-online/maven-metadata.xml\" $ curl -s ${XML_URL} | cat - \u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003cmetadata\u003e \u003cgroupId\u003emgkim.framework\u003c/groupId\u003e \u003cartifactId\u003eframework-online\u003c/artifactId\u003e \u003cversioning\u003e \u003cversions\u003e \u003cversion\u003e1.0-SNAPSHOT\u003c/version\u003e \u003cversion\u003e2.0-SNAPSHOT\u003c/version\u003e \u003c/versions\u003e \u003clastUpdated\u003e20220110062815\u003c/lastUpdated\u003e \u003c/versioning\u003e \u003c/metadata\u003e $ count=$(curl -s ${XML_URL} | xmllint --xpath \"count(//version)\" -) $ echo \"count=${count}\" count=2 $ for ((i=1; i\u003c=${count}; i++)); do # --xpath '//version[$i]/text()' 일 경우 # \"XPath error : Undefined variable\" 오류가 발생합니다. echo $(curl -s ${XML_URL} | xmllint --xpath \"//version[$i]/text()\" -) done 1.0-SNAPSHOT 2.0-SNAPSHOT xmllint 는 libxml2 패키지에 포함되어 있습니다.\n$ yum provides xmllint 마지막 메타자료 만료확인 17:42:56 이전인: 2022년 01월 11일 (화) 오후 04시 01분 22초. libxml2-2.9.7-9.el8_4.2.x86_64 : Library providing XML and HTML support 리포지토리 : baseos 일치하는 항목 : 파일 이름 : /usr/bin/xmllint (vim) .vimrc vi ~/.vimrc 로 아래 기본 설정을 등록합니다.\n.vimrc 에는 # 주석이 오류를 일으키니 설정 시 제거해야 합니다.\n$ vi ~/.vimrc if has(\"syntax\") syntax on endif set paste # / 검색 강조 set hlsearch # 자동 들여쓰기 set autoindent set cindent # tab 설정 set ts=2 set sts=2 set shiftwidth=2 # 커서 위 괄호 강조 set showmatch # 줄번호와 행번호 표시 set ruler (self-signed-cert) git-bash 등록 git-bash 에서 curl 을 사용할 때 ssl 인증 문제가 발생할 경우입니다.\n$ curl https://nexus/repository/maven-release/mgkim/service/service-www/maven-metadata.xml curl: (60) SSL certificate problem: self signed certificate More details here: https://curl.se/docs/sslcerts.html curl failed to verify the legitimacy of the server and therefore could not establish a secure connection to it. To learn more about this situation and how to fix it, please visit the web page mentioned above. 해당 사이트(https://nexus/)의 crt 파일을 저장하고 git-bash 에서 관리하는 ca-bundle.crt 의 끝부분에 내용을 추가합니다.\n파일 경로: C:\\Program Files\\Git\\mingw64\\ssl\\certs\\ca-bundle.crt\n(self-signed-cert) java 등록 로컬 설치된 java 에 인증서 파일(*.crt) 등록을 하기 위해서는 $JAVA_HOME/bin/keytool 를 사용해야 합니다.\nca 에 등록되지 않은 인증서로 https 통신을 하는 경우에는 ssl-handshake 과정에서 오류가 발생하므로\n해당 사이트의 인증서를 로컬 java 에 신뢰할 수 있는 인증서에 등록해야 합니다.\n아래는 hello.crt 라는 인증서를 등록하는 예시입니다.\n# 인증서 등록 # oracle java8 에서 cacerts 파일 위치 # CACERTS=$JAVA_HOME/jre/lib/security/cacerts # temurin java11 에서 cacerts 파일 위치 $ CACERTS=$JAVA_HOME/lib/security/cacerts $ keytool -importcert -keystore $CACERTS -file \"hello.crt\" -alias \"hello\" 키 저장소 비밀번호 입력: (changeit 입력) 이 인증서를 신뢰합니까? [아니오]: (y 입력) 인증서가 키 저장소에 추가되었습니다. # 인증서 조회 $ keytool -list -keystore $CACERTS | grep \"hello\" 키 저장소 비밀번호 입력: (changeit 입력) hello, 2020. 5. 8, trustedCertEntry, # 인증서 삭제 $ keytool -delete -alias \"hello\" -keystore $CACERTS nexus 를 https 로 서비스 중인 상태에서 java에 인증서를 등록하지 않았을 경우 아래와 같은 오류가 발생합니다.\nTransfer failed for http://nexus/repository/maven-snapshot/mgkim/service/service-www/2.0-SNAPSHOT/maven-metadata.xml: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target -\u003e [Help 1] jenkins 에서 빌드 시 오류가 발생하여 java 에 인증서를 추가합니다.\n$ CACERTS=$JAVA_HOME/lib/security/cacerts $ keytool -importcert -keystore $CACERTS -file /z/nexus.crt -alias 'nexus' ### `키 저장소 비밀번호` 에는 changeit 으로 입력해야 합니다. ### $ keytool -importcert -keystore $CACERTS -file /etc/httpd/conf.d/certs/nexus.crt -alias 'nexus' 경고: -cacerts 옵션을 사용하여 cacerts 키 저장소에 액세스하십시오. 키 저장소 비밀번호 입력: 소유자: CN=nexus, OU=Dev Team, O=SPACESOFT, L=Seonyudo, ST=Seoul, C=KR 발행자: CN=nexus, OU=Dev Team, O=SPACESOFT, L=Seonyudo, ST=Seoul, C=KR 일련 번호: 7aa1637941794c08365e9f9a3c531189b87f0b5e 적합한 시작 날짜: Mon Jan 10 12:15:12 KST 2022 종료 날짜: Wed Jan 10 12:15:12 KST 2024 인증서 지문: SHA1: D4:A6:92:2A:0C:97:1F:56:93:03:EC:8C:50:B3:27:5D:51:BD:30:63 SHA256: 62:BA:47:E9:3F:A6:A7:7D:78:99:87:E1:9B:E7:23:D5:B6:6B:2A:CC:5E:D9:BF:4A:DB:95:AD:67:47:70:86:96 서명 알고리즘 이름: SHA256withRSA 주체 공용 키 알고리즘: 2048비트 RSA 키 버전: 3 확장: #1: ObjectId: 2.5.29.37 Criticality=false ExtendedKeyUsages [ serverAuth ] #2: ObjectId: 2.5.29.15 Criticality=true KeyUsage [ DigitalSignature Key_Agreement ] #3: ObjectId: 2.5.29.17 Criticality=false SubjectAlternativeName [ DNSName: nexus ] 이 인증서를 신뢰합니까? [아니오]: y 인증서가 키 저장소에 추가되었습니다. $ (self-signed-cert) centos 등록 /etc/pki/ca-trust/source/anchors/ 경로에 crt 파일을 복사 update-ca-trust extract 실행으로 신뢰할 수 있는 인증서를 추가 $ cp /etc/httpd/conf.d/certs/nexus.crt /etc/pki/ca-trust/source/anchors/ $ update-ca-trust extract update-ca-trust 명령으로 등록이 안될 경우 직접 추가하는 방법입니다.\n/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem 파일에 crt 파일의 내용을 직접 추가합니다.\n$ chmod u+w /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem $ cat nexus.crt \u003e\u003e /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem $ chmod u-w /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem (shell) script 파일 디렉토리 /project/script/build.sh 파일이 실행될 때 현재 디렉토리/project/script/를 확인하는 방법입니다.\nmaven 프로젝트의 build.sh 파일이 pom.xml 과 같은 디렉토리가 아닐 경우 활용할 수 있습니다.\n# build.sh 가 존재하는 디렉토리를 반환합니다. $ DIR=\"$( cd $( dirname \"$0\" ) \u0026\u0026 pwd -P )\" $ echo \"${DIR}\" /home/user/ # build.sh 의 parent 디렉토리를 반환합니다. $ DIR=\"$( cd $( dirname \"$0\" )/.. \u0026\u0026 pwd -P )\" $ echo \"${DIR}\" /home (shell) process 및 port 체크 새 창 보기\nAPP_HOME=/app/WAS/pilot APP_NAME=service-www LIST=( \"dwww11\" \"dwww12\" \"swww11\" \"swww12\" ) for APP_ID in ${LIST[*]} do echo \"--- ${APP_ID} ---\" PS_CMD=\"ps aux | grep -v grep | grep -v tail | grep -v .sh | grep ${APP_ID}\" eval \"${PS_CMD}\" _PID=$(eval \"${PS_CMD} | awk '{ print \\$2}'\") if [ \"${_PID}\" != \"\" ]; then netstat -ntplu | grep ${_PID} SERVER_PORT=$(netstat -tnplu | grep ${_PID} | awk '{ if (match($4, /([0-9]*)$/, m)) print m[0] }') if [ \"${SERVER_PORT}\" != \"\" ]; then HTTP_CODE=$(curl --write-out \"%{http_code}\" --silent --output /dev/null \"http://localhost:${SERVER_PORT}/\") if [ \"${HTTP_CODE}\" == \"200\" ]; then echo \"${APP_ID} is avaiable. (SERVER_PORT=${SERVER_PORT})\" else echo \"${APP_ID} is not avaiable. (SERVER_PORT=${SERVER_PORT})\" fi else echo \"${APP_ID} is not avaiable.\" fi else echo \"${APP_ID} is not running\" fi echo \"\" done (shell) find newer samefile 오래된 파일을 찾을 경우, 기준이되는 파일은 제외하는 예시입니다.\n# 기준이 되는 파일을 생성 (e.g 1981년 07월 19일) $ touch -t 198107190000.00 a.txt $ ls -al a.txt # alias ls='ls --time-style long-iso ' 일 경우 시각까지 표시됨 -rw-r--r-- 1 root root 0 1981-07-19 00:00 a.txt # 기준보다 오래된 파일 생성 $ touch -t 198101010000 old.txt $ ls -al old.txt -rw-r--r-- 1 root root 0 1981-01-01 00:00 old.txt # find 검색 (a.txt 파일보다 오래된 파일을 찾음) $ find . -maxdepth 1 -type f ! -newer a.txt -name '*.txt' ./a.txt ./old.txt # find 검색 (기준이 되는 파일을 제외하고 찾음) # -samefile 혹은 -name 해도됨 $ find . -maxdepth 1 -type f ! -newer a.txt -name '*.txt' ! -samefile a.txt ./old.txt (shell) curl curl 로 http_code 를 받아오는 예시 입니다.\n이 예시는 was 가 정상 기동되었는지 확인하는데 활용할 수 있습니다.\n$ curl --write-out \"%{http_code}\" --silent --output /dev/null \"http://localhost:7100/\" 200 # 서버가 기동되지 않은 상태이면 즉시 응답이 오며, http_code 는 000 가 반환됩니다. (shell) 파일명 문자열 # 파일명에서 확장자 분리 $ FILE_NAME=service-www-2.0-SNAPSHOT.jar $ echo ${FILE_NAME%.*} service-www-2.0-SNAPSHOT $ echo ${FILE_NAME##*.} jar # 파일경로에서 파일명 $ FILE_PATH=/app/WAS/pilot/service-www-2.0-SNAPSHOT.jar $ echo ${FILE_PATH##*/} service-www-2.0-SNAPSHOT.jar (shell) while 문 PS_CMD=\"ps -ef | grep -v grep | egrep ${INST_ID}.*\\\\.jar | awk '{ print \\$2 }'\" _PID=$(eval \"${PS_CMD}\") # kill -15 실행 kill -15 $_PID # 프로세스가 종료되었는지 while 문에서 확인 while [ $i -lt 600 ]; do _CHECK_PID=$(eval \"${PS_CMD}\") if [ \"${_CHECK_PID}\" == \"\" ]; then echo \"${INST_ID}(pid:'${_PID}') killed\" break fi i=$(( $i + 1 )) done (shell) for 문 배열을 생성하고 for 문으로 출력하는 예시 입니다.\nSVR_LIST=( '172.28.200.20' '172.28.200.30' ) echo \"SVR_LIST=${SVR_LIST[*]}\" total=${#SVR_LIST[*]} idx=0 for SVR in ${SVR_LIST[*]} do idx=$(( $idx + 1 )) echo \"[${idx}/${total}]SVR=${SVR}\" done (shell) case 문 case $var in a*) # a로 시작하는 문자열일 경우 ;; a?) # a뒤에 1개의 문자가 올 경우 ;; a[bc]) # ab 혹은 ac 일 경우 ;; esac (tomcat) start/stop jamwiki 라는 webapp 을 서비스하는 tomcat 설정 기본입니다.\n아래 sh 파일을 포함하여 tomcat 설정에 필요한 파일들만 tgz 로 압축했습니다.\n다운로드\nstart.sh 파일\n#!/bin/sh PROD_HOME=/prod/${INST_ID} DATA_HOME=/data/PROD/${INST_ID} LOG_HOME=/outlog/PROD/${INST_ID} EXE_USER=tomcat PS_CMD=\"ps -ef | grep -v grep | grep -v '.sh' | grep -v rotatelogs | grep -v tail | grep ${INST_ID}\" CATALINA_BASE=/prod/${INST_ID}/config CATALINA_OUT=${LOG_HOME}/catalina.out JAVA_OPTS=\"${JAVA_OPTS} -Xms256m -Xmx256m\" JAVA_OPTS=\"${JAVA_OPTS} -Djava.net.preferIPv4Stack=true\" export CATALINA_BASE export CATALINA_OUT export JAVA_OPTS if [ ! -e ${LOG_HOME}/backup ]; then su ${EXE_USER} -c 'mkdir -p ${LOG_HOME}/backup' fi if [ -e ${LOG_HOME}/catalina.out ]; then mv ${LOG_HOME}/catalina.out ${LOG_HOME}/backup/catalina.out_`date +'%Y%m%d_%H%M%S'` fi _PID=`eval ${PS_CMD} | awk '{ print $2 }'` if [ \"${_PID}\" != \"\" ]; then echo \"${INST_ID} is already running. pid: ${_PID}\" ${PROD_HOME}/stop-${INST_ID}.sh fi sleep 2 if [ ${EXE_USER} != `whoami` ]; then su ${EXE_USER} -c '/prod/${INST_ID}/tomcat/bin/startup.sh' else /prod/${INST_ID}/tomcat/bin/startup.sh fi _PID=`eval ${PS_CMD} | awk '{ print $2 }'` if [ \"${_PID}\" != \"\" ]; then echo \"${INST_ID} is starting. pid: ${_PID}\" echo \"ps -ef | grep ${_PID}\" echo \"netstat -ntplu | grep ${_PID}\" else echo \"${INST_ID} is not started\" fi exit 0 start-jamwiki.sh 파일\n#!/bin/sh # configuration export JAVA_HOME=/prod/java/jdk1.8.0_202 export PATH=$JAVA_HOME/bin:$PATH export INST_ID=jamwiki /prod/${INST_ID}/bin/start.sh exit 0 stop.sh 파일\n#!/bin/sh PROD_HOME=/prod/${INST_ID} DATA_HOME=/data/PROD/${INST_ID} LOG_HOME=/outlog/PROD/${INST_ID} EXE_USER=tomcat PS_CMD=\"ps -ef | grep -v grep | grep -v '.sh' | grep -v rotatelogs | grep -v tail | grep ${INST_ID}\" CATALINA_BASE=/prod/${INST_ID}/config export CATALINA_BASE _PID=`eval ${PS_CMD} | awk '{ print $2 }'` if [ \"${_PID}\" == \"\" ]; then echo \"${INST_ID} is not running\" exit 0 fi sleep 2 if [ ${EXE_USER} != `whoami` ]; then su ${EXE_USER} -c '/prod/${INST_ID}/tomcat/bin/shutdown.sh' else /prod/${INST_ID}/tomcat/bin/shutdown.sh fi echo \"${INST_ID} is stopped. pid: ${_PID}\" exit 0 stop-jamwiki.sh 파일\n#!/bin/sh # configuration export INST_ID=jamwiki /prod/${INST_ID}/bin/stop.sh exit 0 status-jamwiki.sh 파일\n#!/bin/sh echo \"---------------- jamwiki ----------------\" ps -ef | grep -v grep | grep -v '.sh' | grep -v rotatelogs | grep -v tail | grep jamwiki echo \"\" exit 0 (cockpit) cockpit 은 centos 의 web console 을 제공하는 패키지 입니다.\n설치\n$ dnf install cockpit $ systemctl enable --now cockpit.socket $ netstat -ntplu | grep 9090 cockpit 에 ssl 인증서 교체하기\n참고: create-cert.sh\n# create-cert.sh 로 인증서를 생성합니다. # 인자는 web console 에 접근할 도메인으로 생성하면 됩니다. # 예시는 centos8 이라는 도메인으로 생성합니다. $ ./create-cert.sh centos8 $ ls -al -rw-r--r-- 1 root root 1310 1월 2 14:58 centos8.crt -rw------- 1 root root 1708 1월 2 14:58 centos8.key $ cd /etc/cockpit/ws-certs.d $ ls -al -rw-r--r-- 1 root root 2094 1월 2 00:46 0-self-signed-ca.pem -rw-r--r-- 1 root root 1684 1월 2 00:46 0-self-signed.cert -rw-r----- 1 root cockpit-ws 1704 1월 2 00:46 0-self-signed.key $ cp centos8.crt centos8.key /etc/cockpit/ws-certs.d $ chmod 640 centos8.key $ chown root:cockpit-ws centos8.key $ chmod 644 centos8.crt $ remotectl certificate centos8.crt centos8.key generated combined certificate file: /etc/cockpit/ws-certs.d/centos8.cert $ remotectl certificate certificate: /etc/cockpit/ws-certs.d/centos8.crt $ systemctl restart cockpit centos8 인증서 등록하기\nhttps://centos8:9090/ 링크로 이동하면 신뢰할 수 없는 사이트라고 표시됩니다.\n인증서를 내보내기 한 다음 아래 절차대로 인증서를 등록합니다.\nchrome 에서 chrome://settings/security?q=enhanced 링크로 이동합니다. 인증서 관리 메뉴를 클릭하면 팝업이 열립니다. 신뢰할 수 있는 루트 인증 기관 탭에서 가져오기를 클릭 합니다. 내보내기 한 인증서를 선택하고 가져오기를 합니다. chrome 에서 chrome://net-internals/#hsts 링크로 이동합니다. Delete domain security policies 에서 centos8 을 입력하고 Delete 버튼을 클릭합니다. chrome 에서 chrome://restart 링크 이동으로 chrome 을 재시작합니다. chrome 에서 https://centos8:9090/ 링크로 이동하여 정상 작동하는지를 확인합니다. 정상 예시\n새 창 보기\nlisten-port 변경하기\n/etc/systemd/system/sockets.target.wants/cockpit.socket 파일을 아래와 같이 편집합니다.\n[Unit] Description=Cockpit Web Service Socket Documentation=man:cockpit-ws(8) Wants=cockpit-motd.service [Socket] #ListenStream=9090 # 기본값 ListenStream=127.0.0.1:8000 # 변경값 (httpd 에서 proxy 로 접근) ExecStartPost=-/usr/share/cockpit/motd/update-motd '' localhost ExecStartPost=-/bin/ln -snf active.motd /run/cockpit/motd ExecStopPost=-/bin/ln -snf inactive.motd /run/cockpit/motd [Install] WantedBy=sockets.target redhat 공식문서에서는 /etc/systemd/system/cockpit.socket.d/listen.conf 파일을 생성하고 daemon-reload 를 하라고 되어있습니다.\n[Socket] ListenStream= ListenStream=127.0.0.1:8000 FreeBind=yes www.freedesktop.org에서는 아래와 같이 FreeBind=yes 를 권장한다고 되어있습니다.\nIf an IP address is used here, it is often desirable to listen on it before the interface it is configured on is up and running, and even regardless of whether it will be up and running at any point. To deal with this, it is recommended to set the FreeBind= option described below. 편집 후 아래 명령어를 실행합니다.\n$ systemctl daemon-reload cockpit.socket $ systemctl restart cockpit.socket # 변경 상태를 확인합니다. $ netstat -ntplu | grep 8000 (mosh) 설치\n$ yum install mosh 상태\n# 접속 후 netstat 상태 보기 $ mosh root@172.28.200.30 $ netstat -ntplu | grep 3253 udp 0 0 172.28.200.30:60001 0.0.0.0:* 3253/mosh-server $ netstat -ntplu | grep 3217 udp 0 0 0.0.0.0:19001 0.0.0.0:* 3217/mosh-client # 접속 옵션 $ mosh -ssh='ssh -vvv' root@172.28.200.30 chrome 확장 프로그램 Secure Shell\n링크\n(xmlstarlet) 설치\n$ dnf install epel-release $ yum install xmlstarlet 사용법\nxmlstarlet sel -N x=\"http://maven.apache.org/POM/4.0.0\" -t -v \"x:project/x:version\" ./pom.xml (oracle) 12c 설치 oracle 12c ee 버전 설치\npluggable database 설정, MAX_STRING_SIZE 설정, character-set 설정, oracle 계정 설정\n새 창 보기\n(yum) 설치된 목록 확인 yum list installed\n(firewall) disabled 추가된 목록: /etc/firewalld/zones/public.xml\n서비스명: firewalld\n(selinux) disabled 파일: /etc/selinux/config\nSELINUX=disabled 적용: shutdown -r now\n(network) ip 설정 파일: /etc/sysconfig/network-scripts/ifcfg-ens33\nBOOTPROTO=\"none\" IPV6INIT=\"no\" IPADDR=\"172.28.200.30\" PREFIX=\"24\" GATEWAY=\"172.28.200.2\" DNS1=\"8.8.8.8\" 적용: systemctl restart NetworkManager\n(openssl) key 생성 cmd # 암호화하지 않은 개인키 $ openssl genrsa -out private_key.pem 2048 # 3des로 암호화된 개인키 생성 # passphrase를 입력이 필요합니다. $ openssl genrsa -des3 -out enc_private_key.pem 2048 # 기존 개인키에 패스워드 추가 $ openssl rsa -des3 -in private_key.pem -out enc_private_key.pem # 기존 개인키에 패스워드 제거 $ openssl rsa -in enc_private_key.pem -out private_key.pem (sed) 문자열 치환 $ sed -i -e 's/hello/world/g' test.txt (tar) 분할 압축 # split $ tar cvfz - target | split -b 3072m - target.tgz $ cat target.tgz.* | tar zxvf - (tar) exclude 설정 # exclude $ cat .tarexclude build.* run.* bin .svn/* .git/* .project .tarexclude backup.sh $ tar cvfz ../target.tgz * -X .tarexclude (httpd) 설정 httpd.conf, vhost 설정, ssl 적용에 대한 예시\n새 창 보기\n(jenkins) 설정 플러그인 Publish Over SSH, GitLab Plugin, GitHub Integration Plugin에 대한 사용법\n새 창 보기\n(git-bash) zsh zsh-{버전}-x86_64.pkg.tar.zst 링크를 아래 사이트에서 다운로드 합니다.\n링크\nzstandard(zstd)가 설치되어 있어야 압축해제가 가능하여 zip 으로 압축된 버전은 아래 링크로 대체합니다.\nzsh-5.8-5-x86_64.zip\ngit-bash 설치 경로 C:\\Program Files\\Git 에서 압축을 해제합니다. (usr, etc 디렉토리에 덮어쓰기)\n$ sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" $ cat \u003c\u003c EOF \u003e ~/.bashrc exec zsh EOF $ vi ~/.oh-my-zsh/themes/agnoster.zsh-theme prompt_newline() { if [[ -n $CURRENT_BG ]]; then echo -n \"%{%k%F{$CURRENT_BG}%}$SEGMENT_SEPARATOR %{%k%F{blue}%}$SEGMENT_SEPARATOR\" else echo -n \"%{%k%}\" fi echo -n \"%{%f%}\" CURRENT_BG='' } build_prompt() { RETVAL=$? prompt_status prompt_virtualenv prompt_context prompt_dir prompt_git prompt_hg prompt_newline prompt_end } $ vi ~/.zshrc ZSH_THEME=\"agnoster\" git-bash \u003e Options \u003e Looks \u003e Theme 에서 rosipov 선택합니다.\n(windows) xcopy \u003e xcopy /? Copies files and directory trees. /D:m-d-y Copies files changed on or after the specified date. If no date is given, copies only those files whose source time is newer than the destination time. /S Copies directories and subdirectories except empty ones. /E Copies directories and subdirectories, including empty ones. Same as /S /E. May be used to modify /T. /V Verifies the size of each new file. /C Continues copying even if errors occur. /I If destination does not exist and copying more than one file, assumes that destination must be a directory. /Y Suppresses prompting to confirm you want to overwrite an existing destination file. /J Copies using unbuffered I/O. Recommended for very large files. xcopy E:\\유틸리티\\*.* D:\\유틸리티 /d/i/s/c/y\n(jasypt) encrypt public static void main(String[] args) { PooledPBEStringEncryptor encryptor = new PooledPBEStringEncryptor(); SimpleStringPBEConfig config = new SimpleStringPBEConfig(); String secretkey = \"password\"; config.setPassword(secretkey); config.setAlgorithm(\"PBEWithHMACSHA512AndAES_256\"); config.setPoolSize(\"2\"); config.setStringOutputType(\"base64\"); config.setIvGenerator(new RandomIvGenerator()); encryptor.setConfig(config); String 암호문 = encryptor.encrypt(\"asdf\"); System.out.println(암호문); String 평문 = encryptor.decrypt(암호문); System.out.println(평문); } (git-bash) jq jq: 새 창 보기\njq: 다운로드\n다운로드 후 C:\\Program Files\\Git\\mingw64\\bin 에 복사 \u0026 붙여넣기\n(java) keytool 인증서 생성 java 에 포함되어 있는 keytool 명령으로 아래 절차로 인증서를 생성합니다.\n생성된 인증서는 spring-boot 어플리케이션 설정파일인 application.yaml 주요 설정값을 암복호화를 할 때 사용하려 합니다.\n# keytool 경로 확인 $ which keytool /z/develop/java/openjdk-11.0.13.8-temurin/bin/keytool # private-key 파일 생성 (mgkim-pc.jks) $ keytool -genkeypair -alias mgkim-pc -keyalg RSA -dname \"CN=mgkim, OU=API Development, O=mgkim.net, L=Seoul, C=KR\" -keypass \"votmdnjem\" -keystore mgkim-pc.jks -storepass \"votmdnjem\" $ ls -al mgkim-pc.* -rw-r--r-- 1 Administrator 197121 2733 2022-01-27 21:56 mgkim-pc.jks # 인증서 파일 생성 (mgkim-pc.cer) $ keytool -export -alias mgkim-pc -keystore mgkim-pc.jks -rfc -file mgkim-pc.cer 키 저장소 비밀번호 입력: votmdnjem 인증서가 \u003cmgkim-pc.cer\u003e 파일에 저장되었습니다. $ ls -al mgkim-pc.* -rw-r--r-- 1 Administrator 197121 1236 2022-01-27 21:58 mgkim-pc.cer -rw-r--r-- 1 Administrator 197121 2733 2022-01-27 21:56 mgkim-pc.jks # public-key 파일 생성 (mgkim-pc.jks.pub) $ keytool -import -alias mgkim-pc -file mgkim-pc.cer -keystore mgkim-pc.jks.pub 키 저장소 비밀번호 입력: votmdnjem 새 비밀번호 다시 입력: votmdnjem 소유자: CN=mgkim, OU=API Development, O=mgkim.net, L=Seoul, C=KR 발행자: CN=mgkim, OU=API Development, O=mgkim.net, L=Seoul, C=KR 일련 번호: 59e8ce89 적합한 시작 날짜: Thu Jan 27 21:56:38 KST 2022 종료 날짜: Wed Apr 27 21:56:38 KST 2022 인증서 지문: SHA1: 1D:5F:AF:4A:BE:13:E8:2C:3A:17:3D:DF:D4:0B:32:31:8C:FA:F2:88 SHA256: CC:89:1A:2A:E0:2E:6D:E5:82:12:57:B7:95:30:C8:09:F5:4D:46:13:C1:06:D1:3B:FB:A1:68:72:24:5E:18:A3 서명 알고리즘 이름: SHA256withRSA 주체 공용 키 알고리즘: 2048비트 RSA 키 버전: 3 확장: #1: ObjectId: 2.5.29.14 Criticality=false SubjectKeyIdentifier [ KeyIdentifier [ 0000: 89 34 C5 D9 38 29 88 26 43 6B DF B8 34 E7 AE 74 .4..8).\u0026Ck..4..t 0010: FD 35 0B 8F .5.. ] ] 이 인증서를 신뢰합니까? [아니오]: y 인증서가 키 저장소에 추가되었습니다. $ ls -al mgkim-pc.* -rw-r--r-- 1 Administrator 197121 1236 2022-01-27 21:58 mgkim-pc.cer -rw-r--r-- 1 Administrator 197121 2733 2022-01-27 21:56 mgkim-pc.jks -rw-r--r-- 1 Administrator 197121 1239 2022-01-27 22:00 mgkim-pc.jks.pub $ mgkim-pc.jks: private-key 파일 mgkim-pc.cer: 인증서 파일 mgkim-pc.jks.pub: public-key 파일 (docsy) Code highlighting with Prism 설정파일config.toml의 prism_syntax_highlighting = true 항목을 추가하면 prismjs.com 에서 배포하는 js/css 로 theme 를 적용할 수 있습니다.\nconfig.toml의 prism_syntax_highlighting = true 항목을 추가 prismjs.com 에서 스타일을 선택한 다음 prism.js, prism.css 파일 다운로드 prism.js, prism.css 파일은 각 /static/js/prism.js, /static/css/prism.css 에 복사 supported languages: 새 창 보기\n(maven) 패스워드 암호화 settings.xml에는 nexus 저장소에 deploy 를 할 때 아래와 같이 nexus 의 계정정보를 포함하고 있어야 합니다.\n\u003cservers\u003e \u003cserver\u003e \u003cid\u003enexus-release\u003c/id\u003e \u003cusername\u003eadmin\u003c/username\u003e \u003cpassword\u003e패스워드\u003c/password\u003e \u003c/server\u003e \u003cserver\u003e \u003cid\u003enexus-snapshot\u003c/id\u003e \u003cusername\u003eadmin\u003c/username\u003e \u003cpassword\u003e패스워드\u003c/password\u003e \u003c/server\u003e \u003c/servers\u003e 패스워드를 암호화하여 설정하는 방법입니다. (settings-security.xml 파일은 로컬 저장소 .m2 디렉토리에 있어야 합니다.)\nmvn -emp 마스터패스워드명령으로 master 패스워드 문자열을 생성하고, ~/.m2/settings-security.xml 파일을 아래와 같이 생성하고 저장합니다. (참고로 -emp 는 --encrypt-master-password 입니다.) $ mvn -emp 마스터패스워드 {h/JmfOxXj2IH/whyc5/7wpvOT5AeBmlHV/nzmk7rzY+i7vEvpg46lHddfEwHFtN1} $ $ cat \u003c\u003c EOF \u003e ~/.m2/settings-security.xml \u003csettingsSecurity\u003e \u003cmaster\u003e{h/JmfOxXj2IH/whyc5/7wpvOT5AeBmlHV/nzmk7rzY+i7vEvpg46lHddfEwHFtN1}\u003c/master\u003e \u003c/settingsSecurity\u003e EOF $ mvn -ep 패스워드명령으로 nexus 의 계정에 해당되는 패스워드 문자열을 생성하고 $M2_HOME/conf/settings.xml의 \u003cpassword\u003e에 추가합니다. $ mvn -ep 패스워드 {nvTOxUicu5EHTqNwVFkrSKjAQnANDMwZy6sCuPND00w=} $ vi $M2_HOME/conf/settings.xml \u003cserver\u003e \u003cid\u003enexus-snapshot\u003c/id\u003e \u003cusername\u003eadmin\u003c/username\u003e \u003cpassword\u003e{nvTOxUicu5EHTqNwVFkrSKjAQnANDMwZy6sCuPND00w=}\u003c/password\u003e \u003c/server\u003e (windows) vbs MsgBox 사용하기 vbs 내용을 별도 파일MessageBox.vbs로 저장하고, cmd 창에서 cscript Z:/develop/script/MessageBox.vbs \"팝업 메시지\" 형태로 사용할 수 있습니다.\n(윈도우즈에서 백업 스크립트가 처리 완료되었음을 알릴 때 활용할 수 있습니다.)\nSet objArgs = WScript.Arguments messageText = objArgs(0) MsgBox messageText 백업 스크립트 새 창 보기\n(maven) deploy, release 관련 플러그인 spring-boot 를 배포할 때 의존성 라이브러리를 포함하여 executable-jar 파일을 생성하는 spring-boot:repackage 플러그인을 추가했습니다.\nmaven 기존 플러그인 maven-deploy-plugin 를 nexus-staging-maven-plugin 로 교체했습니다.\nrelease 버전의 아티팩트를 nexus 에 배포하고 버전을 올려주는 기능을 위해 maven-release-plugin 설정을 했습니다.\n\u003cplugins\u003e \u003cplugin\u003e \u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e \u003cartifactId\u003emaven-deploy-plugin\u003c/artifactId\u003e \u003cconfiguration\u003e \u003c!-- nexus-staging-maven-plugin 로 인해 skip 설정을 해야 합니다. --\u003e \u003cskip\u003etrue\u003c/skip\u003e \u003c/configuration\u003e \u003c/plugin\u003e \u003cplugin\u003e \u003cgroupId\u003eorg.sonatype.plugins\u003c/groupId\u003e \u003cartifactId\u003enexus-staging-maven-plugin\u003c/artifactId\u003e \u003cexecutions\u003e \u003cexecution\u003e \u003c!-- default-deploy 에 추가합니다. --\u003e \u003cid\u003edefault-deploy\u003c/id\u003e \u003cphase\u003edeploy\u003c/phase\u003e \u003cgoals\u003e \u003cgoal\u003edeploy\u003c/goal\u003e \u003c/goals\u003e \u003c/execution\u003e \u003c/executions\u003e \u003cconfiguration\u003e \u003c!-- nexus pro 버전에만 staging-repository 기능을 사용할 수 있습니다. --\u003e \u003cskipStaging\u003etrue\u003c/skipStaging\u003e \u003c/configuration\u003e \u003c/plugin\u003e \u003cplugin\u003e \u003cgroupId\u003eorg.springframework.boot\u003c/groupId\u003e \u003cartifactId\u003espring-boot-maven-plugin\u003c/artifactId\u003e \u003cexecutions\u003e \u003cexecution\u003e \u003c!-- default-install 에 추가합니다. --\u003e \u003c!-- deploy 을 실행하면 실행됩니다. --\u003e \u003cid\u003edefault-install\u003c/id\u003e \u003cphase\u003einstall\u003c/phase\u003e \u003cgoals\u003e \u003c!-- spring-boot-maven-plugin 의 repackage 가 실행되도록 합니다. --\u003e \u003cgoal\u003erepackage\u003c/goal\u003e \u003c/goals\u003e \u003c/execution\u003e \u003c/executions\u003e \u003c/plugin\u003e \u003cplugin\u003e \u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e \u003cartifactId\u003emaven-release-plugin\u003c/artifactId\u003e \u003cconfiguration\u003e \u003cautoVersionSubmodules\u003efalse\u003c/autoVersionSubmodules\u003e \u003c!-- release:perform 이 실행될 때 deploy 를 실행하여 --\u003e \u003c!-- spring-boot:repackage 까지 같이 실행되도록 합니다. --\u003e \u003cgoals\u003edeploy\u003c/goals\u003e \u003cscmCommentPrefix\u003e[build]\u003c/scmCommentPrefix\u003e \u003c/configuration\u003e \u003c/plugin\u003e \u003c/plugins\u003e (eclipse) path-tools (git-bash) 이클립스 Command Line Shell 버튼을 클릭할때 cmd 창이 아닌 git-bash 터미널이 열리도록 설정을 바꿀 수 있습니다.\n새 창 보기\n(git-bash) bash_profile.sh /etc/profile.d/bash_profile.sh\nalias dlog='cd /z/project/dlog' alias pilot='cd /z/project/pilot' alias deploy-dlog='/z/project/dlog/deploy.sh ' alias run-dlog='/z/project/dlog/run.sh ' alias ls='ls -F --color=auto --show-control-chars --time-style=long-iso ' (eclipse) ANSI Escape in Console 플러그인 ANSI Escape in Console 플러그인은 console 에 ANSI 색상 코드를 해당 색상으로 표시해주는 플러그인입니다.\n다른 ANSI 관련 플러그인은 console 의 텍스트를 복사(ctrl+c)할 때 색상코드까지 같이 복사되어 불편했는데 이 플러그인은 그런 부분이 개선되었습니다.\n새 창 보기\n(eclipse) Bash Editor 플러그인 Bash Editor 플러그인은 shell 스크립트 파일 편집을 할 때 구문강조 및 자동 완성 기능을 제공합니다.\n새 창 보기\n(eclipse) .md 파일 add bookmark Mylyn WikiText 플러그인으로 .md 파일을 열었을 경우에는 Add Bookmark 메뉴가 표시되지 않습니다.\nGeneric Text Editor 로 열어서 추가할 수 있으며 .md 파일 편집은 WikiText 로 하면 됩니다.\n(maven) help:evaluate 로컬 저장소 경로 mvn 명령으로 현재 설정된 로컬 저장소를 반환하는 goal 입니다.\n$ mvn help:evaluate -Dexpression=settings.localRepository -q -DforceStdout (maven) deploy:deploy-file 시 저장소 지정 pom.xml 에 포함되어있는 version 에 -SNAPSHOT 이 있으면 release 저장소에 deploy 할 수 없다는 오류가 발생하므로 주의가 필요합니다.\nMVN_ARGS=\"\" MVN_ARGS=\"${MVN_ARGS} -DpomFile=${PROJECT_BASE}/pom.xml\" MVN_ARGS=\"${MVN_ARGS} -Dfile=${PROJECT_BASE}/target/${JAR_FILE}\" # jar 파일명에 \"-SNAPSHOT\" 이 있으면 snapshot 저장소에 deploy 되어야 합니다. if [[ \"${JAR_FILE}\" = *\"-SNAPSHOT\"* ]]; then MVN_ARGS=\"${MVN_ARGS} -DrepositoryId=maven-snapshot\" MVN_ARGS=\"${MVN_ARGS} -Durl=http://nexus/repository/maven-snapshot/\" else MVN_ARGS=\"${MVN_ARGS} -DrepositoryId=maven-release\" MVN_ARGS=\"${MVN_ARGS} -Durl=http://nexus/repository/maven-release/\" fi mvn deploy:deploy-file $MVN_ARGS (git) pull.ff only git config --global pull.ff only 설정을 추가하면 됩니다.\n$ git pull origin main warning: Pulling without specifying how to reconcile divergent branches is discouraged. You can squelch this message by running one of the following commands sometime before your next pull: git config pull.rebase false # merge (the default strategy) git config pull.rebase true # rebase git config pull.ff only # fast-forward only You can replace \"git config\" with \"git config --global\" to set a default preference for all repositories. You can also pass --rebase, --no-rebase, or --ff-only on the command line to override the configured default per invocation. (maven) spring-boot:repackage packaging 이 jar 인 프로젝트를 mvn package 으로 jar 를 생성한 다음에 mvn spring-boot:repackage 을 실행해야 합니다.\n리패키징이되면 jar 아티팩트에 의존성으로 설정된 jar 파일들이 포함됩니다.\n아래는 리패키징이 정상이면 볼 수 있는 로그 입니다.\n[INFO] --- spring-boot-maven-plugin:2.6.1:repackage (default-cli) @ service-www --- [INFO] Replacing main artifact with repackaged archive (maven) Malformed \\uxxxx encoding. maven 빌드 시 Malformed \\uxxxx encoding. 가 발생하면 로컬 저장소를 삭제하고 빌드해주세요.\n(git) turn off crlf warning warning: LF will be replaced by CRLF in 메시지를 보고 싶지 않을 경우 아래 옵션을 추가합니다.\n$ git config --global core.safecrlf false (hugo) 전체 rebuild 아래 2개의 디렉토리의 파일들을 모두 삭제하고 빌드를 합니다.\n/resources, /public\n(eclipse) 이클립스 로그 Z:\\develop\\eclipse\\eclipse-jee-R-win32-x86_64\\workspace\\.metadata\\.plugins\\org.eclipse.m2e.logback.configuration wintail 다운로드\n(windows) setx cmd 에서 아래 명령을 실행하면 시스템 변수 에 추가됩니다.\nsetx /m JAVA_HOME \"D:\\develop\\java\\openjdk-11.0.2\" (plex) DaumMovie.bundle https://github.com/axfree/DaumMovie.bundle\n%LOCALAPPDATA%\\Plex Media Server\\Plug-ins 에서 압축 해제합니다.\n(nexus) curl PUT curl -u {id}:{passwd} -X PUT -v -T org/apache/poi/poi/3.10-FINAL/poi-3.10-FINAL.jar http://nexus/repository/maven-public-hosted/org/apache/poi/poi/3.10-FINAL/poi-3.10-FINAL.jar (windows) dism dism(배포 이미지 서비스 및 관리) 이미지 생성, 분할, 추가, 삭제, 추출, 적용, 마운트, 언 마운트, 커밋들이 가능하다.\n(eclipse) xml editor: tab to space xml editor 에서 tab 키 입력 시 space 가 입력되도록 변환하는 방법은 2가지를 설정해야 합니다.\nsingle-line: General \u003e Editors \u003e Text Editors: Insert spaces for tabs 체크 multi-line: XML \u003e XML Files \u003e Editor: Indent using spaces 선택 새 창 보기\n(eclipse) mybatipse 플러그인 mybatipse 플러그인은 Mapper의 메소드명과 mybatis의 \u003csql\u003e을 ctrl + L-click으로 연결해주는 편의성을 제공합니다.\n(erwin) database connection 우선 display 를 물리 모델로 변경합니다.\n상단 메뉴 Database \u003e Database Connection 선택하면 아래 팝업 창이 열립니다.\nConnection String: 의 값은 tnsnames.ora 에 등록된 항목으로 입력합니다.\n새 창 보기\n(regex) not matched word # string say hello world # regex \\b(?!hello)\\b\\w+ # string release-service-bom release-service-www snapshot-service-bom snapshot-service-www # regex ^release\\-(?!.*\\-bom).* (maven) release github \u003cscm\u003e \u003cconnection\u003escm:git:git@github.com:lislroow/pilot.git\u003c/connection\u003e \u003c/scm\u003e \u003cplugin\u003e \u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e \u003cartifactId\u003emaven-release-plugin\u003c/artifactId\u003e \u003cversion\u003e3.0.0-M1\u003c/version\u003e \u003cconfiguration\u003e \u003cautoVersionSubmodules\u003etrue\u003c/autoVersionSubmodules\u003e \u003cgoals\u003edeploy\u003c/goals\u003e \u003cscmCommentPrefix\u003e[jenkins]\u003c/scmCommentPrefix\u003e \u003c/configuration\u003e \u003c/plugin\u003e (git) tag # 태그 삭제 $ git tag -d framework-bom-0.2 'framework-bom-0.2' 태그 삭제함 (과거 2c5b9f1) $ git push origin :framework-bom-0.2 To github.com:lislroow/pilot.git - [deleted] framework-bom-0.2 $ # 태그 조회 $ git tag -l framework-* framework-bom-0.1 # 태그 추가 (Lightweight 태그) $ git tag framework-bom-0.2 # 태그 추가 (Annotated 태그) $ git tag -a framework-bom-0.2 -m \"Release framework-bom-0.2\" # 태그 보기 $ git show framework-bom-0.2 # 태그 원격저장소 push (모두 올리기) $ git push origin --tags (git) 특정 경로만 checkout 하기 $ git init $ git config core.sparseCheckout true #git config --local credential.helper \"\" $ git remote add -f origin git@github.com:lislroow/pilot.git $ echo \"bom/framework-bom/*\" \u003e .git/info/sparse-checkout $ git pull origin main (maven) version ranges artifact 의 scope 가 import 일 경우에는 [0.1,) 형태로 ranges 를 적용할 수 없습니다.\n\u003cdependencyManagement\u003e \u003cdependencies\u003e \u003c!-- mgkim.proto --\u003e \u003cdependency\u003e \u003cgroupId\u003emgkim.proto\u003c/groupId\u003e \u003cartifactId\u003eproto\u003c/artifactId\u003e \u003cversion\u003e[0.1,)\u003c/version\u003e \u003c!-- 오류 --\u003e \u003cversion\u003e0.1\u003c/version\u003e \u003c!-- 정상 --\u003e \u003ctype\u003epom\u003c/type\u003e \u003cscope\u003eimport\u003c/scope\u003e \u003c/dependency\u003e \u003c!-- //mgkim.proto --\u003e \u003c/dependencies\u003e \u003c/dependencyManagement\u003e (eclipse) STS Boot Dashboard filter 새 창 보기\n(eclipse) eclipse-update 이클립스를 업데이트 할 경우(플러그인 업데이트가 아닌), Can not remove ... eclipse.exe 오류가 발생할 수 있습니다.\n이 경우에는 아래 이미지와 같이 업데이트 진행 중에 eclipse.exe 파일을 eclipse.exe.bak 로 변경하면 업데이트가 오류없이 진행됩니다.\n새 창 보기\n(eclipse) scm ignore Preferences \u003e Version Control (Team) \u003e Ignored Resources\n아래 항목들을 추가 합니다.\n*target* *target*/* pom.xml.releaseBackup release.properties 새 창 보기\n(github) ssh key 등록 ssh-keygen -t ed25519 -C \"hi@mgkim.net\"\n생성된 공개키 파일, C:\\Users\\Administrator\\.ssh\\id_ed25519.pub 의 내용을 github 에 등록합니다.\ngithub 메뉴 경로: Settings \u003e SSH and GPG keys\nremote origin 변경\nssh-agent 는 공개키 인증을 위한 개인키를 보관하는 프로그램으로 여러 서버에 인증이 필요할 경우 사용할 수 있습니다.\n등록된 공개키 정상여부 확인을 하기 위해, 키 생성을 한 곳에서 ssh -T git@github.com 명령을 실행을 해봅니다.\n키 파일의 경로를 명시적으로 지정\nssh -v -i /C/Users/Administrator/.ssh/id_ed25519.pub -T git@github.com\nssh -i C:\\Users\\Administrator\\.ssh\\id_ed25519.pub -T git@github.com\nAdministrator@I5-1135G7 MINGW64 / $ ssh -T git@github.com The authenticity of host 'github.com (15.164.81.167)' can't be established. ED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU. This key is not known by any other names Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added 'github.com' (ED25519) to the list of known hosts. Hi lislroow! You've successfully authenticated, but GitHub does not provide shell access. github 에 key를 등록한 다음 cli 환경에서 사용하려면 아래 명령을 실행합니다.\n$ eval \"$(ssh-agent -s)\" Agent pid 126681 $ ps -ef | grep ssh-agent root 31343 1 0 12월14 ? 00:00:00 ssh-agent -s jenkins 126681 1 0 17:12 ? 00:00:00 ssh-agent -s jenkins 126683 126640 0 17:12 pts/1 00:00:00 grep --color=auto ssh-agent $ ssh-add ~/.ssh/id_ed25519 Identity added: /home/jenkins/.ssh/id_ed25519 (jenkins@mgkim.net) $ (github) unable to read askpass 오류 오류 상황입니다.\n$ git push origin (gnome-ssh-askpass:19816): Gtk-WARNING **: 10:22:08.209: cannot open display: error: unable to read askpass response from '/usr/libexec/openssh/gnome-ssh-askpass' Username for 'https://github.com': SSH_ASKPASS 변수를 unset 하면 됩니다.\n$ echo $SSH_ASKPASS /usr/libexec/openssh/gnome-ssh-askpass $ unset SSH_ASKPASS (github) Personal access tokens Settings \u003e Developer settings \u003e Personal access tokens 이동 후\nGenerate new token 버튼 클릭으로 token 생성 (repo 만 체크하면 push 할 수 있음)\ntoken 생성 후 이클립스에서 id에 email 입력, password 에 생성된 토큰 입력\n# token-name: centos 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 (eclipse) debugging 필수 옵션 디버깅 시 아래와 같은 오류가 발생할 경우 이클립스 옵션을 확인해보세요.\n오류 상황\n경로: Preferences \u003e Java \u003e Debug\n체크사항: Use advanced source lookup (JRE 1.5 and higher) 체크를 반드시 해제해주셔야 합니다.\n새 창 보기\n체크 유무에 따라 정상/오류 상황을 캡처한 이미지 입니다.\n새 창 보기\n(win) win 11 taskbar 그룹해제 아래 파일 다운로드 후 실행\n다운로드\n새 창 보기\n(maven) release 명령어\n$ mvn -B clean release:prepare release:perform deploy $M2_HOME/conf/settings.xml 파일\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003csettings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\"\u003e \u003cservers\u003e \u003cserver\u003e \u003cid\u003enexus-release\u003c/id\u003e \u003cusername\u003eadmin\u003c/username\u003e \u003cpassword\u003epasswd\u003c/password\u003e \u003c/server\u003e \u003cserver\u003e \u003cid\u003enexus-snapshot\u003c/id\u003e \u003cusername\u003eadmin\u003c/username\u003e \u003cpassword\u003epasswd\u003c/password\u003e \u003c/server\u003e \u003c/servers\u003e \u003cmirrors\u003e \u003cmirror\u003e \u003cid\u003enexus\u003c/id\u003e \u003cname\u003enexus\u003c/name\u003e \u003curl\u003ehttp://nexus/repository/maven-group/\u003c/url\u003e \u003cmirrorOf\u003e*\u003c/mirrorOf\u003e \u003c/mirror\u003e \u003c/mirrors\u003e \u003c/settings\u003e pom.xml 파일\n\u003cbuild\u003e \u003cplugins\u003e \u003cplugin\u003e \u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e \u003cartifactId\u003emaven-release-plugin\u003c/artifactId\u003e \u003cversion\u003e3.0.0-M1\u003c/version\u003e \u003c!-- 필수 사항 --\u003e \u003cconfiguration\u003e \u003cautoVersionSubmodules\u003etrue\u003c/autoVersionSubmodules\u003e \u003cgoals\u003edeploy\u003c/goals\u003e \u003cusername\u003emgkim\u003c/username\u003e \u003cpassword\u003epasswd\u003c/password\u003e \u003c/configuration\u003e \u003c!-- //필수 사항 --\u003e \u003c/plugin\u003e \u003c/plugins\u003e \u003c/build\u003e \u003c!-- 필수 사항 --\u003e \u003cscm\u003e \u003cconnection\u003escm:svn:svn://develop/test/trunk/proto.www\u003c/connection\u003e \u003c/scm\u003e \u003c!-- //필수 사항 --\u003e \u003cdistributionManagement\u003e \u003csnapshotRepository\u003e \u003cid\u003emgkim-snapshot\u003c/id\u003e \u003curl\u003ehttp://nexus/repository/maven-mgkim-snapshot/\u003c/url\u003e \u003c/snapshotRepository\u003e \u003crepository\u003e \u003cid\u003emgkim-release\u003c/id\u003e \u003curl\u003ehttp://nexus/repository/maven-mgkim-release/\u003c/url\u003e \u003c/repository\u003e \u003c/distributionManagement\u003e (maven) help:evaluate 명령어\nSNAPSHOT_NM=$(mvn -f pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout) (maven) dependency 명령어: dependency:resolve\njavadoc 다운로드\n$ mvn dependency:resolve -Dclassifier=javadoc 명령어: dependency:sources\nsources 다운로드\n$ mvn dependency:sources (maven) deploy:deploy-file 명령어\nset JAVA_HOME=Z:\\develop\\java\\openjdk-11.0.2 set M2_HOME=Z:\\develop\\build\\maven-3.6.3 set PATH=%JAVA_HOME%\\bin;%M2_HOME%\\bin;%PATH% set NEXUS_REPO=-DrepositoryId=nexus-release -Durl=http://nexus/repository/maven-public-hosted/ set GROUP_ID=net.mgkim set ARTIFACT_ID=spring-core set VERSION=1.0.0 set FILE=Z:\\mgkim-spring-core-1.0.0.jar %M2_HOME%\\bin\\mvn.cmd -U deploy:deploy-file -DgroupId=%GROUP_ID% -DartifactId=%ARTIFACT_ID% -Dversion=%VERSION% -Dpackaging=jar -Dfile=%FILE% %NEXUS_REPO% 플러그인\n\u003cbuild\u003e \u003cplugins\u003e \u003cplugin\u003e \u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e \u003cartifactId\u003emaven-deploy-plugin\u003c/artifactId\u003e \u003cversion\u003e3.0.0-M1\u003c/version\u003e \u003c/plugin\u003e \u003c/plugins\u003e \u003c/build\u003e 2021.12.14 nexus deploy 401 unauthorized\nmvn deploy 에 전달된 인자 -DrepositoryId=nexus-release 이 참조하는 settings.xml 의 \u003cServers\u003e 의 id/passwd 정보가 있어야 합니다.\n새 창 보기\n\u003cservers\u003e \u003cserver\u003e \u003cid\u003enexus-release\u003c/id\u003e \u003cusername\u003eadmin\u003c/username\u003e \u003cpassword\u003e***(passwd)***\u003c/password\u003e \u003c/server\u003e \u003c/servers\u003e 2021.12.14 nexacro 라이브러리 추가\n스크립트 보기\n(maven) settings.xml 파일 $M2_HOME/conf/settings.xml\n새 창 보기\n(maven) password 암호화 # 평문 `mypassword` 는 `{ODOdTfm09eMHYfUVt4vkUfm9dw1pkSRC+HAXsuqE0p0=}` 문자열로 암호화됨 $ mvn --encrypt-master-password mypassword {ODOdTfm09eMHYfUVt4vkUfm9dw1pkSRC+HAXsuqE0p0=} (java) vmargs (2개) # request.getRemoteAddr() 가 IPv6 로 출력되는 경우 JAVA_OPTS=\"${JAVA_OPTS} -Djava.net.preferIPv4Stack=true\" # cannot be cast to javax.net.ssl.HttpsURLConnection # URLConnection 객체를 사용할 때 HttpsURLConnection 이 반환되지 않는 경우 JAVA_OPTS=\"${JAVA_OPTS} -DUseSunHttpHandler=true\" (win) win11 system-tray 설정 cmd 창에서 아래 명령어를 입력하여 시스템 트레이에 모든 아이콘을 표시하도록 합니다.\n시스템 아이콘 켜기 또는 끄기 를 선택하여 시계를 표시할 수도 있습니다.\n\u003e explorer shell:::{05d7b0f4-2121-4eff-bf6b-ed3f69b894d9} 새 창 보기\n(win) font 추천 hugo-site\n/assets/scss/_variables_project.scss\n$google_font_name: \"Bitstream Vera Sans Mono\" !default; $google_font_family: \"Bitstream Vera Sans Mono:300,300i,400,400i,700,700i\" !default; $web-font-path: \"http://fonts.cdnfonts.com/css/bitstream-vera-sans-mono\"; scss 파일의 수정된 내용이 적용되려면 npm 빌드 환경이 필요합니다.\n# 초기 구성을 위해 준비할 것 $ git submodule add -b master https://github.com/lislroow/lislroow.github.io.git public $ git clone --recurse-submodules --depth 1 https://github.com/google/docsy.git themes/docsy # 2개의 npm 패키지 설치 $ npm install autoprefixer -D --save $ npm install postcss-cli -D --save $ npm install postcss -D --save # npm 패키지 설치 후 hugo -t docsy 로 build 하면 # `/assets/scss/_variables_project.scss` 파일에 수정된 내용을 포함하여 # 아래 경로에 build 결과 파일을 생성합니다. # `/resources/_gen/assets/scss/scss/main.scss_4853eb546e7a6c0898ed71feae7357c0.content` system\nBitstream 은 coding 목적으로 많이 사용되는 font 입니다.\n새 창 보기\n다운로드: BitstreamVeraSansMono.ttf\nColors and Fonts \u003e Basic \u003e Text Font 를 선택하고 Edit 버튼을 클릭하면 변경할 수 있습니다.\n새 창 보기\n(eclipse) hidpi 설정 # eclipse.ini 파일의 맨 마지막에 추가 -Dswt.autoScale=150 # 150 == 1.5배 새 창 보기\n(win) 절전 cmd %windir%\\System32\\rundll32.exe powrprof.dll SetSuspendState (vmware) 실행 cmd set \"VMWARE_HOME=C:\\Program Files (x86)\\VMware\\VMware Workstation\" set \"PATH=%PATH%;%VMWARE_HOME%\" vmrun -T ws start \"Z:\\centos7-develop\\centos7-develop.vmx\" nogui (win) wol 설정 절전 상태에서 wol 이 작동하려면 아래 옵션을 선택해야 합니다.\n새 창 보기\n(win) port-forwarding cmd # 설정 \u003e netsh interface portproxy add v4tov4 listenport=8222 listenaddress=0.0.0.0 connectport=22 connectaddress=172.28.200.20 # 해제 \u003e netsh interface portproxy delete v4tov4 listenport=8222 listenaddress=0.0.0.0 # 확인 \u003e netsh interface portproxy show v4tov4 (win) 파일 공유 설정 windows 에서 파일 공유 시 권한이 없다는 메시지가 나오는 경우가 있음\nwindows 계정에 패스워드가 설정되어 있지 않으면 발생하는 사항\n# 비밀번호 설정하기 \u003e net user administrator * centos 에서 windows 공유 디렉토리 mount\n$ mkdir /share $ mount -t cifs //172.28.200.1/share /share -o username=administrator,password=1 $ df -h Filesystem Size Used Avail Use% Mounted on devtmpfs 3.8G 0 3.8G 0% /dev tmpfs 3.9G 12K 3.9G 1% /dev/shm tmpfs 3.9G 14M 3.8G 1% /run tmpfs 3.9G 0 3.9G 0% /sys/fs/cgroup /dev/nvme0n1p9 76G 15G 61G 20% / /dev/nvme0n1p8 3.0G 2.7G 378M 88% /var /dev/nvme0n1p7 5.0G 2.6G 2.4G 53% /home /dev/nvme0n1p2 100G 27G 74G 27% /data /dev/nvme0n1p5 20G 5.0G 16G 25% /app /dev/nvme0n1p3 30G 9.8G 21G 33% /prod /dev/nvme0n1p1 474M 149M 326M 32% /boot tmpfs 781M 0 781M 0% /run/user/0 //172.28.200.1/share 345G 284G 62G 83% /share $ vi /etc/fstab //172.28.200.1/share /share cifs username=administrator,password=1 0 0 (vmware) nat 설정 vmware \u003e Edit \u003e Virtual Network Editor\nNAT Settings... \u003e Gateway IP 확인\nSubnet IP: 172.28.200.0, Subnet mask: 255.255.255.0\nvmware 의 guest os는 172.28.200.2~254 로 설정하고, host os(windows) 와 통신은 172.28.200.1 로 합니다.\n(7z) 7z 압축 cmd \u003e \"C:\\Program Files\\7-Zip\\7z.exe\" a -mx7 -mmt Z:\\project.zip \"Z:\\project\" \u003e \"C:\\Program Files\\7-Zip\\7z.exe\" a -mx5 -t7z Z:\\project.zip \"Z:\\project\" -xr!target -xr!node_modules target 디렉토리와 node_modules 디렉토리는 압축 대상에서 제외됩니다.\n(jmeter) jmeter 실행 cmd jmeter 실행 결과 디렉토리에 timestamp 변수 사용하기\n\u003e set ts=%DATE:~0,4%%DATE:~5,2%%DATE:~8,2%_%TIME:~0,2%%TIME:~3,2%%TIME:~6,2% \u003e apache-jmeter-5.4.1\\bin\\jmeter.bat -n -t jmeter-mgkim-core.jmx -l data\\%ts%.csv -e -o data\\%ts% (win) xcopy cmd \u003e xcopy C:\\exp\\*.* Z:\\exp\\ /d/i/s/c/y (chrome) https 자동 접속 현상 chrome://net-internals/#hsts 로 이동\nDelete domain security policies 에서 해당 도메인 delete\nchrome://restart chrome 재시작\n새 창 보기\n(git) config cmd \u003e git config --global core.autocrlf true \u003e git config --global user.email hi@mgkim.net \u003e git config --global user.name 김명구 (git) pre-commit shell git-commit 을 하기 전에 사전 검사를 하기 위한 코드를 bash-shell 로 체크하는 방법입니다.\n# project/.git/hooks/pre-commit #!/bin/sh LIST=$(git diff --cached --name-only --diff-filter=ACRM) for file in $LIST do if [ $file = \".settings/org.eclipse.wst.common.component\" ]; then echo \"이클립스 설정 파일($file)은 commit을 할 수 없습니다.\" exit 1 fi done exit 0 (oracle) client 무설치 설정 시스템변수\n새 창 보기\nHKEY_LOCAL_MACHINE\\SOFTWARE\\ORACLE\\KEY_client\n새 창 보기\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\ORACLE\\KEY_client\n새 창 보기\ntnsnames.ora\n새 창 보기\n(oracle) sqlplus C:\\Users\\Administrator\u003esqlplus /nolog SQL*Plus: Release 12.1.0.2.0 Production on 목 9월 2 11:39:53 2021 Copyright (c) 1982, 2014, Oracle. All rights reserved. SQL\u003e conn SPADBA/password@develop:1521/SPADBP 연결되었습니다. SQL\u003e show con_name CON_NAME ------------------------------ CDB$ROOT SQL\u003e set line 150 pages 1000 SQL\u003e col name for a30 SQL\u003e select con_id, dbid, name, open_mode from v$containers order by 1; CON_ID DBID NAME OPEN_MODE ---------- ---------- ------------------------------ ---------- 1 1588065228 CDB$ROOT READ WRITE 2 2599163564 PDB$SEED READ ONLY 3 673775647 SPADBP READ WRITE SQL\u003e alter session set container=SPADBP; 세션이 변경되었습니다. SQL\u003e show con_name CON_NAME ------------------------------ SPADBP SQL\u003e (oracle) object 조회 query dictionary 뷰에서부터 object 정보를 확인하고 생성된 상태를 확인할 수 있습니다.\nsqlgate 에 단축키로 등록하고 사용하면 유용할 query 입니다.\n# 테이블 검색 SELECT /* (Alt+1) 테이블 검색 */ A.OWNER, A.COMMENTS AS T_COMMENT, A.TABLE_NAME AS T_NAME, B.COLUMN_NAME AS C_NAME, B.COMMENTS AS C_COMMENT, B1.COLUMN_ID FROM ALL_TAB_COMMENTS A, ALL_COL_COMMENTS B, ALL_TAB_COLS B1 WHERE 1=1 AND A.TABLE_NAME LIKE '%\u0026Var%' AND A.TABLE_NAME = B.TABLE_NAME AND B.TABLE_NAME = B1.TABLE_NAME AND B.COLUMN_NAME = B1.COLUMN_NAME AND A.OWNER = B.OWNER AND B.OWNER = B1.OWNER(+) AND A.OWNER IN ('SPADBA') ORDER BY A.OWNER DESC, B1.COLUMN_ID, A.COMMENTS ; # 컬럼 검색 SELECT /* (Alt+2) 컬럼 검색 */ A.OWNER, A.COMMENTS AS T_COMMENT, A.TABLE_NAME AS T_NAME, B.COLUMN_NAME AS C_NAME, B.COMMENTS AS C_COMMENT, B1.COLUMN_ID FROM ALL_TAB_COMMENTS A, ALL_COL_COMMENTS B, ALL_TAB_COLS B1, ALL_CONS_COLUMNS C WHERE 1=1 AND (B.COLUMN_NAME LIKE '%\u0026Var%' OR B.COMMENTS LIKE '%\u0026Var%') AND A.TABLE_NAME = B.TABLE_NAME AND B.TABLE_NAME = C.TABLE_NAME(+) AND B.TABLE_NAME = B1.TABLE_NAME AND B.COLUMN_NAME = B1.COLUMN_NAME AND A.OWNER = B.OWNER AND B.OWNER = B1.OWNER(+) AND B.OWNER = C.OWNER AND B.COLUMN_NAME = C.COLUMN_NAME(+) AND C.CONSTRAINT_NAME(+) LIKE '%PK' AND A.OWNER IN ('SPADBA') AND (A.TABLE_NAME LIKE 'E%' OR A.TABLE_NAME LIKE 'CB%') ORDER BY A.OWNER DESC, A.COMMENTS, B1.COLUMN_ID, C.POSITION ; # 테이블 조회 SELECT /* (Alt+3) 테이블 조회 */ * FROM \u0026Var WHERE ROWNUM \u003c 200 ; # dict 검색 SELECT /* (Alt+4) DICT 검색 */ * FROM DICT WHERE TABLE_NAME LIKE '%'||'\u0026Var'||'%' ORDER BY TABLE_NAME ; (git) git-remote $ git remote -v origin https://github.com/lislroow/dlog.git (fetch) origin https://github.com/lislroow/dlog.git (push) $ git remote set-url origin git@github.com:lislroow/dlog.git $ git remote -v origin git@github.com:lislroow/dlog.git (fetch) origin git@github.com:lislroow/dlog.git (push) (git) git-log git log --branches --not --remotes: commit 목록 중 원격지에 push 하지 않은 항목 출력 git log --oneline --graph: commit 목록을 1 line 으로 출력하면서 graph 로 표시 git log -p -1: commit 목록 중 최근 1개에 대하여 -p(patch) diff 출력 git log -p -S 문자열: patch 에 문자열이 포함된 commit 목록 출력 git log --since='2022-02-26 14:00': ‘2022-02-26 14:00’ 부터 지금까지의 commit 목록 출력 (since/until) 주요 옵션\n옵션 설명 -p –stat –shortstat –name-only –name-status –graph –pretty –oneline 범위 제한 옵션\n옵션 설명 -(n) –since, –after –until, –before –author –committer –grep commit 메시지의 텍스트를 grep 합니다. –S patch 내용의 텍스트를 grep 합니다. (git) git-restore git restore path-to-file: working-directory 의 파일 변경 취소 git restore --staged path-to-file: Index 의 파일 변경 취소 (git) git-reset git reset -- path-to-file: Index 의 파일(Index에 파일이 있다는 것은 staged 상태임)을 unstaging 으로 변경 git checkout path-to-file reset 명령은 HEAD가 가리키는 브랜치의 commit 을 바꿉니다.\n옵션은 --soft, --mixed, --hard 3가지가 있으며 기본은 --mixed 입니다.\n특정 파일 1개를 3회 commit 을 한 상태, 각 commit 의 해시 값은 v1, v2, v3 라고 가정합니다.\nreset 명령으로 commit 상태를 v2로 변경할 때, 옵션별 실행 결과입니다.\n옵션 결과 --soft v2 HEAD: v2, Index: v3, working-directory: v3 --mixed v2 HEAD: v2, Index: v2, working-directory: v3 --hard v2 HEAD: v2, Index: v2, working-directory: v2 commit 해시 값을 파라미터로 전달하지 않고, 이전의 commit 해시 값으로 변경할 경우 아래와 같이 실행합니다.\ngit reset --soft HEAD~\n같이 commit 해야할 파일을 실수로 누락했을 경우 사용될 수 있습니다.\nreset 명령으로 Index 의 특정 파일을 HEAD에서 특정 commit 버전에 포함된 파일로 변경할 수 있습니다.\ngit reset v2 -- file.txt\nHEAD 의 v2 버전 상태의 file.txt를 Index에 적용합니다.\n최근 2건의 commit 을 하나로 합쳐서 1건의 commit 으로 정리하고자 할 때 아래와 같이 reset 명령을 사용합니다.\ngit reset --soft HEAD~2 혹은 git reset --soft HEAD@{2}\nreset 명령은 Untracked 파일(로컬에서 신규 생성한 파일)은 그대로 유지합니다.\n(git) git-push git push origin +test: 원격지 브랜치 test에 강제 push 를 합니다. git push origin test -f 와 같습니다. (강제 push를 하게되면 원격지의 commit history 가 덮어씌워 집니다.) (git) git-clean Untracked 파일만 삭제하는 명령입니다. (tracked 파일은 대상이 아닙니다.)\ngit clean -f: 파일만 삭제 git clean -f -d: 파일 및 디렉토리 삭제 git clean -f -d -x: 파일 및 디렉토리 및 무시된 파일 삭제 git clean -n: 삭제될 대상을 확인 (git) git-checkout git checkout branch와 git reset --hard 브랜치 는\n(git) git-commit git commit --amend: Index 에 추가된 항목으로 commit 을 재작성 $ git commit -m '메시지' $ git add forgotten_file $ git commit --amend (git) git-ls-files git ls-files -s: (Index) (git) git-branch git branch --list git branch -vv git branch -avv: 로컬/원격지 모든 브랜치 조회하면서 tracking 상태 확인 git branch test --track origin/main: 원격지 origin/main 브랜치를 start-point 로 하는 test 브랜치 생성 git branch --set-upstream-to origin/main: 현재 로컬 브랜치를 원격지 origin/main 브랜치로 tracking 하도록 설정 git branch test --set-upstream-to origin/main: 로컬 브랜치 test를 원격지 origin/main 브랜치로 tracking 하도록 설정 git switch test git push origin test: 로컬 브랜치 test를 원격지에 생성 git push origin :test: 원격지 브랜치 test를 삭제 git branch -d: merge 하지 않은 커밋을 담고 있는 브랜치는 git branch -D 로 강제 삭제할 수 있음 git branch -r: 원격지 브랜치 조회 git branch -a: 로컬/원격지 브랜치 모두 조회 git remote show origin: 로컬/원격지 tracking 상태 확인 git remote prune origin: 원격 브랜치와 유효하지 않는 참조를 삭제 git remote update --prune git fetch -p: fetch 를 실행하면서 원격 브랜치의 참조가 유효하지 않는 상태의 브랜치를 제거 (git) git-config (alias) git config --global alias.br branch git config --global alias.unstage 'reset HEAD --' git config --global alias.last 'log -1 HEAD' (git) git-diff git diff git diff HEAD git diff HEAD --color-words git diff HEAD --word-diff (apache) httpd.conf ServerRoot \"/etc/httpd\" Listen 80 Include conf.modules.d/*.conf User apache Group web ServerAdmin hi@mgkim.net ServerName develop:80 \u003cDirectory /\u003e AllowOverride none Require all denied \u003c/Directory\u003e DocumentRoot \"/var/www/html\" \u003cFiles \".ht*\"\u003e Require all denied \u003c/Files\u003e ErrorLog \"/outlog/WEB/httpd/error.log\" LogLevel warn \u003cIfModule log_config_module\u003e LogFormat \"%h %l %u %t \\\"%r\\\" %\u003es %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined LogFormat \"%h %l %u %t \\\"%r\\\" %\u003es %b\" common \u003cIfModule logio_module\u003e LogFormat \"%h %l %u %t \\\"%r\\\" %\u003es %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\" %I %O\" combinedio \u003c/IfModule\u003e CustomLog \"/outlog/WEB/httpd/access.log\" combined \u003c/IfModule\u003e \u003cIfModule alias_module\u003e ScriptAlias /cgi-bin/ \"/var/www/cgi-bin/\" \u003c/IfModule\u003e \u003cDirectory \"/var/www/cgi-bin\"\u003e AllowOverride None Options None Require all granted \u003c/Directory\u003e \u003cIfModule mime_module\u003e TypesConfig /etc/mime.types AddType application/x-compress .Z AddType application/x-gzip .gz .tgz AddType text/html .shtml AddOutputFilter INCLUDES .shtml \u003c/IfModule\u003e AddDefaultCharset UTF-8 \u003cIfModule mime_magic_module\u003e MIMEMagicFile conf/magic \u003c/IfModule\u003e EnableSendfile on IncludeOptional conf.d/*.conf (apache) ssl.conf Listen 443 https SSLPassPhraseDialog exec:/usr/libexec/httpd-ssl-pass-dialog SSLSessionCache shmcb:/run/httpd/sslcache(512000) SSLSessionCacheTimeout 300 SSLRandomSeed startup file:/dev/urandom 256 SSLRandomSeed connect builtin SSLCryptoDevice builtin \u003cVirtualHost _default_:443\u003e ServerName develop ErrorLog /outlog/WEB/httpd/develop-error_ssl.log TransferLog /outlog/WEB/httpd/develop-access_ssl.log LogLevel warn SSLEngine on SSLProtocol all -SSLv2 -SSLv3 SSLCipherSuite HIGH:3DES:!aNULL:!MD5:!SEED:!IDEA SSLCertificateFile /etc/httpd/conf.d/certs/develop.crt SSLCertificateKeyFile /etc/httpd/conf.d/certs/develop.key \u003cFiles ~ \"\\.(cgi|shtml|phtml|php3?)$\"\u003e SSLOptions +StdEnvVars \u003c/Files\u003e \u003cDirectory \"/var/www/cgi-bin\"\u003e SSLOptions +StdEnvVars \u003c/Directory\u003e BrowserMatch \"MSIE [2-5]\" nokeepalive ssl-unclean-shutdown downgrade-1.0 force-response-1.0 CustomLog /outlog/WEB/httpd/default-request_ssl.log \"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \\\"%r\\\" %b\" \u003c/VirtualHost\u003e (apache) vhost-centos8.conf \u003cVirtualHost *:80\u003e ServerName centos8 RewriteEngine On RewriteCond %{HTTPS} !=On [NC] RewriteRule /(.*) https://centos8/$1 [P,L] #RewriteCond %{HTTP:Upgrade} =websocket [NC] #RewriteRule /(.*) wss://centos8/$1 [P,L] #RewriteCond %{HTTP:Upgrade} !=websocket [NC] #RewriteRule /(.*) https://centos8/$1 [P,L] \u003c/VirtualHost\u003e \u003cVirtualHost *:443\u003e ServerName centos8 SSLEngine On SSLProtocol all -SSLv2 SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5 SSLCertificateFile /etc/cockpit/ws-certs.d/centos8.crt SSLCertificateKeyFile /etc/cockpit/ws-certs.d/centos8.key ErrorLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/centos8-error.log.%Y-%m-%d 86400 +540\" CustomLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/centos8-access.log.%Y-%m-%d 86400 +540\" combined ProxyRequests Off ProxyPreserveHost On # AH01961: SSL Proxy requested for centos8:443 but not enabled [Hint: SSLProxyEngine] SSLProxyEngine On AllowEncodedSlashes On Header set Access-Control-Allow-Origin \"*\" RequestHeader set X-Forwarded-Proto https \u003cProxy balancer://cluster1\u003e BalancerMember https://127.0.0.1:8000 \u003c/Proxy\u003e ProxyPass / balancer://cluster1/ stickysession=JSESSIONID|jsessionid ProxyPassReverse / balancer://cluster1/ RewriteEngine On RewriteCond %{HTTP:Upgrade} =websocket [NC] RewriteRule /(.*) wss://127.0.0.1:8000/$1 [P,L] \u003c/VirtualHost\u003e (apache) vhost-nexus.conf \u003cVirtualHost *:80\u003e ServerName nexus RewriteEngine On RewriteCond %{HTTPS} !=On RewriteRule /(.*) https://nexus.mgkim.net/$1 [QSA,R,L] \u003c/VirtualHost\u003e \u003cVirtualHost *:443\u003e ServerName nexus SSLEngine On SSLProtocol all -SSLv2 SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5 SSLCertificateFile /etc/httpd/conf.d/certs/nexus.crt SSLCertificateKeyFile /etc/httpd/conf.d/certs/nexus.key RewriteEngine On RewriteRule /(.*) https://nexus.mgkim.net/$1 [QSA,R,L] \u003c/VirtualHost\u003e ### mgkim.net \u003cVirtualHost *:80\u003e ServerName nexus.mgkim.net RewriteEngine On RewriteCond %{HTTPS} !=On RewriteRule /(.*) https://%{HTTP_HOST}/$1 [QSA,R,L] \u003c/VirtualHost\u003e \u003cVirtualHost *:443\u003e ServerName nexus.mgkim.net ErrorLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/nexus.mgkim.net_ssl-error.log.%Y-%m-%d 86400 +540%\" CustomLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/nexus.mgkim.net_ssl-access.log.%Y-%m-%d 86400 +540%\" combined SSLEngine On SSLProtocol all -SSLv2 SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5 SSLCertificateFile /etc/httpd/conf.d/certs/STAR.mgkim.net.crt SSLCertificateKeyFile /etc/httpd/conf.d/certs/STAR.mgkim.net.key AllowEncodedSlashes On Header set Access-Control-Allow-Origin \"*\" ProxyRequests Off ProxyPreserveHost On \u003cProxy *\u003e Require all granted \u003c/Proxy\u003e ProxyPass / http://127.0.0.1:8100/ ProxyPassReverse / http://127.0.0.1:8100/ RequestHeader set X-Forwarded-Proto \"https\" #ProxyPassMatch ^/(.*)$ http://127.0.0.1:8100/$1 \u003c/VirtualHost\u003e (apache) vhost-gitlab.conf \u003cVirtualHost *:80\u003e ServerName gitlab RewriteEngine On RewriteCond %{HTTPS} !=On RewriteRule /(.*) https://gitlab.mgkim.net/$1 [QSA,R,L] \u003c/VirtualHost\u003e \u003cVirtualHost *:443\u003e ServerName gitlab SSLEngine On SSLProtocol all -SSLv2 SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5 SSLCertificateFile /etc/httpd/conf.d/certs/gitlab.crt SSLCertificateKeyFile /etc/httpd/conf.d/certs/gitlab.key RewriteEngine On RewriteRule /(.*) https://gitlab.mgkim.net/$1 [QSA,R,L] \u003c/VirtualHost\u003e ### mgkim.net \u003cVirtualHost *:80\u003e ServerName gitlab.mgkim.net RewriteEngine On RewriteCond %{HTTPS} !=On RewriteRule /(.*) https://%{HTTP_HOST}/$1 [QSA,R,L] \u003c/VirtualHost\u003e \u003cVirtualHost *:443\u003e ServerName gitlab.mgkim.net DocumentRoot \"/opt/gitlab/embedded/service/gitlab-rails/public\" ErrorLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/gitlab.mgkim.net_ssl-error.log.%Y-%m-%d 86400 +540\" CustomLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/gitlab.mgkim.net_ssl-access.log.%Y-%m-%d 86400 +540\" combined SSLEngine On SSLProtocol all -SSLv2 SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5 SSLCertificateFile /etc/httpd/conf.d/certs/STAR.mgkim.net.crt SSLCertificateKeyFile /etc/httpd/conf.d/certs/STAR.mgkim.net.key ProxyRequests Off ProxyPreserveHost On \u003cProxy gitlab\u003e Require all granted \u003c/Proxy\u003e AllowEncodedSlashes On Header set Access-Control-Allow-Origin \"*\" ProxyPass / http://127.0.0.1:8200/ ProxyPassReverse / http://127.0.0.1:8200/ \u003c/VirtualHost\u003e (apache) vhost-jenkins.conf \u003cVirtualHost *:80\u003e ServerName jenkins RewriteEngine On RewriteCond %{HTTPS} !=On RewriteCond %{REQUEST_URI} ^/(computer)/.*$ RewriteRule /(.*) http://localhost:8400/$1 [QSA,P,L] RewriteCond %{REQUEST_URI} ^/(wsagents)/.*$ RewriteRule /(.*) ws://localhost:8400/$1 [QSA,P,L] RewriteRule /(.*) https://jenkins.mgkim.net/$1 [QSA,R,L] \u003c/VirtualHost\u003e \u003cVirtualHost *:443\u003e ServerName jenkins SSLEngine On SSLProtocol all -SSLv2 SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5 SSLCertificateFile /etc/httpd/conf.d/certs/jenkins.crt SSLCertificateKeyFile /etc/httpd/conf.d/certs/jenkins.key RewriteEngine On RewriteRule /(.*) https://jenkins.mgkim.net/$1 [QSA,R,L] \u003c/VirtualHost\u003e ### mgkim.net \u003cVirtualHost *:80\u003e ServerName jenkins.mgkim.net RewriteEngine On RewriteCond %{HTTPS} !=On RewriteCond %{REQUEST_URI} ^/(computer)/.*$ RewriteRule /(.*) http://localhost:8400/$1 [QSA,P,L] RewriteCond %{REQUEST_URI} ^/(wsagents)/.*$ RewriteRule /(.*) ws://localhost:8400/$1 [QSA,P,L] RewriteRule /(.*) https://jenkins.mgkim.net/$1 [QSA,R,L] \u003c/VirtualHost\u003e \u003cVirtualHost *:443\u003e ServerName jenkins.mgkim.net ErrorLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/jenkins.mgkim.net_ssl-error.log.%Y-%m-%d 86400 +540\" CustomLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/jenkins.mgkim.net_ssl-access.log.%Y-%m-%d 86400 +540\" combined SSLEngine On SSLProtocol all -SSLv2 SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5 SSLCertificateFile /etc/httpd/conf.d/certs/STAR.mgkim.net.crt SSLCertificateKeyFile /etc/httpd/conf.d/certs/STAR.mgkim.net.key AllowEncodedSlashes On Header set Access-Control-Allow-Origin \"*\" RewriteEngine On RewriteCond %{HTTP:Upgrade} =websocket [NC] RewriteRule /(.*) ws://localhost:8400/$1 [P,L] RewriteCond %{HTTP:Upgrade} !=websocket [NC] RewriteRule /(.*) http://localhost:8400/$1 [P,L] \u003c/VirtualHost\u003e (apache) vhost-dlog.conf \u003cVirtualHost *:80\u003e ServerName dlog RewriteEngine On RewriteCond %{HTTPS} !=On RewriteRule /(.*) https://dlog.mgkim.net/$1 [QSA,R,L] \u003c/VirtualHost\u003e \u003cVirtualHost *:443\u003e ServerName dlog SSLEngine On SSLProtocol all -SSLv2 SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5 SSLCertificateFile /etc/httpd/conf.d/certs/dlog.crt SSLCertificateKeyFile /etc/httpd/conf.d/certs/dlog.key RewriteEngine On RewriteRule /(.*) https://dlog.mgkim.net/$1 [QSA,R,L] \u003c/VirtualHost\u003e ### mgkim.net \u003cVirtualHost *:80\u003e ServerName dlog.mgkim.net RewriteEngine On RewriteCond %{HTTPS} !=On RewriteRule /(.*) https://%{HTTP_HOST}/$1 [QSA,R,L] \u003c/VirtualHost\u003e \u003cVirtualHost *:443\u003e ServerName dlog.mgkim.net #DocumentRoot \"/opt/gitlab/embedded/service/gitlab-rails/public\" ErrorLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/dlog.mgkim.net_ssl-error.log.%Y-%m-%d 86400 +540\" CustomLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/dlog.mgkim.net_ssl-access.log.%Y-%m-%d 86400 +540\" combined SSLEngine On SSLProtocol all -SSLv2 SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5 SSLCertificateFile /etc/httpd/conf.d/certs/STAR.mgkim.net.crt SSLCertificateKeyFile /etc/httpd/conf.d/certs/STAR.mgkim.net.key ProxyRequests Off ProxyPreserveHost On \u003cProxy gitlab\u003e Require all granted \u003c/Proxy\u003e AllowEncodedSlashes On Header set Access-Control-Allow-Origin \"*\" ProxyPass / http://127.0.0.1:1313/ ProxyPassReverse / http://127.0.0.1:1313/ \u003c/VirtualHost\u003e (apache) vhost-dwww.conf \u003cVirtualHost *:80\u003e ServerName dwww ErrorLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/dwww-error.log.%Y-%m-%d 86400 +540\" CustomLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/dwww-access.log.%Y-%m-%d 86400 +540\" combined AllowEncodedSlashes On # reverse proxy 사용 시 Off ProxyRequests Off ProxyPreserveHost On # BALANCER_WORKER_ROUTE: BalancerMember 의 route 값을 쿠키에 포함 (cluster1, cluster2) Header add Set-Cookie \"ROUTEID=.%{BALANCER_WORKER_ROUTE}e; path=/\" env=BALANCER_ROUTE_CHANGED Header set Access-Control-Allow-Origin \"*\" \u003cProxy balancer://cluster\u003e BalancerMember http://127.0.0.1:7100 route=cluster1 BalancerMember http://127.0.0.1:7101 route=cluster2 ProxySet stickysession=ROUTEID ## lbmethod # byrequests: 요청별 분배 # bytraffic: byte 트래픽 가중치 분배 # bybusyness: 보류중 요청 분배 #ProxySet lbmethod=byrequests \u003c/Proxy\u003e ProxyPass / balancer://cluster/ ProxyPassReverse / balancer://cluster/ \u003c/VirtualHost\u003e (apache) weblogic-connector LoadModule weblogic_module modules/mod_wl_24.so \u003cIfModule mod_weblogic.c\u003e WebLogicCluster IP:PORT,IP:PORT,IP:PORT ConnectTimeoutSecs 8 ConnectRetrySecs 2 Idempotent OFF DynamicServerList OFF MatchExpression * KeepAliveEnabled OFF \u003c/IfModule\u003e \u003cLocation /api \u003e WLSRequest On #SetHandler weblogic-handler WebLogicCluster IP:PORT,IP:PORT,IP:PORT #Idempotent OFF \u003c/Location\u003e (apache) selinux chcon -Rt httpd_log_t /outlog/WEB chcon -Rt httpd_sys_content_t /app/WEB/dlog setsebool -P httpd_can_network_connect on systemctl restart httpd (openssl) 인증서 생성하기 개인키(domain.key)와 인증서(domain.crt) 파일을 동시에 생성하는 스크립트 입니다.\n[root@develop /etc/httpd/conf.d/certs]$ cat create-cert.sh DOMAIN=$1 openssl req -x509 -nodes -days 730 -newkey rsa:2048 -keyout $DOMAIN.key -out $DOMAIN.crt -config \u003c(cat \u003c\u003c- TEXT [req] distinguished_name = req_distinguished_name x509_extensions = v3_req prompt = no [req_distinguished_name] countryName = KR stateOrProvinceName = Seoul localityName = Seonyudo organizationName = SPACESOFT organizationalUnitName = Dev Team CN = $DOMAIN [v3_req] keyUsage = critical, digitalSignature, keyAgreement extendedKeyUsage = serverAuth subjectAltName = @alt_names [alt_names] DNS.1 = $DOMAIN TEXT) -sha256 [root@develop /etc/httpd/conf.d/certs]$ (oracle12) sysctl 설정 파일: /etc/sysctl.conf\nfs.aio-max-nr = 1048576 fs.file-max = 6815744 kernel.shmall = 2097152 kernel.shmmax = 4056393728 kernel.shmmni = 4096 kernel.sem = 250 32000 100 128 net.ipv4.ip_local_port_range = 9000 65500 net.core.rmem_default = 262144 net.core.rmem_max = 4194304 net.core.wmem_default = 262144 net.core.wmem_max = 1048586 반영: sysctl -p\n확인: sysctl -a\n(oracle12) limits 설정 /etc/security/limits.conf\noracle soft nproc 2047 oracle hard nproc 16384 oracle soft nofile 1024 oracle hard nofile 65536 (oracle12) 시스템 계정 groupadd oinstall groupadd dba useradd -g oinstall -G dba oracle (oracle12) 설치 디렉토리 mkdir -p /prod/oracle12/app mkdir -p /prod/oracle12/oraInventory chown -R oracle:oinstall /prod/oracle12/app chown -R oracle:oinstall /prod/oracle12/oraInventory chmod -R 775 /prod/oracle12/app chmod -R 775 /prod/oracle12/oraInventory chmod g+s /prod/oracle12/app chmod g+s /prod/oracle12/oraInventory (oracle12) 시스템 변수 export TMPDIR=$TMP export ORACLE_BASE=/prod/oracle12/app/ export ORACLE_HOME=$ORACLE_BASE/product/12.2.0/dbhome_1 export ORACLE_HOME_LISTNER=$ORACLE_HOME/bin/lsnrctl export ORACLE_SID=orcl export LD_LIBRARY_PATH=/lib:/usr/lib:/usr/lib64:$ORACLE_HOME/lib export CLASSPATH=$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlib export PATH=$ORACLE_HOME/bin:$PATH:$HOME/.local/bin:$HOME/bin (oracle12) gui 패키지 설치 $ yum grouplist 사용 가능한 환경 그룹 : 서버 - GUI 사용 최소 설치 워크스테이션 가상화 호스트 사용자 정의 운영 체제 $ yum groupinstall \"서버 - GUI 사용\" 설치 후 runlevel 변경: $ systemctl set-default graphical.target\n(oracle12) oracle12c-ee 설치 gui 환경으로 booting 후 oracle 계정으로 로그인하고 runInstaller 실행\n설치 파일: oracle-ee_12102_linux_x64_1of2.zip, oracle-ee_12102_linux_x64_2of2.zip\ninstall response rpm runInstaller sshsetup stage welcome.html (oracle12) systemctl 등록 systemctl 환경변수 파일: /etc/sysconfig/ora12c.env\n소유자(oracle) 설정: chown oracle:db /etc/sysconfig/ora12c.env\nORACLE_BASE=/prod/oracle12/app ORACLE_HOME=$ORACLE_BASE/product/12.2.0/dbhome_1 ORACLE_SID=ora12c (oracle12) 각종 오류 ORA-01102: cannot mount database in EXCLUSIVE mode\ncat $ORACLE_BASE/admin/ora12c/pfile/init.ora.1028202115570 cp $ORACLE_BASE/admin/ora12c/pfile/init.ora.1028202115570 $ORACLE_HOME/dbs/initora12c.ora ORA-01033: ORACLE initialization or shutdown in progress\nalter pluggable database pdborcl open read write; systemctl service 파일 생성\nservice 파일에는 환경변수 파일을 적용할 것\nora12c@lsnrctl.service, ora12c@dbms.service\n(oracle12) oratab 파일 파일: /etc/oratab\nora12c:/prod/oracle12/app/product/12.2.0/dbhome_1:Y 소유자(oracle) 설정: chown oracle:db /etc/oratab\n(oracle12) max_string_size = EXTENDED startup mount; alter database open migrate; select con_id, name, open_mode from v$pdbs; alter session set container=PDB$SEED; alter system set max_string_size=extended scope=spfile; @?/rdbms/admin/utl32k.sql; alter session set container=SPADBP; alter pluggable database SPADBP open upgrade; alter system set max_string_size=extended scope=spfile; @?/rdbms/admin/utl32k.sql; @?/rdbms/admin/utlrp.sql; alter pluggable database SPADBP close immediate; (oracle12) PDB 자동 시작 select con_id, name, open_mode from v$pdbs; CREATE OR REPLACE TRIGGER open_pdbs AFTER STARTUP ON DATABASE BEGIN EXECUTE IMMEDIATE 'ALTER PLUGGABLE DATABASE ALL OPEN'; END open_pdbs; / commit; (oracle12) oracle 계정 생성 alter session set \"_oracle_script\"=true; CREATE TABLESPACE TS_DATA01 DATAFILE '/data/DB/oradata/ora12c/SPADBP/TS_DATA01.dbf' SIZE 1G AUTOEXTEND ON NEXT 10M; CREATE USER SPADBA IDENTIFIED BY 1 DEFAULT TABLESPACE TS_DATA01; CREATE USER SPAAPP IDENTIFIED BY SPAAPP1234 DEFAULT TABLESPACE TS_DATA01; ALTER USER SPADBA QUOTA UNLIMITED ON TS_DATA01; GRANT CONNECT, RESOURCE, CREATE VIEW, EXP_FULL_DATABASE, IMP_FULL_DATABASE, DBA TO SPADBA; CREATE ROLE RL_SPA_APP; GRANT CONNECT, RESOURCE TO RL_SPA_APP; GRANT RL_SPA_APP TO SPAAPP; (oracle12) imp/exp exp.exe SPADBA/1@SPADBP FILE='Z:\\SPADBP.dmp' GRANTS=Y INDEXES=Y ROWS=Y CONSTRAINTS=Y TRIGGERS=N COMPRESS=Y DIRECT=N CONSISTENT=N OWNER=(SPADBA) imp.exe SPADBA/1@SPADBP FILE='Z:\\SPADBP.dmp' FEEDBACK=1000 GRANTS=Y INDEXES=Y ROWS=Y CONSTRAINTS=Y IGNORE=N SHOW=N DESTROY=N ANALYZE=Y SKIP_UNUSABLE_INDEXES=N RECALCULATE_STATISTICS=N FROMUSER=SPADBA TOUSER=SPADBA (oracle12) drop table 문 select 'drop table '||table_name||' cascade constraints;' from user_tables; (oracle12) character-set 설정 select * from nls_database_parameters where parameter like '%NLS_CHARACTERSET%'; /** NLS_CHARACTERSET WE8MSWIN1252 **/ /** NLS_CHARACTERSET AL32UTF8 */ SHUTDOWN IMMEDIATE; STARTUP MOUNT; ALTER SYSTEM ENABLE RESTRICTED SESSION; ALTER SYSTEM SET JOB_QUEUE_PROCESSES=0; ALTER SYSTEM SET AQ_TM_PROCESSES=0; ALTER DATABASE OPEN; ALTER DATABASE CHARACTER SET INTERNAL_USE AL32UTF8; SHUTDOWN IMMEDIATE; STARTUP; ","categories":"","description":"","excerpt":"(centos) hostname [root@develop ~]$ hostnamectl set-hostname develop [root@develop ~]$ (tar) -I, –use-compress-program $ tar -I zstd -xvf zsh-5.8-5-x86_64.pkg.tar.zst (centos) xargs # 공백이나 개행문자가 포함된 파 …","ref":"/develop/","tags":"","title":""},{"body":" ","categories":"","description":"","excerpt":" ","ref":"/","tags":"","title":"docs"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/","tags":"","title":"Tags"}]