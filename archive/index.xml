<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Archives on MEMO</title>
    <link>https://lislroow.github.io/archive/</link>
    <description>Recent content in Archives on MEMO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <atom:link href="https://lislroow.github.io/archive/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://lislroow.github.io/archive/apache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://lislroow.github.io/archive/apache/</guid>
      <description>Ⅰ. apache 버전: apache 2.4.x 1. 다운로드 다운로드 후 tar zxvf *.tar.gz 로 압축 해제 합니다.&#xA;$ wget https://dlcdn.apache.org/httpd/httpd-2.4.58.tar.gz $ wget https://dlcdn.apache.org/apr/apr-1.7.4.tar.gz $ wget https://dlcdn.apache.org/apr/apr-util-1.6.3.tar.gz $ wget https://github.com/PCRE2Project/pcre2/releases/download/pcre2-10.42/pcre2-10.42.tar.gz 2. 설치 1) 의존성 설치 $ yum install gcc gcc-c++ expat expat-devel expat-static $ cd /opt/apache/apr-1.7.4 &amp;amp;&amp;amp; \ ./configure \ --prefix=/usr/local/src/apr-1.7.4 &amp;amp;&amp;amp; \ make &amp;amp;&amp;amp; \ make install $ cd /opt/apache/apr-util-1.6.3 &amp;amp;&amp;amp; \ ./configure \ --prefix=/usr/local/src/apr-util-1.6.3 \ --with-apr=/usr/local/src/apr-1.7.4 &amp;amp;&amp;amp; \ make &amp;amp;&amp;amp; \ make install $ cd /opt/apache/pcre2-10.</description>
    </item>
    <item>
      <title></title>
      <link>https://lislroow.github.io/archive/nginx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://lislroow.github.io/archive/nginx/</guid>
      <description>Ⅰ. nginx 버전: nginx/1.18.0 (Ubuntu) 1. 다운로드 TBD&#xA;2. 설치 1) 의존성 설치 TBD&#xA;2) 설치 $ apt-get install nginx 3. 설정 1) 기본 설정 파일: /etc/nginx/nginx.conf user www-data; worker_processes auto; pid /run/nginx.pid; include /etc/nginx/modules-enabled/*.conf; events { worker_connections 768; } http { sendfile on; tcp_nopush on; types_hash_max_size 2048; include /etc/nginx/mime.types; default_type application/octet-stream; ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE ssl_prefer_server_ciphers on; access_log /var/log/nginx/access.log; error_log /var/log/nginx/error.log; gzip on; include /etc/nginx/conf.</description>
    </item>
    <item>
      <title></title>
      <link>https://lislroow.github.io/archive/oracle19c/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://lislroow.github.io/archive/oracle19c/</guid>
      <description>7. 데이터 이관 작업 # 임시 테이블스페이스, 계정 생성 ALTER SESSION SET CONTAINER = develop; CREATE TABLESPACE develop_test DATAFILE &amp;#39;/opt/oracle/oradata/ORCLCDB/develop/test.dbf&amp;#39; SIZE 100M AUTOEXTEND ON NEXT 50M MAXSIZE UNLIMITED; ALTER SESSION SET &amp;#34;_oracle_script&amp;#34;=true; CREATE USER testuser IDENTIFIED BY 1 DEFAULT TABLESPACE develop_test; ALTER USER testuser QUOTA UNLIMITED ON develop_test; GRANT CREATE SESSION TO testuser; GRANT CREATE TABLE TO testuser; GRANT CREATE VIEW TO testuser; GRANT CREATE PROCEDURE TO testuser; GRANT CREATE SEQUENCE TO testuser; GRANT CREATE TRIGGER TO testuser; GRANT CREATE SYNONYM TO testuser; GRANT CREATE TYPE TO testuser; GRANT UNLIMITED TABLESPACE TO testuser; GRANT READ, WRITE ON DIRECTORY backup_dir TO testuser; --- # imp 실행 export NLS_LANG=KOREAN_KOREA.</description>
    </item>
    <item>
      <title></title>
      <link>https://lislroow.github.io/archive/others/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://lislroow.github.io/archive/others/</guid>
      <description>(erwin) database connection 우선 display 를 물리 모델로 변경합니다.&#xA;상단 메뉴 Database &amp;gt; Database Connection 선택하면 아래 팝업 창이 열립니다.&#xA;Connection String: 의 값은 tnsnames.ora 에 등록된 항목으로 입력합니다.&#xA;(dnf-makecache) 오류 dnf-makecache는 centos의 자동업데이트 기능입니다.&#xA;오류: repo &#39;appstream&#39;: Cannot prepare internal mirrorlist: No URLs in mirrorlist 를 위해 메타데이타 내려받기에 실패하였습니다&#xA;disable 명령어는 다음과 같습니다.&#xA;$ gsettings set org.gnome.software download-updates false $ systemctl disable dnf-makecache.service $ systemctl disable dnf-makecache.timer 정상 작동하도록 하기 위해 yum 저장소 설정 파일을 수정합니다.</description>
    </item>
  </channel>
</rss>
