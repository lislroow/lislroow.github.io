













[{"body":"1. 이클립스 기본 단축키 이클립스에 기본으로 등록된 단축키 목록입니다.\n중요도에 따라 ★를 표시했습니다.\n1.1 Ctrl + K (★★★)   블록 선택된 단어가 다음에 일치하는 곳을 찾아갑니다.\n  Ctrl + Shift + K 일 경우 역방향으로 실행됩니다.\n  대소문자 구분 옵션을 설정하려면 Ctrl + F 찾기에서 Case sentive 옵션을 선택해야합니다.\nWhole word 옵션으로 온전한 단어일 경우에만 검색되는 옵션도 있습니다.\n새 창 보기\n  1.2 Ctrl + Alt + DOWN (★★☆)   블록 선택된 라인(혹은 커서가 있는 행)을 복제합니다.\n  DOWN 은 방향키를 의미합니다.\n  DOWN 일 경우 아래에 복제하고, UP 일 경우 위에 복제합니다.\n새 창 보기   1.3 Ctrl + Alt + A (★★★)   블록 선택을 반전시키는 기능입니다.\n  일반 모드일 경우에는 행을 선택하는 형태이고, 컬럼 단위로 선택을 하기 위해 사용합니다.\n새 창 보기   1.4 Ctrl + Shift + G (★★★)   유틸리티 클래스를 리팩토링 할 경우 영향도 체크를 위해 반드시 익혀야 합니다.\n  References in Workspace 라는 기능입니다.\n기본 설명은 Search for references to the selected element in the workspace 라고 되어 있습니다.\n  java 의 클래스, 메소드, 변수가 참조되고 있는 파일의 라인을 찾아 줍니다.\n  주로 프레임워크/공통 개발 시 제공된 클래스가 업무서비스의 어디서 참조되고 있는지를 검색해야 할 때 사용하면 좋습니다.\n새 창 보기\n  1.5 Alt + LEFT (★☆☆)  이전에 활성화 했었던 파일을 re-open 해줍니다. Ctrl + W 로 에디터에 열려진 파일을 닫은 직후 다시 열어야할 때 유용합니다. RIGHT 일 경우는 LEFT 의 반대 방향입니다.  1.6 Ctrl + PAGEUP (★☆☆)  현재 활성화된 탭의 왼쪽 탭을 활성화 시킵니다. 에디터에 매우 많은 파일이 열려있을 경우 탭간의 이동을 마우스 클릭으로 이동하기 번거로울 경우 사용할 수 있습니다.\n개발의 집중도를 높이기 위해 관련없는 파일들은 수정이 끝나면 Ctrl + W 로 탭을 닫는 습관을 들이도록 해야겠습니다. PAGEDOWN 일 경우는 PAGEUP 의 반대 방향, 오른쪽 탭을 활성화합니다.  1.7 Ctrl + Q (☆☆☆)   이전에 수정했던 파일의 라인으로 이동합니다.\n새 창 보기   1.8 Ctrl + T (☆☆☆)   java 클래스의 상속 구조를 봐야하는 경우 사용됩니다.\nextends 에 대한 구조를 보여주며, implements 에 대한 구조는 보여주지 않습니다.\n  프레임워크/공통 개발 시 오픈소스 라이브러리를 상속받고 구현체 클래스를 생성하는 경우가 많기에 알아둬야 겠습니다.\n새 창 보기   1.8 Ctrl + L (★☆☆)   editing 중인 파일의 해당 라인으로 이동하는 기능입니다.\n새 창 보기   1.9 Ctrl + Shift + R (★★★)   이클립스 프로젝트에서 파일명으로 파일을 찾아서 open 하는 기능입니다.\n  매우 사용 빈도가 높기에 필수로 기억해둬야 할 것입니다.\n새 창 보기   1.10 Ctrl + = (☆☆☆)  이클립스 에디터의 font 크기를 변경하는 기능입니다. (= 은 더 크게, -는 더 작게) 메뉴를 통해 font 크기를 변경하려면,\nWindow \u003e Preferences \u003e General \u003e Appearance \u003e Colors and Fonts 로 이동한 다음\nBasic \u003e Text Font 에서 변경할 수 있습니다. 코드 리뷰 시간에 일시적으로 font 크기를 조절해야 할 경우 이 단축키를 사용할 것을 권합니다. 단축키 Ctrl + = 에서 = 는 키보드의 숫자 라인에 + 와 같이 있는 키 입니다.  1.11 Ctrl + Alt + Shifh + L (★★☆)   이클립스에 기본 탑재된 Quick Search 기능입니다.\n이클립스 InstaSearch 플러그인과 유사합니다.\n  검색할 문자열을 블록 선택한 다음 Ctrl + Alt + Shifh + L 을 입력하면 팝업이 open 되면서 검색이 시작됩니다.\n새 창 보기\n  2. svn 단축키 2.1 Ctrl + Alt + L (★★★)   현재 editing 중인 파일이 svn 저장소에 commit 된 파일과 비교를 합니다.\n  commit 을 하기전에는 무엇이 변경되었는지 빠르게 확인을 하기 위해 자주 사용되는 diff 단축키 입니다.\n새 창 보기\n  2.2 Ctrl + Alt + S (★★★)   svn 저장소와 동기화 단축키 입니다.\n  project explorer 에서 이클립스 프로젝트를 선택한 다음\n우클릭 \u003e Team \u003e Synchronized with Repository 를 선택하는 것과 동일합니다.\n마우스 클릭으로 sync 를 하기 위해서는 번거롭다고 생각하시면 익혀두셔야 겠습니다.\n  svn-commit(Ctrl + Alt + C), svn-update(Ctrl + Alt + U) 에 대한 단축키도 익혀두시면 좋겠습니다.\n새 창 보기\n  3. anyedit 플러그인 단축키 3.1 Ctrl + Alt + K (★☆☆)   camelcase 와 underscore-case 를 변환해주는 기능입니다.\n  두 가지 case 에 대한 예시 입니다.\n# e.g employName 은 camelcase 이고, employ_name 는 underscore-case 입니다.   oracle 에서는 컬럼에 대해 대소문자가 구분이되지 않기 때문에 underscore-case 표기법을 사용하게 됩니다.\njava 에서는 oracle 컬럼에 대응되는 변수를 생성할 때\ncamelcase 를 사용하는 경우가 일반적이므로 이 기능의 활용도가 있을 것으로 예상합니다.\n  사용법은 변환할 문자열을 블록 선택한 다음 Ctrl + Alt + K 를 입력하면 됩니다.\n  4. 사용자 지정 단축키 개발을 하면서 자주 사용되는 기능에 대해 설정한 단축키 입니다.\n사용자 지정 단축키는 User 부분에 U 라고 표시가 되어 있습니다.\n만일 기존 단축키와 충돌이 발생할 경우 C 라는 문자가 같이 포함되어 있으며,\n해제 하고자 하는 명령을 선택하고 Unbind Command 버튼을 클릭하면 해제할 수 있게 됩니다.\n새 창 보기\n4.1 Ctrl + Alt + H (★★☆)   project explorer 에서 선택된 파일 혹은 디렉토리의 svn 에 commit 된 history 를 볼 수 있습니다.\n  특정 파일을 편집 상태에서도 Ctrl + Alt + H 를 입력하면, 편집 중인 파일의 svn-history 를 볼 수 있습니다.\n새 창 보기\n  4.2 Alt + C (★☆☆)   이클립스 프로젝트를 다시 build(compile) 해야할 때 clean 을 사용되는 단축키 입니다.\n  프로젝트를 선택한 상태에서 Alt + C 를 입력하면 선택된 프로젝트가 Clean 대상으로 체크가 되어있습니다.\n  java 파일을 editing 하는 상태에서 Alt + C 를 입력하면 현재 파일을 포함하는 프로젝트가 Clean 대상으로 체크됩니다.\n새 창 보기\n  4.3 Alt + U (★★★)  maven 프로젝트에서는 pom.xml 이 변경이 있거나, 의존성 library 의 최신 버전을 받아오기 위해 maven-update 를 자주 하게 됩니다. 이클립스 기본 단축키는 Alt + F5 이며, F5 키가 접근이 용이하지 않아 Alt + U 단축키를 별도로 추가했습니다.  5. 단축키 설정 방법 5.1 설정창 이동 이클립스 상단 context 메뉴에서 Window \u003e Preferences 를 선택합니다. (Preferences 창이 열림)\nPreferences 창에서 General \u003e Keys 를 선택하면 단축키 설정 화면이 보입니다.\n새 창 보기\n5.2 binding 상태 확인 검색 영역에서 binding 으로도 검색이 가능합니다.\n새 창 보기\n5.3 단축키 변경 단축키를 변경하기 위해서는 Binding 에서 단축키를 직접 입력합니다.\nWhen 은 In Windows 를 선택해주세요.\n새 창 보기\n참고로 Editing Text 일 경우 텍스트를 편집할 때에만 적용된다는 의미가 됩니다.\n아래는 기존 단축키를 유지하면서 새로운 단축키를 하나 더 설정하는 방법입니다.\n(이클립스에 기본으로 Binding 된 단축키는 가급적이면 그대로 유지할 것을 권합니다.)\n새 창 보기\n5.4 Ctrl + Shift + L   단축키 목록을 우측 하단에 표시 합니다.\n  한 번 더 Ctrl + Shift + L 를 입력하면 단축키 설정 창을 open 합니다.\n새 창 보기   ","categories":"","description":"","excerpt":"1. 이클립스 기본 단축키 이클립스에 기본으로 등록된 단축키 목록입니다.\n중요도에 따라 ★를 표시했습니다.\n1.1 Ctrl + …","ref":"/localenv/04_%EC%B0%B8%EA%B3%A0_eclipse-%EB%8B%A8%EC%B6%95%ED%82%A4/","tags":"","title":"04_참고_eclipse-단축키"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/","tags":"","title":"Categories"},{"body":"\rdev-log github \r\r\r      ","categories":"","description":"","excerpt":"\rdev-log github \r\r\r      ","ref":"/","tags":"","title":"dev-log"},{"body":"(log4j2) 설정 새 창 보기\n","categories":"","description":"","excerpt":"(log4j2) 설정 새 창 보기\n","ref":"/develop/","tags":"","title":"develop"},{"body":"configure httpd.conf ServerRoot \"/etc/httpd\" Listen 80 Include conf.modules.d/*.conf User apache Group web ServerAdmin hi@mgkim.net ServerName develop:80 \u003cDirectory /\u003e AllowOverride none Require all denied \u003c/Directory\u003e DocumentRoot \"/var/www/html\" \u003cFiles \".ht*\"\u003e Require all denied \u003c/Files\u003e ErrorLog \"/outlog/WEB/httpd/error.log\" LogLevel warn \u003cIfModule log_config_module\u003e LogFormat \"%h %l %u %t \\\"%r\\\" %\u003es %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined LogFormat \"%h %l %u %t \\\"%r\\\" %\u003es %b\" common \u003cIfModule logio_module\u003e LogFormat \"%h %l %u %t \\\"%r\\\" %\u003es %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\" %I %O\" combinedio \u003c/IfModule\u003e CustomLog \"/outlog/WEB/httpd/access.log\" combined \u003c/IfModule\u003e \u003cIfModule alias_module\u003e ScriptAlias /cgi-bin/ \"/var/www/cgi-bin/\" \u003c/IfModule\u003e \u003cDirectory \"/var/www/cgi-bin\"\u003e AllowOverride None Options None Require all granted \u003c/Directory\u003e \u003cIfModule mime_module\u003e TypesConfig /etc/mime.types AddType application/x-compress .Z AddType application/x-gzip .gz .tgz AddType text/html .shtml AddOutputFilter INCLUDES .shtml \u003c/IfModule\u003e AddDefaultCharset UTF-8 \u003cIfModule mime_magic_module\u003e MIMEMagicFile conf/magic \u003c/IfModule\u003e EnableSendfile on IncludeOptional conf.d/*.conf ssl.conf Listen 443 https SSLPassPhraseDialog exec:/usr/libexec/httpd-ssl-pass-dialog SSLSessionCache shmcb:/run/httpd/sslcache(512000) SSLSessionCacheTimeout 300 SSLRandomSeed startup file:/dev/urandom 256 SSLRandomSeed connect builtin SSLCryptoDevice builtin \u003cVirtualHost _default_:443\u003e ServerName develop ErrorLog /outlog/WEB/httpd/develop-error_ssl.log TransferLog /outlog/WEB/httpd/develop-access_ssl.log LogLevel warn SSLEngine on SSLProtocol all -SSLv2 -SSLv3 SSLCipherSuite HIGH:3DES:!aNULL:!MD5:!SEED:!IDEA SSLCertificateFile /etc/httpd/conf.d/certs/develop.crt SSLCertificateKeyFile /etc/httpd/conf.d/certs/develop.key \u003cFiles ~ \"\\.(cgi|shtml|phtml|php3?)$\"\u003e SSLOptions +StdEnvVars \u003c/Files\u003e \u003cDirectory \"/var/www/cgi-bin\"\u003e SSLOptions +StdEnvVars \u003c/Directory\u003e BrowserMatch \"MSIE [2-5]\" nokeepalive ssl-unclean-shutdown downgrade-1.0 force-response-1.0 CustomLog /outlog/WEB/httpd/default-request_ssl.log \"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \\\"%r\\\" %b\" \u003c/VirtualHost\u003e vhost-nexus.conf \u003cVirtualHost *:80\u003e ServerName nexus RewriteEngine On RewriteCond %{HTTPS} !=On RewriteRule /(.*) https://nexus.mgkim.net/$1 [QSA,R,L] \u003c/VirtualHost\u003e \u003cVirtualHost *:443\u003e ServerName nexus SSLEngine On SSLProtocol all -SSLv2 SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5 SSLCertificateFile /etc/httpd/conf.d/certs/nexus.crt SSLCertificateKeyFile /etc/httpd/conf.d/certs/nexus.key RewriteEngine On RewriteRule /(.*) https://nexus.mgkim.net/$1 [QSA,R,L] \u003c/VirtualHost\u003e ### mgkim.net \u003cVirtualHost *:80\u003e ServerName nexus.mgkim.net RewriteEngine On RewriteCond %{HTTPS} !=On RewriteRule /(.*) https://%{HTTP_HOST}/$1 [QSA,R,L] \u003c/VirtualHost\u003e \u003cVirtualHost *:443\u003e ServerName nexus.mgkim.net ErrorLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/nexus.mgkim.net_ssl-error.log.%Y-%m-%d 86400 +540%\" CustomLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/nexus.mgkim.net_ssl-access.log.%Y-%m-%d 86400 +540%\" combined SSLEngine On SSLProtocol all -SSLv2 SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5 SSLCertificateFile /etc/httpd/conf.d/certs/STAR.mgkim.net.crt SSLCertificateKeyFile /etc/httpd/conf.d/certs/STAR.mgkim.net.key AllowEncodedSlashes On Header set Access-Control-Allow-Origin \"*\" ProxyRequests Off ProxyPreserveHost On \u003cProxy *\u003e Require all granted \u003c/Proxy\u003e ProxyPass / http://127.0.0.1:8100/ ProxyPassReverse / http://127.0.0.1:8100/ RequestHeader set X-Forwarded-Proto \"https\" #ProxyPassMatch ^/(.*)$ http://127.0.0.1:8100/$1 \u003c/VirtualHost\u003e vhost-gitlab.conf \u003cVirtualHost *:80\u003e ServerName gitlab RewriteEngine On RewriteCond %{HTTPS} !=On RewriteRule /(.*) https://gitlab.mgkim.net/$1 [QSA,R,L] \u003c/VirtualHost\u003e \u003cVirtualHost *:443\u003e ServerName gitlab SSLEngine On SSLProtocol all -SSLv2 SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5 SSLCertificateFile /etc/httpd/conf.d/certs/gitlab.crt SSLCertificateKeyFile /etc/httpd/conf.d/certs/gitlab.key RewriteEngine On RewriteRule /(.*) https://gitlab.mgkim.net/$1 [QSA,R,L] \u003c/VirtualHost\u003e ### mgkim.net \u003cVirtualHost *:80\u003e ServerName gitlab.mgkim.net RewriteEngine On RewriteCond %{HTTPS} !=On RewriteRule /(.*) https://%{HTTP_HOST}/$1 [QSA,R,L] \u003c/VirtualHost\u003e \u003cVirtualHost *:443\u003e ServerName gitlab.mgkim.net DocumentRoot \"/opt/gitlab/embedded/service/gitlab-rails/public\" ErrorLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/gitlab.mgkim.net_ssl-error.log.%Y-%m-%d 86400 +540\" CustomLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/gitlab.mgkim.net_ssl-access.log.%Y-%m-%d 86400 +540\" combined SSLEngine On SSLProtocol all -SSLv2 SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5 SSLCertificateFile /etc/httpd/conf.d/certs/STAR.mgkim.net.crt SSLCertificateKeyFile /etc/httpd/conf.d/certs/STAR.mgkim.net.key ProxyRequests Off ProxyPreserveHost On \u003cProxy gitlab\u003e Require all granted \u003c/Proxy\u003e AllowEncodedSlashes On Header set Access-Control-Allow-Origin \"*\" ProxyPass / http://127.0.0.1:8200/ ProxyPassReverse / http://127.0.0.1:8200/ \u003c/VirtualHost\u003e vhost-jenkins.conf \u003cVirtualHost *:80\u003e ServerName jenkins RewriteEngine On RewriteCond %{HTTPS} !=On RewriteCond %{REQUEST_URI} ^/(computer)/.*$ RewriteRule /(.*) http://localhost:8400/$1 [QSA,P,L] RewriteCond %{REQUEST_URI} ^/(wsagents)/.*$ RewriteRule /(.*) ws://localhost:8400/$1 [QSA,P,L] RewriteRule /(.*) https://jenkins.mgkim.net/$1 [QSA,R,L] \u003c/VirtualHost\u003e \u003cVirtualHost *:443\u003e ServerName jenkins SSLEngine On SSLProtocol all -SSLv2 SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5 SSLCertificateFile /etc/httpd/conf.d/certs/jenkins.crt SSLCertificateKeyFile /etc/httpd/conf.d/certs/jenkins.key RewriteEngine On RewriteRule /(.*) https://jenkins.mgkim.net/$1 [QSA,R,L] \u003c/VirtualHost\u003e ### mgkim.net \u003cVirtualHost *:80\u003e ServerName jenkins.mgkim.net RewriteEngine On RewriteCond %{HTTPS} !=On RewriteCond %{REQUEST_URI} ^/(computer)/.*$ RewriteRule /(.*) http://localhost:8400/$1 [QSA,P,L] RewriteCond %{REQUEST_URI} ^/(wsagents)/.*$ RewriteRule /(.*) ws://localhost:8400/$1 [QSA,P,L] RewriteRule /(.*) https://jenkins.mgkim.net/$1 [QSA,R,L] \u003c/VirtualHost\u003e \u003cVirtualHost *:443\u003e ServerName jenkins.mgkim.net ErrorLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/jenkins.mgkim.net_ssl-error.log.%Y-%m-%d 86400 +540\" CustomLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/jenkins.mgkim.net_ssl-access.log.%Y-%m-%d 86400 +540\" combined SSLEngine On SSLProtocol all -SSLv2 SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5 SSLCertificateFile /etc/httpd/conf.d/certs/STAR.mgkim.net.crt SSLCertificateKeyFile /etc/httpd/conf.d/certs/STAR.mgkim.net.key AllowEncodedSlashes On Header set Access-Control-Allow-Origin \"*\" RewriteEngine On RewriteCond %{HTTP:Upgrade} =websocket [NC] RewriteRule /(.*) ws://localhost:8400/$1 [P,L] RewriteCond %{HTTP:Upgrade} !=websocket [NC] RewriteRule /(.*) http://localhost:8400/$1 [P,L] \u003c/VirtualHost\u003e vhost-dlog.conf \u003cVirtualHost *:80\u003e ServerName dlog RewriteEngine On RewriteCond %{HTTPS} !=On RewriteRule /(.*) https://dlog.mgkim.net/$1 [QSA,R,L] \u003c/VirtualHost\u003e \u003cVirtualHost *:443\u003e ServerName dlog SSLEngine On SSLProtocol all -SSLv2 SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5 SSLCertificateFile /etc/httpd/conf.d/certs/dlog.crt SSLCertificateKeyFile /etc/httpd/conf.d/certs/dlog.key RewriteEngine On RewriteRule /(.*) https://dlog.mgkim.net/$1 [QSA,R,L] \u003c/VirtualHost\u003e ### mgkim.net \u003cVirtualHost *:80\u003e ServerName dlog.mgkim.net RewriteEngine On RewriteCond %{HTTPS} !=On RewriteRule /(.*) https://%{HTTP_HOST}/$1 [QSA,R,L] \u003c/VirtualHost\u003e \u003cVirtualHost *:443\u003e ServerName dlog.mgkim.net #DocumentRoot \"/opt/gitlab/embedded/service/gitlab-rails/public\" ErrorLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/dlog.mgkim.net_ssl-error.log.%Y-%m-%d 86400 +540\" CustomLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/dlog.mgkim.net_ssl-access.log.%Y-%m-%d 86400 +540\" combined SSLEngine On SSLProtocol all -SSLv2 SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5 SSLCertificateFile /etc/httpd/conf.d/certs/STAR.mgkim.net.crt SSLCertificateKeyFile /etc/httpd/conf.d/certs/STAR.mgkim.net.key ProxyRequests Off ProxyPreserveHost On \u003cProxy gitlab\u003e Require all granted \u003c/Proxy\u003e AllowEncodedSlashes On Header set Access-Control-Allow-Origin \"*\" ProxyPass / http://127.0.0.1:1313/ ProxyPassReverse / http://127.0.0.1:1313/ \u003c/VirtualHost\u003e connector weblogic LoadModule weblogic_module modules/mod_wl_24.so \u003cIfModule mod_weblogic.c\u003e WebLogicCluster IP:PORT,IP:PORT,IP:PORT ConnectTimeoutSecs 8 ConnectRetrySecs 2 Idempotent OFF DynamicServerList OFF MatchExpression * KeepAliveEnabled OFF \u003c/IfModule\u003e \u003cLocation /api \u003e WLSRequest On #SetHandler weblogic-handler WebLogicCluster IP:PORT,IP:PORT,IP:PORT #Idempotent OFF \u003c/Location\u003e windows install command (Apache Lounge) httpd.exe -k install httpd.exe -k configtest configure  httpd.conf  ServerRoot \"Z:/www/httpd_2.4.25-win64-VC14/Apache24\" Listen 80 LoadModule access_compat_module modules/mod_access_compat.so LoadModule actions_module modules/mod_actions.so LoadModule alias_module modules/mod_alias.so LoadModule allowmethods_module modules/mod_allowmethods.so LoadModule asis_module modules/mod_asis.so LoadModule auth_basic_module modules/mod_auth_basic.so #LoadModule auth_digest_module modules/mod_auth_digest.so #LoadModule auth_form_module modules/mod_auth_form.so #LoadModule authn_anon_module modules/mod_authn_anon.so LoadModule authn_core_module modules/mod_authn_core.so #LoadModule authn_dbd_module modules/mod_authn_dbd.so #LoadModule authn_dbm_module modules/mod_authn_dbm.so LoadModule authn_file_module modules/mod_authn_file.so #LoadModule authn_socache_module modules/mod_authn_socache.so #LoadModule authnz_fcgi_module modules/mod_authnz_fcgi.so #LoadModule authnz_ldap_module modules/mod_authnz_ldap.so LoadModule authz_core_module modules/mod_authz_core.so #LoadModule authz_dbd_module modules/mod_authz_dbd.so #LoadModule authz_dbm_module modules/mod_authz_dbm.so LoadModule authz_groupfile_module modules/mod_authz_groupfile.so LoadModule authz_host_module modules/mod_authz_host.so #LoadModule authz_owner_module modules/mod_authz_owner.so LoadModule authz_user_module modules/mod_authz_user.so LoadModule autoindex_module modules/mod_autoindex.so #LoadModule buffer_module modules/mod_buffer.so #LoadModule cache_module modules/mod_cache.so #LoadModule cache_disk_module modules/mod_cache_disk.so #LoadModule cache_socache_module modules/mod_cache_socache.so #LoadModule cern_meta_module modules/mod_cern_meta.so LoadModule cgi_module modules/mod_cgi.so #LoadModule charset_lite_module modules/mod_charset_lite.so #LoadModule data_module modules/mod_data.so #LoadModule dav_module modules/mod_dav.so #LoadModule dav_fs_module modules/mod_dav_fs.so #LoadModule dav_lock_module modules/mod_dav_lock.so #LoadModule dbd_module modules/mod_dbd.so #LoadModule deflate_module modules/mod_deflate.so LoadModule dir_module modules/mod_dir.so #LoadModule dumpio_module modules/mod_dumpio.so LoadModule env_module modules/mod_env.so #LoadModule expires_module modules/mod_expires.so #LoadModule ext_filter_module modules/mod_ext_filter.so #LoadModule file_cache_module modules/mod_file_cache.so #LoadModule filter_module modules/mod_filter.so #LoadModule http2_module modules/mod_http2.so LoadModule headers_module modules/mod_headers.so #LoadModule heartbeat_module modules/mod_heartbeat.so #LoadModule heartmonitor_module modules/mod_heartmonitor.so #LoadModule ident_module modules/mod_ident.so #LoadModule imagemap_module modules/mod_imagemap.so LoadModule include_module modules/mod_include.so #LoadModule info_module modules/mod_info.so LoadModule isapi_module modules/mod_isapi.so #LoadModule lbmethod_bybusyness_module modules/mod_lbmethod_bybusyness.so #LoadModule lbmethod_byrequests_module modules/mod_lbmethod_byrequests.so #LoadModule lbmethod_bytraffic_module modules/mod_lbmethod_bytraffic.so #LoadModule lbmethod_heartbeat_module modules/mod_lbmethod_heartbeat.so #LoadModule ldap_module modules/mod_ldap.so #LoadModule logio_module modules/mod_logio.so LoadModule log_config_module modules/mod_log_config.so #LoadModule log_debug_module modules/mod_log_debug.so #LoadModule log_forensic_module modules/mod_log_forensic.so #LoadModule lua_module modules/mod_lua.so #LoadModule macro_module modules/mod_macro.so LoadModule mime_module modules/mod_mime.so #LoadModule mime_magic_module modules/mod_mime_magic.so LoadModule negotiation_module modules/mod_negotiation.so LoadModule proxy_module modules/mod_proxy.so LoadModule proxy_ajp_module modules/mod_proxy_ajp.so LoadModule proxy_balancer_module modules/mod_proxy_balancer.so LoadModule proxy_connect_module modules/mod_proxy_connect.so LoadModule proxy_express_module modules/mod_proxy_express.so LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so LoadModule proxy_ftp_module modules/mod_proxy_ftp.so LoadModule proxy_hcheck_module modules/mod_proxy_hcheck.so LoadModule proxy_html_module modules/mod_proxy_html.so LoadModule proxy_http_module modules/mod_proxy_http.so #LoadModule proxy_http2_module modules/mod_proxy_http2.so #LoadModule proxy_scgi_module modules/mod_proxy_scgi.so #LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so #LoadModule ratelimit_module modules/mod_ratelimit.so #LoadModule reflector_module modules/mod_reflector.so #LoadModule remoteip_module modules/mod_remoteip.so #LoadModule request_module modules/mod_request.so #LoadModule reqtimeout_module modules/mod_reqtimeout.so LoadModule rewrite_module modules/mod_rewrite.so #LoadModule sed_module modules/mod_sed.so #LoadModule session_module modules/mod_session.so #LoadModule session_cookie_module modules/mod_session_cookie.so #LoadModule session_crypto_module modules/mod_session_crypto.so #LoadModule session_dbd_module modules/mod_session_dbd.so LoadModule setenvif_module modules/mod_setenvif.so #LoadModule slotmem_plain_module modules/mod_slotmem_plain.so LoadModule slotmem_shm_module modules/mod_slotmem_shm.so #LoadModule socache_dbm_module modules/mod_socache_dbm.so #LoadModule socache_memcache_module modules/mod_socache_memcache.so LoadModule socache_shmcb_module modules/mod_socache_shmcb.so #LoadModule speling_module modules/mod_speling.so LoadModule ssl_module modules/mod_ssl.so #LoadModule status_module modules/mod_status.so #LoadModule substitute_module modules/mod_substitute.so #LoadModule unique_id_module modules/mod_unique_id.so #LoadModule userdir_module modules/mod_userdir.so #LoadModule usertrack_module modules/mod_usertrack.so #LoadModule version_module modules/mod_version.so #LoadModule vhost_alias_module modules/mod_vhost_alias.so LoadModule watchdog_module modules/mod_watchdog.so LoadModule xml2enc_module modules/mod_xml2enc.so \u003cIfModule unixd_module\u003e User daemon Group daemon \u003c/IfModule\u003e ServerAdmin hi@mgkim.net ServerName mgkim.net:50001 \u003cDirectory /\u003e AllowOverride none Require all denied \u003c/Directory\u003e DocumentRoot \"Z:/www/20210825_171631\" \u003cDirectory \"Z:/www/20210825_171631\"\u003e Options Indexes FollowSymLinks AllowOverride None Require all granted \u003c/Directory\u003e \u003cIfModule dir_module\u003e DirectoryIndex index.html \u003c/IfModule\u003e \u003cFiles \".ht*\"\u003e Require all denied \u003c/Files\u003e ErrorLog \"logs/error.log\" LogLevel warn \u003cIfModule log_config_module\u003e LogFormat \"%h %l %u %t \\\"%r\\\" %\u003es %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined LogFormat \"%h %l %u %t \\\"%r\\\" %\u003es %b\" common \u003cIfModule logio_module\u003e LogFormat \"%h %l %u %t \\\"%r\\\" %\u003es %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\" %I %O\" combinedio \u003c/IfModule\u003e CustomLog \"logs/access.log\" common \u003c/IfModule\u003e \u003cIfModule alias_module\u003e ScriptAlias /cgi-bin/ \"c:/Apache24/cgi-bin/\" \u003c/IfModule\u003e \u003cIfModule headers_module\u003e RequestHeader unset Proxy early \u003c/IfModule\u003e \u003cIfModule mime_module\u003e TypesConfig conf/mime.types AddType application/x-compress .Z AddType application/x-gzip .gz .tgz \u003c/IfModule\u003e ### include Include conf/extra/vhost-dlog.conf Include conf/extra/ssl.conf ### exclude #Include conf/extra/httpd-mpm.conf #Include conf/extra/httpd-multilang-errordoc.conf #Include conf/extra/httpd-autoindex.conf #Include conf/extra/httpd-languages.conf #Include conf/extra/httpd-userdir.conf #Include conf/extra/httpd-info.conf #Include conf/extra/httpd-manual.conf #Include conf/extra/httpd-dav.conf #Include conf/extra/httpd-default.conf #\u003cIfModule proxy_html_module\u003e # Include conf/extra/proxy-html.conf #\u003c/IfModule\u003e \u003cIfModule ssl_module\u003e SSLRandomSeed startup builtin SSLRandomSeed connect builtin \u003c/IfModule\u003e  ssl.conf  Listen 9443 #Listen 443 SSLCipherSuite HIGH:MEDIUM:!MD5:!RC4 SSLProxyCipherSuite HIGH:MEDIUM:!MD5:!RC4 SSLHonorCipherOrder on SSLProtocol all -SSLv3 SSLProxyProtocol all -SSLv3 SSLPassPhraseDialog builtin SSLSessionCache \"shmcb:c:/Apache24/logs/ssl_scache(512000)\" SSLSessionCacheTimeout 300  vhost-dlog.conf  #\u003cVirtualHost *:80\u003e # ServerName vdlog.mgkim.net:80 # # RewriteEngine On # RewriteCond %{HTTPS} !=On # RewriteRule /(.*) https://vdlog.mgkim.net:9443/$1 [QSA,R,L] #\u003c/VirtualHost\u003e # #\u003cVirtualHost *:9443\u003e # ServerName vdlog.mgkim.net:9443 # # ErrorLog \"|bin/rotatelogs.exe logs/vdlog.mgkim.net_ssl-error.log.%Y-%m-%d 86400 +540\" # CustomLog \"|bin/rotatelogs.exe logs/vdlog.mgkim.net_ssl-access.log.%Y-%m-%d 86400 +540\" combined # # SSLEngine On # SSLProxyEngine On # SSLProtocol all -SSLv2 # SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5 # SSLCertificateFile conf/certs/STAR.mgkim.net.crt # SSLCertificateKeyFile conf/certs/STAR.mgkim.net.key # # ProxyRequests Off # ProxyPreserveHost On # # \u003cProxy gitlab\u003e # Require all granted # \u003c/Proxy\u003e # # AllowEncodedSlashes On # Header set Access-Control-Allow-Origin \"*\" # # ProxyPass / http://127.0.0.1:1313/ # ProxyPassReverse / http://127.0.0.1:1313/ #\u003c/VirtualHost\u003e \u003cVirtualHost *:80\u003e ServerName vdlog.mgkim.net:80 ServerAlias mgkim.net:80 ErrorLog \"|bin/rotatelogs.exe logs/vdlog.mgkim.net-error.log.%Y-%m-%d 86400 +540\" CustomLog \"|bin/rotatelogs.exe logs/vdlog.mgkim.net-access.log.%Y-%m-%d 86400 +540\" combined ProxyRequests Off ProxyPreserveHost On \u003cProxy gitlab\u003e Require all granted \u003c/Proxy\u003e AllowEncodedSlashes On Header set Access-Control-Allow-Origin \"*\" ProxyPass / http://127.0.0.1:1313/ ProxyPassReverse / http://127.0.0.1:1313/ \u003c/VirtualHost\u003e \u003cVirtualHost *:80\u003e ServerName vdlog:80 RewriteEngine On RewriteCond %{HTTPS} !=On RewriteRule /(.*) https://vdlog:9443/$1 [QSA,R,L] \u003c/VirtualHost\u003e \u003cVirtualHost *:9443\u003e ServerName vdlog:9443 SSLEngine On SSLProxyEngine On #SSLProxyCheckPeerCN On #SSLProxyCheckPeerExpire On SSLProtocol all -SSLv2 SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5 SSLCertificateFile conf/certs/vdlog.crt SSLCertificateKeyFile conf/certs/vdlog.key RewriteEngine On RewriteRule /(.*) https://dlog.mgkim.net:443/$1 [QSA,P,L] \u003c/VirtualHost\u003e openssl 인증서 생성하기  개인키(key) 생성 인증서발급신청서(CSR) 생성 인증서(CRT) 생성  useful 개인키(domain.key)와 인증서(domain.crt) 파일을 동시에 생성하는 스크립트 입니다.\n[root@develop /etc/httpd/conf.d/certs]$ cat create-cert.sh DOMAIN=$1 openssl req -x509 -nodes -days 730 -newkey rsa:2048 -keyout $DOMAIN.key -out $DOMAIN.crt -config \u003c(cat \u003c\u003c- TEXT [req] distinguished_name = req_distinguished_name x509_extensions = v3_req prompt = no [req_distinguished_name] countryName = KR stateOrProvinceName = Seoul localityName = Seonyudo organizationName = SPACESOFT organizationalUnitName = Dev Team CN = $DOMAIN [v3_req] keyUsage = critical, digitalSignature, keyAgreement extendedKeyUsage = serverAuth subjectAltName = @alt_names [alt_names] DNS.1 = $DOMAIN TEXT) -sha256 [root@develop /etc/httpd/conf.d/certs]$ selinux chcon -Rt httpd_log_t /outlog/WEB chcon -Rt httpd_sys_content_t /app/WEB/dlog setsebool -P httpd_can_network_connect on systemctl restart httpd ","categories":"","description":"","excerpt":"configure httpd.conf ServerRoot \"/etc/httpd\" Listen 80 Include …","ref":"/system/httpd/","tags":"","title":"httpd"},{"body":"plugins Publish Over SSH mvn 빌드 후 생성된 artifact 파일을 sftp 로 전송하고 ssh 로 command 를 실행하는 기능을 사용할 수 있습니다.\n 프로젝트 구성에서 빌드 후 조치 \u003e Send build artifacts over SSH 선택 Add Server 버튼을 클릭하여 SSH Server 선택  선택되는 서버는 빌드 결과물인 artifact 파일을 전송하고, ssh 로 command 를 실행할 서버를 의미함 아래 Transfer Set 에 설정되는 Exec command의 내용이 빌드 로그에 출력되도록 고급버튼을 눌러 Verbose output in console 을 선택할 것 [INFO] ------------------------------------------------------------------------ SSH: Connecting from host [i9-9900K] SSH: Connecting with configuration [tomcat@develop] ... SSH: Creating session: username [tomcat], hostname [develop], port [22] SSH: Connecting session ... SSH: Connected SSH: Opening SFTP channel ... SSH: SFTP channel open SSH: Connecting SFTP channel ... SSH: Connected SSH: cd [/app/WAS/prototype] SSH: OK SSH: cd [/app/WAS/prototype] SSH: OK SSH: cd [boot-www] SSH: OK SSH: put [boot-www-0.0.1-SNAPSHOT.war] SSH: OK SSH: cd [/app/WAS/prototype] SSH: OK SSH: cd [boot-www] SSH: OK SSH: put [deploy.sh] SSH: OK SSH: Opening exec channel ... SSH: EXEC: channel open SSH: EXEC: STDOUT/STDERR from command [chmod u+x /app/WAS/prototype/boot-www/deploy.sh /app/WAS/prototype/boot-www/deploy.sh restart] ... SSH: EXEC: connected Stopping boot-www stopped boot-www Starting boot-www SSH: EXEC: completed after 1,202 ms SSH: Disconnecting configuration [tomcat@develop] ... SSH: Transferred 2 ( 1 + 1 ) file(s) Finished: SUCCESS    Add Transfer Set 버튼을 클릭하여 Transfers Set 입력  Source files: 전송할 파일을 입력 (예: **/target/*.war) Remove prefix: 전송시 source files 의 파일경로를 제거 (예: ./boot-www/target/) Remote directory: … (예: boot-www 라고 입력하면 /app/WAS/prototype/boot-www 이렇게 base-dir 하위에 디렉토리를 생성하여 source files 가 전송됨) Exec command: 파일 전송 후 실행할 command 를 입력 (배포 후 container 재시작을 하기 위한 command 입력) 참고로 war 파일과 was 재시작을 위한 sh 파일을 같이 전송해야하는 경우에는 Transfers Set을 2개로 나눠서 전송하는 방법도 있음    SSH Server 추가하기 SSH Server 는 Jenkins 관리 \u003e 시스템 설정 \u003e Publish over SSH 에서 추가를 해야 선택하는 항목이 나옵니다.\n Passphrase: 시스템 계정 jenkins 로 생성한 rsa 키의 비밀번호를 입력합니다. Path to key: rsa 키 쌍 중 개인키의 경로를 입력합니다. (/home/jenkins/.ssh/id_rsa) jenkins node 구성에서 slave-node 을 추가했다면 jenkins 를 호스팅하고 있는 서버에서 생성한 개인키 파일에 접근할 수 없기에 Key 항목에 개인키를 설정하여 사용해야 함 Key: 개인키의 경로를 입력하지 않을 경우 개인키의 내용 추가로 설정할 수 있습니다. (키 경로 입력 시 생략할 것) 개인키의 형태는 다음과 같으며 참고로 jenkins 에 설정할때에는 BEGIN 부터 END 까지 모두 입력해야 합니다. -----BEGIN RSA PRIVATE KEY----- Proc-Type: 4,ENCRYPTED DEK-Info: AES-128-CBC,BB513C74CDF53133B6B805F08C716E14 lqXA6gIhaf3ztU1SoQVGvUtLWtXqINxbGzNfau3v+DIHRKJjVY1JvBj2mmADIxEq … YqTPbiAOgnHAD9CgWg/v55Zl9zLrPKLakCJPYzGNrLo2BJ4qXR1ZX371JEsXq8tq —–END RSA PRIVATE KEY—– \nSSH Servers에 추가 버튼을 클릭하여 hostname, username, remote directory 입력합니다. 입력이 끝나고 Test Configuration 버튼을 클릭하여 테스트를 해봅니다.   GitLab Plugin gitlab 과 연동하기 위한 플러그인입니다.\ngitlab 에서 push 이벤트가 발생했을 경우 jenkins 에서 build 가 실행되도록 하기위해 사용됩니다.\n gitlab 에서 User Settings \u003e Access Tokens 메뉴에서 Access Token 을 생성할 것 jenkins 플러그인 관리에서 GitLab Plugin 을 검색하고 설치 jenkins 관리 \u003e Manage Credentials 로 이동하여 Access Token을 추가함 jenkins 관리 \u003e 시스템 설정 메뉴로 이동하여 Gitlab 섹션으로 이동  Credentials: Manage Credentials에서 추가한 Gitlab API token 을 선택하고 Test Connection 버튼을 클릭하여 동작을 확인함   프로젝트의 구성에서 빌드 유발 섹션으로 이동  Build when a change is pushed to GitLab. GitLab webhook URL: http://jenkins/project/boot-www: 이 항목을 체크하면 세부 항목들이 나타남. (세부 항목에 대해 모르면 기본 체크 상태 유지) Secret token: (이 항목은 고급 버튼을 클릭해야 나타남) Generate 버튼을 클릭하면 값이 생성됨.    GitLab webhook URL, Secret token 항목을 gitlab Webhooks 에 설정하기 아래 2개의 항목은 gitlab 의 프로젝트 설정의 Webhooks 에서 설정해야하는 값입니다.\n GitLab webhook URL: 이 값은 체크항목에 레이블로 표시되어있는 http://jenkins/project/boot-www 이며, Webhooks 의 URL 에 입력해야 하는 값. Secret token: 이 값은 Generate 버튼 클릭으로 생성되며, Webhooks 의 Secret Token 에 입력해야 하는 값.   GitHub Integration Plugin github 저장소에서 webhook 으로 push 이벤트를 받아서 jenkins build가 실행되도록 할 때 사용합니다.\n활용법: github 연결\nbuild 분산 빌드 환경 jenkins 관리 에서 노드 관리 메뉴로 이동하면 분산 빌드 환경을 위한 노드를 추가할 수 있습니다.\n이 환경을 구성하면 jenkins 가 설치된 서버에서는 더 이상 빌드를 수행하지 않고 추가된 노드에서 빌드가 수행됩니다.\n다음은 windows 환경의 slave-node를 추가하는 예시입니다. (jenkins 는 master-node이며, 추가되는 node들은 slave-node 입니다.)\n주요 설정 항목  Name: slave-node 이름 (설명에는 9900K 로 했습니다.) Remote root directory: slave-node 의 workspace 디렉토리를 지정합니다. 참고로 Z:\\jenkins 라고 입력하면 빌드 시 Z:\\jenkins\\workspace\\boot-www 디렉토리가 생성됩니다. (boot-www 는 jenkins 프로젝트명 입니다.) Labels: jenkins 프로젝트에 label 을 설정할 수 있으며, 해당 프로젝트에 포함된 label 과 매핑된 노드에서 빌드가 수행됨 Launch method: Use WebSocket 항목을 체크할 것   slave-node 를 추가하면 slave-node에서 jenkins 와 연결하는 방법을 알려줍니다.\nConnect agent to Jenkins one of these ways: Java Web Start is not available for the JVM version running Jenkins Run from agent command line: javaws http://jenkins/computer/9900K/jenkins-agent.jnlp Or if the agent is headless: java -jar agent.jar -jnlpUrl http://jenkins/computer/9900K/jenkins-agent.jnlp -workDir \"Z:\\jenkins\" slave-node 와 jenkins 연결하기\n  Z:\\jenkins 에 agent.jar 를 다운로드 받음\n  Z:\\jenkins\\start-agent.cmd 파일을 생성하고 아래 내용으로 설정\nset JAVA_HOME=Z:\\develop\\java\\openjdk-11.0.2 set PATH=%JAVA_HOME%\\bin;%PATH% java -jar agent.jar -jnlpUrl http://jenkins/computer/9900K/jenkins-agent.jnlp -workDir \"Z:\\jenkins\"   start-agent.cmd 실행 후 아래와 같이 console 로그가 출력되면 정상 실행\nZ:\\jenkins\u003eset JAVA_HOME=Z:\\develop\\java\\openjdk-11.0.2 Z:\\jenkins\u003eset PATH=Z:\\develop\\java\\openjdk-11.0.2\\bin;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\;C:\\Windows\\System32\\OpenSSH\\;C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\Program Files\\NVIDIA Corporation\\NVIDIA NvDLISR;C:\\Program Files\\Git\\cmd;C:\\Program Files\\nodejs\\;C:\\Users\\Administrator\\AppData\\Local\\Microsoft\\WindowsApps;Z:\\oracle\\ora12c_32bit\\client_12_1\\bin;Z:\\develop\\java\\openjdk-11.0.2\\bin;Z:\\develop\\build\\maven-3.6.3\\bin;C:\\Users\\Administrator\\AppData\\Local\\Programs\\Microsoft VS Code\\bin;Z:\\develop\\hugo\\hugo-ext-0.87.0;C:\\Users\\Administrator\\AppData\\Roaming\\npm;Z:\\www\\httpd_2.4.25-win64-VC14\\openssl-0.9.8e_X64\\bin; Z:\\jenkins\u003ejava -jar agent.jar -jnlpUrl http://jenkins/computer/9900K/jenkins-agent.jnlp -workDir \"Z:\\jenkins\" 9월 13, 2021 11:55:53 오후 org.jenkinsci.remoting.engine.WorkDirManager initializeWorkDir INFO: Using Z:\\jenkins\\remoting as a remoting work directory 9월 13, 2021 11:55:53 오후 org.jenkinsci.remoting.engine.WorkDirManager setupLogging INFO: Both error and output logs will be printed to Z:\\jenkins\\remoting 9월 13, 2021 11:55:53 오후 hudson.remoting.jnlp.Main createEngine INFO: Setting up agent: 9900K 9월 13, 2021 11:55:53 오후 hudson.remoting.jnlp.Main$CuiListener \u003cinit\u003e INFO: Jenkins agent is running in headless mode. 9월 13, 2021 11:55:53 오후 hudson.remoting.Engine startEngine INFO: Using Remoting version: 4.10 9월 13, 2021 11:55:53 오후 org.jenkinsci.remoting.engine.WorkDirManager initializeWorkDir INFO: Using Z:\\jenkins\\remoting as a remoting work directory 9월 13, 2021 11:55:53 오후 hudson.remoting.jnlp.Main$CuiListener status INFO: WebSocket connection open 9월 13, 2021 11:55:53 오후 hudson.remoting.jnlp.Main$CuiListener status INFO: Connected 참고로 여기서 연결이 안되는 상황이 발생함\n agent.jar 실행 시 jenkins 에 접속할 때 websocket 으로 접속을 하게되는데 ssl 이 적용된 프로토콜 https, wss 은 handshake 오류가 발생함 httpd 설정에 http 를 https 로 redirect 하도록 mod_rewrite 를 설정했는데 오류로 인해 rewrite 설정은 제거함 jenkins 의 가상호스트 설정은 다음과 같습니다. \u003cVirtualHost *:80\u003e ServerName jenkins ErrorLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/jenkins-error.log.%Y-%m-%d 86400 +540\" CustomLog \"|/usr/sbin/rotatelogs /outlog/WEB/httpd/jenkins-access.log.%Y-%m-%d 86400 +540\" combined AllowEncodedSlashes On Header set Access-Control-Allow-Origin \"*\" RewriteEngine On RewriteCond %{HTTP:Upgrade} =websocket [NC] RewriteRule /(.*) ws://localhost:8400/$1 [P,L] RewriteCond %{HTTP:Upgrade} !=websocket [NC] RewriteRule /(.*) http://localhost:8400/$1 [P,L] \u003c/VirtualHost\u003e     jenkins 프로젝트에 label 을 추가된 slave-node 의 label 로 변경하고 빌드를 실행하면 Z:\\jenkins\\workspace\\ 디렉토리에 jenkins 프로젝트 디렉토리가 생성되고 소스 코드 관리를 설정했을 경우 소스코드가 checkout 되어있을 것입니다.\n   이후 Publish Over SSH 플러그인을 사용하여 was 서버에 war 파일을 publish 를 하고 was 를 재시작하는 command 를 ssh 로 수행하도록 설정하면 됩니다.  github 연결 required plugin: GitHub Integration Plugin\njenkins 프로젝트의 소스 코드 관리 섹션에서 github 저장소와 연결하는 설정입니다.\n Repository URL: github 의 프로젝트 저장소 url 을 입력 https://github.com/lislroow/spring.git Credentials: github 에서 Personal access tokens 을 발급받고 jenkins 에 등록하고 선택  github 에서 Personal access tokens 발급 및 jenkins Credentials 등록  github 로그인 후 Settings \u003e Developer settings \u003e Personal access tokens 메뉴 이동 Generate new token 버튼 클릭 후 Expiration 과 Select scopes 를 선택 Select scopes은 repo, admin:repo_hook를 전체 선택 Generate token 버튼 클릭으로 토큰을 생성  생성된 토큰(access token) 값은 다시 확인할 수 없습니다. (재생성해야하는 것으로 알고 있음) jenkins 에 등록될 access token 은 github 의 id 와 함께 사용되는 패스워드입니다.   jenkins Manage Credentials 에서 Add Credentials 을 합니다.  Kind: Username with password 를 선택합니다. Username: github 에 로그인할 때 사용하는 id 를 입력합니다. (lislroow) Password: github 에서 생성한 토큰(access token)을 입력합니다. (ghp_***생략***)     jenkins 프로젝트의 빌드 유발 섹션에서 github 저장소에 push 이벤트를 받을 수 있도록 설정합니다. GitHub hook trigger for GITScm polling 체크\ngithub 에서 push 이벤트 jenkins 로 전송하기  github 의 프로젝트로 이동한 다음 Settings \u003e Webhooks 메뉴로 이동합니다. Add webhook 버튼을 클릭하여 다음을 입력합니다.  Payload URL: http://{jenkins-domain}/github-webhook/ 으로 입력합니다. 참고로 uri 는 반드시 /github-webhook/ 으로 되어야 합니다. (/github-webhook 으로하면 302 를 응답받고 실패합니다.) Payload URL 을 입력하게되면 github 저장소에 push 이벤트가 발생할 때 해당 URL 을 호출하게되고, jenkins 는 이 http 요청을 받고 build 를 실행하게 되는 형태입니다. Content type: application/json 으로 설정 저장 후 소스코드를 수정하고 commit;push 를 하게되면 추가된 webhook 항목을 클릭했을 때 Recent Deliveries 를 볼 수 있습니다.     ","categories":"","description":"","excerpt":"plugins Publish Over SSH mvn 빌드 후 생성된 artifact 파일을 sftp 로 전송하고 ssh …","ref":"/system/jenkins/","tags":"","title":"jenkins"},{"body":"systemd systemd 는 centos 7 부터 포함된 기능입니다.\n/etc/init.d 에서 서비스를 관리했던 것을 systemd 로 관리하게 되었습니다.\n실행 명령어는 systemctl 입니다.\n서비스 생성 새로운 서비스를 등록할 경우 아래 템플릿으로 파일을 생성합니다.\n 파일경로: /etc/systemd/system/{서비스명}.service  [root@develop /etc/systemd/system]$ cat jenkins.service [Unit] Description=Jenkins After=network.target syslog.target [Service] Type=forking User=jenkins Group=ci ExecStart=/prod/jenkins/jenkins.sh start ExecStop=/prod/jenkins/jenkins.sh stop Restart=on-abort [Install] WantedBy=multi-user.target [root@develop /etc/systemd/system]$ yum 으로 패키지 설치시 systemctl 에 등록된 정보를 아래와 같은 방법으로 확인합니다.\n[root@develop /etc/systemd/system]$ systemctl --help systemctl [OPTIONS...] {COMMAND} ... Unit Commands: list-units [PATTERN...] List loaded units [root@develop /etc/systemd/system]$ systemctl list-units | grep httpd httpd.service loaded active running The Apache HTTP Server [root@develop /etc/systemd/system]$ [root@develop /etc/systemd/system]$ systemctl status httpd.service ● httpd.service - The Apache HTTP Server Loaded: loaded (/usr/lib/systemd/system/httpd.service; enabled; vendor preset: disabled) [root@develop /etc/systemd/system]$ httpd 의 서비스 파일은 /usr/lib/systemd/system/httpd.service 에 있음을 확인할 수 있습니다.\n서비스 등록 서비스 파일을 생성한 다음 systemctl 에 등록을 해야 합니다.\n[root@develop /etc/systemd/system]$ systemctl --help | grep reload --no-reload Don't reload daemon after en-/dis-abling unit files reload NAME... Reload one or more units reload-or-restart NAME... Reload one or more units if possible, reload-or-try-restart NAME... Reload one or more units if possible, daemon-reload Reload systemd manager configuration [root@develop /etc/systemd/system]$ [root@develop /etc/systemd/system]$ systemctl daemon-reload [root@develop /etc/systemd/system]$ systemctl daemon-reload 명령으로 reload 를 합니다.\n서비스 활성화 서비스 활성화 상태로 설정을 하게되면 os booting 시 자동으로 실행이 됩니다.\n[root@develop /etc/systemd/system]$ systemctl --help | grep enable --preset-mode= Apply only enable, only disable, or all presets enable NAME... Enable one or more unit files reenable NAME... Reenable one or more unit files is-enabled NAME... Check whether unit files are enabled [root@develop /etc/systemd/system]$ [root@develop /etc/systemd/system]$ systemctl is-enabled orcl@oracledb.service enabled [root@develop /etc/systemd/system]$ systemctl is-enabled httpd.service enabled [root@develop /etc/systemd/system]$ systemctl enable {서비스} 명령으로 enabled 상태로 설정합니다.\nnetwork [root@develop ~]$ cat /etc/sysconfig/network-scripts/ifcfg-ens32 TYPE=\"Ethernet\" PROXY_METHOD=\"none\" BROWSER_ONLY=\"no\" BOOTPROTO=\"none\" DEFROUTE=\"yes\" IPV4_FAILURE_FATAL=\"no\" IPV6INIT=\"no\" IPV6_AUTOCONF=\"yes\" IPV6_DEFROUTE=\"yes\" IPV6_FAILURE_FATAL=\"no\" IPV6_ADDR_GEN_MODE=\"stable-privacy\" NAME=\"ens32\" UUID=\"d18679f4-c760-4621-b73a-8e7b513594a7\" DEVICE=\"ens32\" ONBOOT=\"yes\" IPADDR=\"172.28.200.20\" PREFIX=\"24\" GATEWAY=\"172.28.200.2\" DNS1=\"8.8.8.8\" [root@develop ~]$ hostname [root@develop ~]$ hostnamectl set-hostname develop [root@develop ~]$ shell [ -z ] : 문자열의 길이가 0이면 참 [ -n ] : 문자열의 길이가 0이 아니면 참 [ -eq ] : 값이 같으면 참 [ -ne ] : 값이 다르면 참 [ -gt ] : 값1 \u003e 값2 [ -ge ] : 값1 \u003e= 값2 [ -lt ] : 값1 \u003c 값2 [ -le ] : 값1 \u003c= 값2 [ -a ] : \u0026\u0026연산과 동일 and 연산 [ -o ] : ||연산과 동일 xor 연산 [ -d ] : 파일이 디렉토리면 참 [ -e ] : 파일이 있으면 참 [ -L ] : 파일이 심볼릭 링크면 참 [ -r ] : 파일이 읽기 가능하면 참 [ -s ] : 파일의 크기가 0 보다 크면 참 [ -w ] : 파일이 쓰기 가능하면 참 [ -x ] : 파일이 실행 가능하면 참 [ 파일1 -nt 파일2 ] : 파일1이 파일2보다 최신파일이면 참 [ 파일1 -ot 파일2 ] : 파일1이 파일2보다 이전파일이면 참 [ 파일1 -ef 파일2 ] : 파일1이 파일2랑 같은 파일이면 참 ","categories":"","description":"","excerpt":"systemd systemd 는 centos 7 부터 포함된 기능입니다.\n/etc/init.d …","ref":"/system/linux/","tags":"","title":"linux"},{"body":"(git) turn off crlf warning warning: LF will be replaced by CRLF in 메시지를 보고 싶지 않을 경우 아래 옵션을 추가합니다.\n$ git config --global core.safecrlf false \n(hugo) 전체 rebuild 아래 2개의 디렉토리의 파일들을 모두 삭제하고 빌드를 합니다.\n/resources, /public\n(eclipse) 이클립스 로그 Z:\\develop\\eclipse\\eclipse-jee-R-win32-x86_64\\workspace\\.metadata\\.plugins\\org.eclipse.m2e.logback.configuration wintail 다운로드\n(windows) setx cmd 에서 아래 명령을 실행하면 시스템 변수 에 추가됩니다.\nsetx /m JAVA_HOME \"D:\\develop\\java\\openjdk-11.0.2\" \n(plex) DaumMovie.bundle https://github.com/axfree/DaumMovie.bundle\n%LOCALAPPDATA%\\Plex Media Server\\Plug-ins 에서 압축 해제합니다.\n(nexus) curl PUT curl -u {id}:{passwd} -X PUT -v -T org/apache/poi/poi/3.10-FINAL/poi-3.10-FINAL.jar http://nexus/repository/maven-public-hosted/org/apache/poi/poi/3.10-FINAL/poi-3.10-FINAL.jar \n(windows) dism dism(배포 이미지 서비스 및 관리) 이미지 생성, 분할, 추가, 삭제, 추출, 적용, 마운트, 언 마운트, 커밋들이 가능하다.\n(eclipse) xml editor: tab to space xml editor 에서 tab 키 입력 시 space 가 입력되도록 변환하는 방법은 2가지를 설정해야 합니다.\n single-line: General \u003e Editors \u003e Text Editors: Insert spaces for tabs 체크 multi-line: XML \u003e XML Files \u003e Editor: Indent using spaces 선택  새 창 보기\n(eclipse) mybatipse plugin mybatipse 플러그인은 Mapper의 메소드명과 mybatis의 \u003csql\u003e을 ctrl + L-click으로 연결해주는 편의성을 제공합니다.\n새 창 보기\n(erwin) database connection 우선 display 를 물리 모델로 변경합니다.\n상단 메뉴 Database \u003e Database Connection 선택하면 아래 팝업 창이 열립니다.\nConnection String: 의 값은 tnsnames.ora 에 등록된 항목으로 입력합니다.\n새 창 보기\n(regex) not matched word # string say hello world # regex \\b(?!hello)\\b\\w+ # string release-service-bom release-service-www snapshot-service-bom snapshot-service-www # regex ^release\\-(?!.*\\-bom).* \n(maven) release github \u003cscm\u003e \u003cconnection\u003escm:git:git@github.com:lislroow/pilot.git\u003c/connection\u003e \u003c/scm\u003e \u003cplugin\u003e \u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e \u003cartifactId\u003emaven-release-plugin\u003c/artifactId\u003e \u003cversion\u003e3.0.0-M1\u003c/version\u003e \u003cconfiguration\u003e \u003cautoVersionSubmodules\u003etrue\u003c/autoVersionSubmodules\u003e \u003cgoals\u003edeploy\u003c/goals\u003e \u003cscmCommentPrefix\u003e[jenkins]\u003c/scmCommentPrefix\u003e \u003c/configuration\u003e \u003c/plugin\u003e \n(git) tag # 태그 삭제 $ git tag -d framework-bom-0.2 'framework-bom-0.2' 태그 삭제함 (과거 2c5b9f1) $ git push origin :framework-bom-0.2 To github.com:lislroow/pilot.git - [deleted] framework-bom-0.2 $ # 태그 조회 $ git tag -l framework-* framework-bom-0.1 # 태그 추가 (Lightweight 태그) $ git tag framework-bom-0.2 # 태그 추가 (Annotated 태그) $ git tag -a framework-bom-0.2 -m \"Release framework-bom-0.2\" # 태그 보기 $ git show framework-bom-0.2 # 태그 원격저장소 push (모두 올리기) $ git push origin --tags \n(git) 특정 경로만 checkout 하기 $ git init $ git config core.sparseCheckout true #git config --local credential.helper \"\" $ git remote add -f origin git@github.com:lislroow/pilot.git $ echo \"bom/framework-bom/*\" \u003e .git/info/sparse-checkout $ git pull origin main \n(maven) version ranges artifact 의 scope 가 import 일 경우에는 [0.1,) 형태로 ranges 를 적용할 수 없습니다.\n\u003cdependencyManagement\u003e \u003cdependencies\u003e \u003c!-- mgkim.proto --\u003e \u003cdependency\u003e \u003cgroupId\u003emgkim.proto\u003c/groupId\u003e \u003cartifactId\u003eproto\u003c/artifactId\u003e \u003cversion\u003e[0.1,)\u003c/version\u003e \u003c!-- 오류 --\u003e \u003cversion\u003e0.1\u003c/version\u003e \u003c!-- 정상 --\u003e \u003ctype\u003epom\u003c/type\u003e \u003cscope\u003eimport\u003c/scope\u003e \u003c/dependency\u003e \u003c!-- //mgkim.proto --\u003e \u003c/dependencies\u003e \u003c/dependencyManagement\u003e \n(eclipse) STS Boot Dashboard filter 새 창 보기\n(eclipse) eclipse-update 이클립스를 업데이트 할 경우(플러그인 업데이트가 아닌), Can not remove ... eclipse.exe 오류가 발생할 수 있습니다.\n이 경우에는 아래 이미지와 같이 업데이트 진행 중에 eclipse.exe 파일을 eclipse.exe.bak 로 변경하면 업데이트가 오류없이 진행됩니다.\n새 창 보기\n(eclipse) scm ignore Preferences \u003e Version Control (Team) \u003e Ignored Resources\n아래 항목들을 추가 합니다.\n*target* *target*/* pom.xml.releaseBackup release.properties 새 창 보기\n(github) ssh key 등록 ssh-keygen -t ed25519 -C \"hi@mgkim.net\"\n생성된 공개키 파일, C:\\Users\\Administrator\\.ssh\\id_ed25519.pub 의 내용을 github 에 등록합니다.\ngithub 메뉴 경로: Settings \u003e SSH and GPG keys\nremote origin 변경\nssh-agent 는 공개키 인증을 위한 개인키를 보관하는 프로그램으로 여러 서버에 인증이 필요할 경우 사용할 수 있습니다.\n등록된 공개키 정상여부 확인을 하기 위해, 키 생성을 한 곳에서 ssh -T git@github.com 명령을 실행을 해봅니다.\n키 파일의 경로를 명시적으로 지정\nssh -v -i /C/Users/Administrator/.ssh/id_ed25519.pub -T git@github.com\nssh -i C:\\Users\\Administrator\\.ssh\\id_ed25519.pub -T git@github.com\nAdministrator@I5-1135G7 MINGW64 / $ ssh -T git@github.com The authenticity of host 'github.com (15.164.81.167)' can't be established. ED25519 key fingerprint is SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU. This key is not known by any other names Are you sure you want to continue connecting (yes/no/[fingerprint])? yes Warning: Permanently added 'github.com' (ED25519) to the list of known hosts. Hi lislroow! You've successfully authenticated, but GitHub does not provide shell access. github 에 key를 등록한 다음 cli 환경에서 사용하려면 아래 명령을 실행합니다.\n$ eval \"$(ssh-agent -s)\" Agent pid 126681 $ ps -ef | grep ssh-agent root 31343 1 0 12월14 ? 00:00:00 ssh-agent -s jenkins 126681 1 0 17:12 ? 00:00:00 ssh-agent -s jenkins 126683 126640 0 17:12 pts/1 00:00:00 grep --color=auto ssh-agent $ ssh-add ~/.ssh/id_ed25519 Identity added: /home/jenkins/.ssh/id_ed25519 (jenkins@mgkim.net) $ \n(github) unable to read askpass 오류 오류 상황입니다.\n$ git push origin (gnome-ssh-askpass:19816): Gtk-WARNING **: 10:22:08.209: cannot open display: error: unable to read askpass response from '/usr/libexec/openssh/gnome-ssh-askpass' Username for 'https://github.com': SSH_ASKPASS 변수를 unset 하면 됩니다.\n$ echo $SSH_ASKPASS /usr/libexec/openssh/gnome-ssh-askpass $ unset SSH_ASKPASS \n(github) Personal access tokens Settings \u003e Developer settings \u003e Personal access tokens 이동 후\nGenerate new token 버튼 클릭으로 token 생성 (repo 만 체크하면 push 할 수 있음)\ntoken 생성 후 이클립스에서 id에 email 입력, password 에 생성된 토큰 입력\n# token-name: centos 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 \n(eclipse) debugging 필수 옵션 디버깅 시 아래와 같은 오류가 발생할 경우 이클립스 옵션을 확인해보세요.\n  오류 상황\n  경로: Preferences \u003e Java \u003e Debug\n  체크사항: Use advanced source lookup (JRE 1.5 and higher) 체크를 반드시 해제해주셔야 합니다.\n새 창 보기\n  체크 유무에 따라 정상/오류 상황을 캡처한 이미지 입니다.\n새 창 보기\n  (win) win 11 taskbar 그룹해제 아래 파일 다운로드 후 실행\n다운로드\n새 창 보기\n(maven) release 명령어\n$ mvn -B clean release:prepare release:perform deploy $M2_HOME/conf/settings.xml 파일\n\u003c?xml version=\"1.0\" encoding=\"UTF-8\"?\u003e \u003csettings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\"\u003e \u003cservers\u003e \u003cserver\u003e \u003cid\u003enexus-release\u003c/id\u003e \u003cusername\u003eadmin\u003c/username\u003e \u003cpassword\u003epasswd\u003c/password\u003e \u003c/server\u003e \u003cserver\u003e \u003cid\u003enexus-snapshot\u003c/id\u003e \u003cusername\u003eadmin\u003c/username\u003e \u003cpassword\u003epasswd\u003c/password\u003e \u003c/server\u003e \u003c/servers\u003e \u003cmirrors\u003e \u003cmirror\u003e \u003cid\u003enexus\u003c/id\u003e \u003cname\u003enexus\u003c/name\u003e \u003curl\u003ehttp://nexus/repository/maven-group/\u003c/url\u003e \u003cmirrorOf\u003e*\u003c/mirrorOf\u003e \u003c/mirror\u003e \u003c/mirrors\u003e \u003c/settings\u003e pom.xml 파일\n\u003cbuild\u003e \u003cplugins\u003e \u003cplugin\u003e \u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e \u003cartifactId\u003emaven-release-plugin\u003c/artifactId\u003e \u003cversion\u003e3.0.0-M1\u003c/version\u003e \u003c!-- 필수 사항 --\u003e \u003cconfiguration\u003e \u003cautoVersionSubmodules\u003etrue\u003c/autoVersionSubmodules\u003e \u003cgoals\u003edeploy\u003c/goals\u003e \u003cusername\u003emgkim\u003c/username\u003e \u003cpassword\u003epasswd\u003c/password\u003e \u003c/configuration\u003e \u003c!-- //필수 사항 --\u003e \u003c/plugin\u003e \u003c/plugins\u003e \u003c/build\u003e \u003c!-- 필수 사항 --\u003e \u003cscm\u003e \u003cconnection\u003escm:svn:svn://develop/test/trunk/proto.www\u003c/connection\u003e \u003c/scm\u003e \u003c!-- //필수 사항 --\u003e \u003cdistributionManagement\u003e \u003csnapshotRepository\u003e \u003cid\u003emgkim-snapshot\u003c/id\u003e \u003curl\u003ehttp://nexus/repository/maven-mgkim-snapshot/\u003c/url\u003e \u003c/snapshotRepository\u003e \u003crepository\u003e \u003cid\u003emgkim-release\u003c/id\u003e \u003curl\u003ehttp://nexus/repository/maven-mgkim-release/\u003c/url\u003e \u003c/repository\u003e \u003c/distributionManagement\u003e \n(maven) help:evaluate 명령어\nSNAPSHOT_NM=$(mvn -f pom.xml help:evaluate -Dexpression=project.version -q -DforceStdout) \n(maven) dependency 명령어: dependency:resolve\njavadoc 다운로드\n$ mvn dependency:resolve -Dclassifier=javadoc 명령어: dependency:sources\nsources 다운로드\n$ mvn dependency:sources \n(maven) deploy:deploy-file 명령어\nset JAVA_HOME=Z:\\develop\\java\\openjdk-11.0.2 set M2_HOME=Z:\\develop\\build\\maven-3.6.3 set PATH=%JAVA_HOME%\\bin;%M2_HOME%\\bin;%PATH% set NEXUS_REPO=-DrepositoryId=nexus-release -Durl=http://nexus/repository/maven-public-hosted/ set GROUP_ID=net.mgkim set ARTIFACT_ID=spring-core set VERSION=1.0.0 set FILE=Z:\\mgkim-spring-core-1.0.0.jar %M2_HOME%\\bin\\mvn.cmd -U deploy:deploy-file -DgroupId=%GROUP_ID% -DartifactId=%ARTIFACT_ID% -Dversion=%VERSION% -Dpackaging=jar -Dfile=%FILE% %NEXUS_REPO% 플러그인\n\u003cbuild\u003e \u003cplugins\u003e \u003cplugin\u003e \u003cgroupId\u003eorg.apache.maven.plugins\u003c/groupId\u003e \u003cartifactId\u003emaven-deploy-plugin\u003c/artifactId\u003e \u003cversion\u003e3.0.0-M1\u003c/version\u003e \u003c/plugin\u003e \u003c/plugins\u003e \u003c/build\u003e \n2021.12.14 nexus deploy 401 unauthorized\nmvn deploy 에 전달된 인자 -DrepositoryId=nexus-release 이 참조하는 settings.xml 의 \u003cServers\u003e 의 id/passwd 정보가 있어야 합니다.\n새 창 보기\n\u003cservers\u003e \u003cserver\u003e \u003cid\u003enexus-release\u003c/id\u003e \u003cusername\u003eadmin\u003c/username\u003e \u003cpassword\u003e***(passwd)***\u003c/password\u003e \u003c/server\u003e \u003c/servers\u003e \n2021.12.14 nexacro 라이브러리 추가\n스크립트 보기\n(maven) settings.xml 파일 $M2_HOME/conf/settings.xml\n새 창 보기\n(maven) password 암호화 # 평문 `mypassword` 는 `{ODOdTfm09eMHYfUVt4vkUfm9dw1pkSRC+HAXsuqE0p0=}` 문자열로 암호화됨 $ mvn --encrypt-master-password mypassword {ODOdTfm09eMHYfUVt4vkUfm9dw1pkSRC+HAXsuqE0p0=} \n(java) vmargs (2개) # request.getRemoteAddr() 가 IPv6 로 출력되는 경우 JAVA_OPTS=\"${JAVA_OPTS}-Djava.net.preferIPv4Stack=true\" # cannot be cast to javax.net.ssl.HttpsURLConnection # URLConnection 객체를 사용할 때 HttpsURLConnection 이 반환되지 않는 경우 JAVA_OPTS=\"${JAVA_OPTS}-DUseSunHttpHandler=true\" \n(java) java 에 인증서 등록 로컬 설치된 java 에 인증서 파일(*.crt) 등록을 하기 위해서는 $JAVA_HOME/bin/keytool 를 사용해야 합니다.\nca 에 등록되지 않은 인증서로 https 통신을 하는 경우에는 ssl-handshake 과정에서 오류가 발생하므로\n해당 사이트의 인증서를 로컬 java 에 신뢰할 수 있는 인증서에 등록해야 합니다.\n아래는 hello.crt 라는 인증서를 등록하는 예시입니다.\n# 인증서 등록 $ keytool -importcert -keystore $JAVA_HOME/jre/lib/security/cacerts -file \"hello.crt\" -alias \"hello\" 키 저장소 비밀번호 입력: (changeit 입력) 이 인증서를 신뢰합니까? [아니오]: (y 입력) 인증서가 키 저장소에 추가되었습니다. # 인증서 조회 $ keytool -list -keystore cacerts | grep \"hello\" 키 저장소 비밀번호 입력: (changeit 입력) hello, 2020. 5. 8, trustedCertEntry, # 인증서 삭제 $ keytool -delete -alias \"hello\" -keystore \"cacerts\" \n(centos) centos 에 인증서 등록  /etc/pki/ca-trust/source/anchors/ 경로에 crt 파일을 복사 update-ca-trust extract 실행으로 신뢰할 수 있는 인증서를 추가  (win) win11 system-tray 설정 cmd 창에서 아래 명령어를 입력하여 시스템 트레이에 모든 아이콘을 표시하도록 합니다.\n시스템 아이콘 켜기 또는 끄기 를 선택하여 시계를 표시할 수도 있습니다.\n\u003e explorer shell:::{05d7b0f4-2121-4eff-bf6b-ed3f69b894d9} 새 창 보기\n(win) font 추천 hugo-site\n/assets/scss/_variables_project.scss\n$google_font_name: \"Bitstream Vera Sans Mono\" !default; $google_font_family: \"Bitstream Vera Sans Mono:300,300i,400,400i,700,700i\" !default; $web-font-path: \"http://fonts.cdnfonts.com/css/bitstream-vera-sans-mono\"; scss 파일의 수정된 내용이 적용되려면 npm 빌드 환경이 필요합니다.\n# 초기 구성을 위해 준비할 것 $ git submodule add -b master https://github.com/lislroow/lislroow.github.io.git public $ git clone --recurse-submodules --depth 1 https://github.com/google/docsy.git themes/docsy # 2개의 npm 패키지 설치 $ npm install autoprefixer -D --save $ npm install postcss-cli -D --save $ npm install postcss -D --save # npm 패키지 설치 후 hugo -t docsy 로 build 하면  # `/assets/scss/_variables_project.scss` 파일에 수정된 내용을 포함하여 # 아래 경로에 build 결과 파일을 생성합니다. # `/resources/_gen/assets/scss/scss/main.scss_4853eb546e7a6c0898ed71feae7357c0.content` system\nBitstream 은 coding 목적으로 많이 사용되는 font 입니다.\n새 창 보기\n다운로드: BitstreamVeraSansMono.ttf\nColors and Fonts \u003e Basic \u003e Text Font 를 선택하고 Edit 버튼을 클릭하면 변경할 수 있습니다.\n새 창 보기\n(eclipse) hidpi 설정 # eclipse.ini 파일의 맨 마지막에 추가 -Dswt.autoScale=150 # 150 == 1.5배 새 창 보기\n(win) 절전 cmd %windir%\\System32\\rundll32.exe powrprof.dll SetSuspendState \n(vmware) 실행 cmd set \"VMWARE_HOME=C:\\Program Files (x86)\\VMware\\VMware Workstation\" set \"PATH=%PATH%;%VMWARE_HOME%\" vmrun -T ws start \"Z:\\centos7-develop\\centos7-develop.vmx\" nogui \n(win) wol 설정 절전 상태에서 wol 이 작동하려면 아래 옵션을 선택해야 합니다.\n새 창 보기\n(win) port-forwarding cmd # 설정 \u003e netsh interface portproxy add v4tov4 listenport=8222 listenaddress=0.0.0.0 connectport=22 connectaddress=172.28.200.20 # 해제 \u003e netsh interface portproxy delete v4tov4 listenport=8222 listenaddress=0.0.0.0 # 확인 \u003e netsh interface portproxy show v4tov4 \n(win) 파일 공유 설정 windows 에서 파일 공유 시 권한이 없다는 메시지가 나오는 경우가 있음\nwindows 계정에 패스워드가 설정되어 있지 않으면 발생하는 사항\n# 비밀번호 설정하기 \u003e net user administrator * centos 에서 windows 공유 디렉토리 mount\n$ mkdir /share $ mount -t cifs //172.28.200.1/share /share -o username=administrator,password=1 $ df -h Filesystem Size Used Avail Use% Mounted on devtmpfs 3.8G 0 3.8G 0% /dev tmpfs 3.9G 12K 3.9G 1% /dev/shm tmpfs 3.9G 14M 3.8G 1% /run tmpfs 3.9G 0 3.9G 0% /sys/fs/cgroup /dev/nvme0n1p9 76G 15G 61G 20% / /dev/nvme0n1p8 3.0G 2.7G 378M 88% /var /dev/nvme0n1p7 5.0G 2.6G 2.4G 53% /home /dev/nvme0n1p2 100G 27G 74G 27% /data /dev/nvme0n1p5 20G 5.0G 16G 25% /app /dev/nvme0n1p3 30G 9.8G 21G 33% /prod /dev/nvme0n1p1 474M 149M 326M 32% /boot tmpfs 781M 0 781M 0% /run/user/0 //172.28.200.1/share 345G 284G 62G 83% /share $ vi /etc/fstab //172.28.200.1/share /share cifs username=administrator,password=1 0 0 \n(vmware) nat 설정 vmware \u003e Edit \u003e Virtual Network Editor\nNAT Settings... \u003e Gateway IP 확인\nSubnet IP: 172.28.200.0, Subnet mask: 255.255.255.0\nvmware 의 guest os는 172.28.200.2~254 로 설정하고, host os(windows) 와 통신은 172.28.200.1 로 합니다.\n(7z) 7z 압축 cmd \u003e \"C:\\Program Files\\7-Zip\\7z.exe\" a -mx7 -mmt Z:\\project.zip \"Z:\\project\" \u003e \"C:\\Program Files\\7-Zip\\7z.exe\" a -mx5 -t7z Z:\\project.zip \"Z:\\project\" -xr!target -xr!node_modules target 디렉토리와 node_modules 디렉토리는 압축 대상에서 제외됩니다.\n(jmeter) jmeter 실행 cmd jmeter 실행 결과 디렉토리에 timestamp 변수 사용하기\n\u003e set ts=%DATE:~0,4%%DATE:~5,2%%DATE:~8,2%_%TIME:~0,2%%TIME:~3,2%%TIME:~6,2% \u003e apache-jmeter-5.4.1\\bin\\jmeter.bat -n -t jmeter-mgkim-core.jmx -l data\\%ts%.csv -e -o data\\%ts% \n(win) xcopy cmd \u003e xcopy C:\\exp\\*.* Z:\\exp\\ /d/i/s/c/y \n(chrome) https 자동 접속 현상   chrome://net-internals/#hsts 로 이동\n  Delete domain security policies 에서 해당 도메인 delete\n  chrome://restart chrome 재시작\n새 창 보기\n  (git) config cmd \u003e git config --global core.autocrlf true \u003e git config --global user.email hi@mgkim.net \u003e git config --global user.name 김명구 \n(git) pre-commit shell git-commit 을 하기 전에 사전 검사를 하기 위한 코드를 bash-shell 로 체크하는 방법입니다.\n# project/.git/hooks/pre-commit #!/bin/sh LIST=$(git diff --cached --name-only --diff-filter=ACRM) for file in $LIST do if [ $file = \".settings/org.eclipse.wst.common.component\" ]; then echo \"이클립스 설정 파일($file)은 commit을 할 수 없습니다.\" exit 1 fi done exit 0 \n(oracle) client 무설치 설정 시스템변수\n새 창 보기\nHKEY_LOCAL_MACHINE\\SOFTWARE\\ORACLE\\KEY_client\n새 창 보기\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\ORACLE\\KEY_client\n새 창 보기\ntnsnames.ora\n새 창 보기\n(oracle) sqlplus C:\\Users\\Administrator\u003esqlplus /nolog SQL*Plus: Release 12.1.0.2.0 Production on 목 9월 2 11:39:53 2021 Copyright (c) 1982, 2014, Oracle. All rights reserved. SQL\u003e conn SPADBA/password@develop:1521/SPADBP 연결되었습니다. SQL\u003e show con_name CON_NAME ------------------------------ CDB$ROOT SQL\u003e set line 150 pages 1000 SQL\u003e col name for a30 SQL\u003e select con_id, dbid, name, open_mode from v$containers order by 1; CON_ID DBID NAME OPEN_MODE ---------- ---------- ------------------------------ ---------- 1 1588065228 CDB$ROOT READ WRITE 2 2599163564 PDB$SEED READ ONLY 3 673775647 SPADBP READ WRITE SQL\u003e alter session set container=SPADBP; 세션이 변경되었습니다. SQL\u003e show con_name CON_NAME ------------------------------ SPADBP SQL\u003e \n(oracle) object 조회 query dictionary 뷰에서부터 object 정보를 확인하고 생성된 상태를 확인할 수 있습니다.\nsqlgate 에 단축키로 등록하고 사용하면 유용할 query 입니다.\n# 테이블 검색 SELECT /* (Alt+1) 테이블 검색 */ A.OWNER, A.COMMENTS AS T_COMMENT, A.TABLE_NAME AS T_NAME, B.COLUMN_NAME AS C_NAME, B.COMMENTS AS C_COMMENT, B1.COLUMN_ID FROM ALL_TAB_COMMENTS A, ALL_COL_COMMENTS B, ALL_TAB_COLS B1 WHERE 1=1 AND A.TABLE_NAME LIKE '%\u0026Var%' AND A.TABLE_NAME = B.TABLE_NAME AND B.TABLE_NAME = B1.TABLE_NAME AND B.COLUMN_NAME = B1.COLUMN_NAME AND A.OWNER = B.OWNER AND B.OWNER = B1.OWNER(+) AND A.OWNER IN ('SPADBA') ORDER BY A.OWNER DESC, B1.COLUMN_ID, A.COMMENTS ; # 컬럼 검색 SELECT /* (Alt+2) 컬럼 검색 */ A.OWNER, A.COMMENTS AS T_COMMENT, A.TABLE_NAME AS T_NAME, B.COLUMN_NAME AS C_NAME, B.COMMENTS AS C_COMMENT, B1.COLUMN_ID FROM ALL_TAB_COMMENTS A, ALL_COL_COMMENTS B, ALL_TAB_COLS B1, ALL_CONS_COLUMNS C WHERE 1=1 AND (B.COLUMN_NAME LIKE '%\u0026Var%' OR B.COMMENTS LIKE '%\u0026Var%') AND A.TABLE_NAME = B.TABLE_NAME AND B.TABLE_NAME = C.TABLE_NAME(+) AND B.TABLE_NAME = B1.TABLE_NAME AND B.COLUMN_NAME = B1.COLUMN_NAME AND A.OWNER = B.OWNER AND B.OWNER = B1.OWNER(+) AND B.OWNER = C.OWNER AND B.COLUMN_NAME = C.COLUMN_NAME(+) AND C.CONSTRAINT_NAME(+) LIKE '%PK' AND A.OWNER IN ('SPADBA') AND (A.TABLE_NAME LIKE 'E%' OR A.TABLE_NAME LIKE 'CB%') ORDER BY A.OWNER DESC, A.COMMENTS, B1.COLUMN_ID, C.POSITION ; # 테이블 조회 SELECT /* (Alt+3) 테이블 조회 */ * FROM \u0026Var WHERE ROWNUM \u003c 200 ; # dict 검색 SELECT /* (Alt+4) DICT 검색 */ * FROM DICT WHERE TABLE_NAME LIKE '%'||'\u0026Var'||'%' ORDER BY TABLE_NAME ; \n","categories":"","description":"","excerpt":"(git) turn off crlf warning warning: LF will be replaced by CRLF in 메시 …","ref":"/localenv/","tags":"","title":"localenv"},{"body":"maven-dependency (Mar, 2021) 기준 log4j 는 2.14.1 버전이 최신입니다.\n# 핵심 라이브러리 log4j-api:2.14.1 log4j-core:2.14.1 log4j-web:2.14.1 log4j-slf4j-impl:2.14.1 # 보조 라이브러리 log4jdbc-log4j2-jdbc4.1:1.16 slf4j-log4j12:1.7.32 log4j:1.2.17 log4j2.xml 설정 파일의 기본 구조입니다.\n\u003cConfiguration\u003e \u003cProperties\u003e ... \u003c/Properties\u003e \u003cAppenders\u003e ... \u003c/Appenders\u003e \u003cLoggers\u003e ... \u003c/Loggers\u003e \u003c/Configuration\u003e \u003cAppenders\u003e 설정 \u003cAppenders\u003e 는 로그의 출력을 설정합니다.\n\u003cFile\u003e 혹은 \u003cRollingFile\u003e 를 바로 정의 하는 것이 기본이고,\n\u003cRouting\u003e을 사용하여 ThreadContext 의 값에 따라 \u003cFile\u003e 혹은 \u003cRollingFile\u003e 을 routing 할 수 있습니다.\n\u003cAppenders\u003e \u003cConsole\u003e ... \u003c/Console\u003e \u003cRouting\u003e \u003cRoutes\u003e \u003cRoute\u003e \u003cRollingFile\u003e ... \u003c/RollingFile\u003e \u003c/Route\u003e \u003cRoute\u003e \u003cFile\u003e ... \u003c/File\u003e \u003c/Route\u003e \u003c/Routes\u003e \u003c/Routing\u003e \u003cAsync\u003e \u003cAppenderRef\u003e ... \u003c/AppenderRef\u003e \u003c/Async\u003e \u003c/Appenders\u003e \u003cRouting\u003e 과 ThreadContext \u003cRouting\u003e 설정이 동작할 수 있도록 ThreadContext 을 어떻게 사용하는지에 대한 예시 입니다.\n참고로 ThreadContext는 log4j 의 Lookups 기능의 Context Map 을 사용하는 것이며, Lookups 의 세부 내용은 다시 다루겠습니다.\n\u003cRouting\u003e 설정\n\u003cRouting\u003e \u003cRoutes pattern=\"$${ctx:userId}\"\u003e \u003cRoute\u003e \u003cRollingFile\u003e \u003c/RollingFile\u003e \u003c/Route\u003e \u003cRoute\u003e \u003cFile\u003e ... \u003c/File\u003e \u003c/Route\u003e \u003c/Routes\u003e \u003c/Routing\u003e log-format    포맷 설명     %m 내용   %d 시각 %d{HH:mm:ss, SSS}, %d{yyyy MMM dd HH:mm:ss, SSS}   %t 쓰레드   %n 개행 문자   %c 카테고리(패키지명), %c{2}일 경우 a.b.c 패키지는 b.c 로 출력   %C 클래스, %c{2}일 경우 a.b.c.Clazz 는 c.Clazz 로 출력   %F 파일명   %l caller 정보   %L caller 의 line number   %M 메소드명   %r uptime (msec)   %x NDC(Nested Diagnostic Context)   %X MDC(Mapped Diagnostic Context)    ","categories":"","description":"","excerpt":"maven-dependency (Mar, 2021) 기준 log4j 는 2.14.1 버전이 최신입니다.\n# …","ref":"/develop/log4j2/","tags":"","title":"log4j2"},{"body":"패키지 확인 [root@develop ~]$ yum list *openssh* Loaded plugins: fastestmirror, langpacks Repodata is over 2 weeks old. Install yum-cron? Or run: yum makecache fast Loading mirror speeds from cached hostfile * base: mirror.kakao.com * epel: ftp.yz.yamagata-u.ac.jp * extras: mirror.kakao.com * updates: mirror.kakao.com Installed Packages openssh.x86_64 7.4p1-21.el7 @anaconda [root@develop ~]$ [root@develop ~]$ rpm -ql openssh.x86_64 /etc/ssh /etc/ssh/moduli /usr/bin/ssh-keygen [root@develop ~]$ key 생성 ssh-keygen 인자 -t rsa 는 rsa 타입으로 생성 입니다. key 생성 경로는 home 디렉토리의 .ssh 디렉토리에 생성이 됩니다. passphrase 는 key 의 비밀번호 입니다.\nkey 생성이 되면 .ssh 디렉토리에는 id_rsa(개인키), id_rsa.pub(공개키) 2개의 파일이 있습니다.\n공개키인 id_rsa.pub 파일의 내용은 SSH로 접속하려는 대상 서버의 시스템계정 홈디렉토리의 .ssh/authorized_keys 파일에 추가하여 사용됩니다.\n[tomcat@develop ~]$ pwd /home/tomcat [tomcat@develop ~]$ ls -al 합계 28 drwx------. 4 tomcat ap 140 9월 13 11:41 . drwxr-xr-x. 7 root root 74 11월 22 2020 .. -rw-------. 1 tomcat ap 1357 9월 13 11:41 .bash_history -rw-r--r--. 1 tomcat ap 18 4월 1 2020 .bash_logout -rw-r--r--. 1 tomcat ap 616 12월 24 2020 .bash_profile -rw-r--r--. 1 tomcat ap 231 4월 1 2020 .bashrc drwxr-xr-x. 3 tomcat ap 18 12월 24 2020 .cache drwxr-xr-x. 3 tomcat ap 18 12월 24 2020 .config -rw------- 1 tomcat ap 1024 9월 13 11:39 .rnd -rw------- 1 tomcat ap 5762 9월 13 11:39 .viminfo [tomcat@develop ~]$ ssh-keygen --help unknown option -- - usage: ssh-keygen [-q] [-b bits] [-t dsa | ecdsa | ed25519 | rsa | rsa1] [-N new_passphrase] [-C comment] [-f output_keyfile] ssh-keygen -p [-P old_passphrase] [-N new_passphrase] [-f keyfile] ssh-keygen -i [-m key_format] [-f input_keyfile] ssh-keygen -e [-m key_format] [-f input_keyfile] ssh-keygen -y [-f input_keyfile] ssh-keygen -c [-P passphrase] [-C comment] [-f keyfile] ssh-keygen -l [-v] [-E fingerprint_hash] [-f input_keyfile] ssh-keygen -B [-f input_keyfile] ssh-keygen -D pkcs11 ssh-keygen -F hostname [-f known_hosts_file] [-l] ssh-keygen -H [-f known_hosts_file] ssh-keygen -R hostname [-f known_hosts_file] ssh-keygen -r hostname [-f input_keyfile] [-g] ssh-keygen -G output_file [-v] [-b bits] [-M memory] [-S start_point] ssh-keygen -T output_file -f input_file [-v] [-a rounds] [-J num_lines] [-j start_line] [-K checkpt] [-W generator] ssh-keygen -s ca_key -I certificate_identity [-h] [-n principals] [-O option] [-V validity_interval] [-z serial_number] file ... ssh-keygen -L [-f input_keyfile] ssh-keygen -A ssh-keygen -k -f krl_file [-u] [-s ca_public] [-z version_number] file ... ssh-keygen -Q -f krl_file file ... [tomcat@develop ~]$ ssh-keygen -t rsa Generating public/private rsa key pair. Enter file in which to save the key (/home/tomcat/.ssh/id_rsa): Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /home/tomcat/.ssh/id_rsa. Your public key has been saved in /home/tomcat/.ssh/id_rsa.pub. The key fingerprint is: SHA256:Lp68Qh20r1rnsr+IyTTayVl/pbd8VlEL3mWGuez3IYY tomcat@develop The key's randomart image is: +---[RSA 2048]----+ | o | | . .o =| | . . ..o++| | o .o+ | | . oS .. .| | . ... E.o..o| | .o +.o o. .oo| | *.@oB o.. o .| | . XoB==o .o+ | +----[SHA256]-----+ [tomcat@develop ~]$ [tomcat@develop ~]$ ls -al /home/tomcat/.ssh 합계 8 drwx------ 2 tomcat ap 38 9월 13 11:51 . drwx------. 5 tomcat ap 152 9월 13 11:48 .. -rw------- 1 tomcat ap 1766 9월 13 11:51 id_rsa -rw-r--r-- 1 tomcat ap 396 9월 13 11:51 id_rsa.pub [tomcat@develop ~]$ ","categories":"","description":"","excerpt":"패키지 확인 [root@develop ~]$ yum list *openssh* Loaded plugins: …","ref":"/system/openssh/","tags":"","title":"openssh"},{"body":"sysctl 설정 파일: /etc/sysctl.conf\nfs.aio-max-nr = 1048576 fs.file-max = 6815744 kernel.shmall = 2097152 kernel.shmmax = 4056393728 kernel.shmmni = 4096 kernel.sem = 250 32000 100 128 net.ipv4.ip_local_port_range = 9000 65500 net.core.rmem_default = 262144 net.core.rmem_max = 4194304 net.core.wmem_default = 262144 net.core.wmem_max = 1048586 반영: sysctl -p\n확인: sysctl -a\nlimits 설정 /etc/security/limits.conf\noracle soft nproc 2047 oracle hard nproc 16384 oracle soft nofile 1024 oracle hard nofile 65536 \n시스템 계정 groupadd oinstall groupadd dba useradd -g oinstall -G dba oracle \n설치 디렉토리 mkdir -p /prod/oracle12/app mkdir -p /prod/oracle12/oraInventory chown -R oracle:oinstall /prod/oracle12/app chown -R oracle:oinstall /prod/oracle12/oraInventory chmod -R 775 /prod/oracle12/app chmod -R 775 /prod/oracle12/oraInventory chmod g+s /prod/oracle12/app chmod g+s /prod/oracle12/oraInventory \n시스템 변수 export TMPDIR=$TMP export ORACLE_BASE=/prod/oracle12/app/ export ORACLE_HOME=$ORACLE_BASE/product/12.2.0/dbhome_1 export ORACLE_HOME_LISTNER=$ORACLE_HOME/bin/lsnrctl export ORACLE_SID=orcl export LD_LIBRARY_PATH=/lib:/usr/lib:/usr/lib64:$ORACLE_HOME/lib export CLASSPATH=$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlib export PATH=$ORACLE_HOME/bin:$PATH:$HOME/.local/bin:$HOME/bin \ngui 패키지 설치 $ yum grouplist 사용 가능한 환경 그룹 : 서버 - GUI 사용 최소 설치 워크스테이션 가상화 호스트 사용자 정의 운영 체제 $ yum groupinstall \"서버 - GUI 사용\" 설치 후 runlevel 변경: $ systemctl set-default graphical.target\noracle12c-ee 설치 gui 환경으로 booting 후 oracle 계정으로 로그인하고 runInstaller 실행\n설치 파일: oracle-ee_12102_linux_x64_1of2.zip, oracle-ee_12102_linux_x64_2of2.zip\ninstall response rpm runInstaller sshsetup stage welcome.html \nsystemctl 등록 systemctl 환경변수 파일: /etc/sysconfig/ora12c.env\n소유자(oracle) 설정: chown oracle:db /etc/sysconfig/ora12c.env\nORACLE_BASE=/prod/oracle12/app ORACLE_HOME=$ORACLE_BASE/product/12.2.0/dbhome_1 ORACLE_SID=ora12c \n각종 오류   ORA-01102: cannot mount database in EXCLUSIVE mode\ncat $ORACLE_BASE/admin/ora12c/pfile/init.ora.1028202115570 cp $ORACLE_BASE/admin/ora12c/pfile/init.ora.1028202115570 $ORACLE_HOME/dbs/initora12c.ora   ORA-01033: ORACLE initialization or shutdown in progress\nalter pluggable database pdborcl open read write;   systemctl service 파일 생성\nservice 파일에는 환경변수 파일을 적용할 것\nora12c@lsnrctl.service, ora12c@dbms.service\noratab 파일 파일: /etc/oratab\nora12c:/prod/oracle12/app/product/12.2.0/dbhome_1:Y 소유자(oracle) 설정: chown oracle:db /etc/oratab\nmax_string_size = EXTENDED startup mount; alter database open migrate; select con_id, name, open_mode from v$pdbs; alter session set container=PDB$SEED; alter system set max_string_size=extended scope=spfile; @?/rdbms/admin/utl32k.sql; alter session set container=SPADBP; alter pluggable database SPADBP open upgrade; alter system set max_string_size=extended scope=spfile; @?/rdbms/admin/utl32k.sql; @?/rdbms/admin/utlrp.sql; alter pluggable database SPADBP close immediate; \nPDB 자동 시작 select con_id, name, open_mode from v$pdbs; CREATE OR REPLACE TRIGGER open_pdbs AFTER STARTUP ON DATABASE BEGIN EXECUTE IMMEDIATE 'ALTER PLUGGABLE DATABASE ALL OPEN'; END open_pdbs; / commit; \noracle 계정 생성 alter session set \"_oracle_script\"=true; CREATE TABLESPACE TS_DATA01 DATAFILE '/data/DB/oradata/ora12c/SPADBP/TS_DATA01.dbf' SIZE 1G AUTOEXTEND ON NEXT 10M; CREATE USER SPADBA IDENTIFIED BY 1 DEFAULT TABLESPACE TS_DATA01; CREATE USER SPAAPP IDENTIFIED BY SPAAPP1234 DEFAULT TABLESPACE TS_DATA01; ALTER USER SPADBA QUOTA UNLIMITED ON TS_DATA01; GRANT CONNECT, RESOURCE, CREATE VIEW, EXP_FULL_DATABASE, IMP_FULL_DATABASE, DBA TO SPADBA; CREATE ROLE RL_SPA_APP; GRANT CONNECT, RESOURCE TO RL_SPA_APP; GRANT RL_SPA_APP TO SPAAPP; \noracle imp/exp exp.exe SPADBA/1@SPADBP FILE='Z:\\SPADBP.dmp' GRANTS=Y INDEXES=Y ROWS=Y CONSTRAINTS=Y TRIGGERS=N COMPRESS=Y DIRECT=N CONSISTENT=N OWNER=(SPADBA) imp.exe SPADBA/1@SPADBP FILE='Z:\\SPADBP.dmp' FEEDBACK=1000 GRANTS=Y INDEXES=Y ROWS=Y CONSTRAINTS=Y IGNORE=N SHOW=N DESTROY=N ANALYZE=Y SKIP_UNUSABLE_INDEXES=N RECALCULATE_STATISTICS=N FROMUSER=SPADBA TOUSER=SPADBA \ndrop table 문 select 'drop table '||table_name||' cascade constraints;' from user_tables; oracle character-set 설정 select * from nls_database_parameters where parameter like '%NLS_CHARACTERSET%'; /** NLS_CHARACTERSET WE8MSWIN1252 **/ /** NLS_CHARACTERSET AL32UTF8 */ SHUTDOWN IMMEDIATE; STARTUP MOUNT; ALTER SYSTEM ENABLE RESTRICTED SESSION; ALTER SYSTEM SET JOB_QUEUE_PROCESSES=0; ALTER SYSTEM SET AQ_TM_PROCESSES=0; ALTER DATABASE OPEN; ALTER DATABASE CHARACTER SET INTERNAL_USE AL32UTF8; SHUTDOWN IMMEDIATE; STARTUP; \n","categories":"","description":"","excerpt":"sysctl 설정 파일: /etc/sysctl.conf\nfs.aio-max-nr = 1048576 fs.file-max = …","ref":"/system/oracle12c/","tags":"","title":"oracle12c"},{"body":"","categories":"","description":"","excerpt":"","ref":"/search/","tags":"","title":"Search Results"},{"body":"(tomcat) start/stop jamwiki 라는 webapp 을 서비스하는 tomcat 설정 기본입니다.\n아래 sh 파일을 포함하여 tomcat 설정에 필요한 파일들만 tgz 로 압축했습니다.\n다운로드\nstart.sh 파일\n#!/bin/sh  export PROD_HOME=/prod/${INST_ID} export DATA_HOME=/data/PROD/${INST_ID} export LOG_HOME=/outlog/PROD/${INST_ID} export EXE_USER=tomcat export CATALINA_BASE=/prod/${INST_ID}/config export CATALINA_OUT=${LOG_HOME}/catalina.out export CATALINA_OPTS=\"-Djava.net.preferIPv4Stack=true \" export JAVA_OPTS=\"-Xms256m -Xmx256m\" export PS_CMD=\"ps -ef | grep -v grep | grep -v '.sh' | grep -v rotatelogs | grep -v tail | grep ${INST_ID}\" if [ ! -e ${LOG_HOME}/backup ]; then su ${EXE_USER} -c 'mkdir -p ${LOG_HOME}/backup' fi if [ -e ${LOG_HOME}/catalina.out ]; then mv ${LOG_HOME}/catalina.out ${LOG_HOME}/backup/catalina.out_`date +'%Y%m%d_%H%M%S'` fi _PID=`eval ${PS_CMD} | awk '{ print $2 }'` if [ \"${_PID}\" != \"\" ]; then echo \"${INST_ID}is already running. pid: ${_PID}\" ${PROD_HOME}/stop-${INST_ID}.sh fi sleep 2 if [ ${EXE_USER} != `whoami` ]; then su ${EXE_USER} -c '/prod/${INST_ID}/tomcat/bin/startup.sh' else /prod/${INST_ID}/tomcat/bin/startup.sh fi _PID=`eval ${PS_CMD} | awk '{ print $2 }'` if [ \"${_PID}\" != \"\" ]; then echo \"${INST_ID}is starting. pid: ${_PID}\" echo \"ps -ef | grep ${_PID}\" echo \"netstat -ntplu | grep ${_PID}\" else echo \"${INST_ID}is not started\" fi exit 0 \nstart-jamwiki.sh 파일\n#!/bin/sh  # configuration export JAVA_HOME=/prod/java/jdk1.8.0_202 export PATH=$JAVA_HOME/bin:$PATH export INST_ID=jamwiki /prod/${INST_ID}/bin/start.sh exit 0 \nstop.sh 파일\n#!/bin/sh  export PROD_HOME=/prod/${INST_ID} export DATA_HOME=/data/PROD/${INST_ID} export LOG_HOME=/outlog/PROD/${INST_ID} export EXE_USER=tomcat export CATALINA_BASE=/prod/${INST_ID}/config export PS_CMD=\"ps -ef | grep -v grep | grep -v '.sh' | grep -v rotatelogs | grep -v tail | grep ${INST_ID}\" _PID=`eval ${PS_CMD} | awk '{ print $2 }'` if [ \"${_PID}\" == \"\" ]; then echo \"${INST_ID}is not running\" exit 0 fi sleep 2 if [ ${EXE_USER} != `whoami` ]; then su ${EXE_USER} -c '/prod/${INST_ID}/tomcat/bin/shutdown.sh' else /prod/${INST_ID}/tomcat/bin/shutdown.sh fi echo \"${INST_ID}is stopped. pid: ${_PID}\" exit 0 \nstop-jamwiki.sh 파일\n#!/bin/sh  # configuration export INST_ID=jamwiki /prod/${INST_ID}/bin/stop.sh exit 0 \nstatus-jamwiki.sh 파일\n#!/bin/sh  echo \"---------------- jamwiki ----------------\" ps -ef | grep -v grep | grep -v '.sh' | grep -v rotatelogs | grep -v tail | grep jamwiki echo \"\" exit 0 \n(cockpit) cockpit 은 centos 의 web console 을 제공하는 패키지 입니다.\n설치\n$ dnf install cockpit $ systemctl enable --now cockpit.socket $ netstat -ntplu | grep 9090 cockpit 에 ssl 인증서 교체하기\n참고: create-cert.sh\n# create-cert.sh 로 인증서를 생성합니다. # 인자는 web console 에 접근할 도메인으로 생성하면 됩니다. # 예시는 centos8 이라는 도메인으로 생성합니다. $ ./create-cert.sh centos8 $ ls -al -rw-r--r-- 1 root root 1310 1월 2 14:58 centos8.crt -rw------- 1 root root 1708 1월 2 14:58 centos8.key $ cd /etc/cockpit/ws-certs.d $ ls -al -rw-r--r-- 1 root root 2094 1월 2 00:46 0-self-signed-ca.pem -rw-r--r-- 1 root root 1684 1월 2 00:46 0-self-signed.cert -rw-r----- 1 root cockpit-ws 1704 1월 2 00:46 0-self-signed.key $ cp centos8.crt centos8.key /etc/cockpit/ws-certs.d $ chmod 640 centos8.key $ chown root:cockpit-ws centos8.key $ chmod 644 centos8.crt $ remotectl certificate centos8.crt centos8.key generated combined certificate file: /etc/cockpit/ws-certs.d/centos8.cert $ remotectl certificate certificate: /etc/cockpit/ws-certs.d/centos8.crt $ systemctl restart cockpit \ncentos8 인증서 등록하기\nhttps://centos8:9090/ 링크로 이동하면 신뢰할 수 없는 사이트라고 표시됩니다.\n인증서를 내보내기 한 다음 아래 절차대로 인증서를 등록합니다.\n chrome 에서 chrome://settings/security?q=enhanced 링크로 이동합니다. 인증서 관리 메뉴를 클릭하면 팝업이 열립니다. 신뢰할 수 있는 루트 인증 기관 탭에서 가져오기를 클릭 합니다. 내보내기 한 인증서를 선택하고 가져오기를 합니다. chrome 에서 chrome://net-internals/#hsts 링크로 이동합니다. Delete domain security policies 에서 centos8 을 입력하고 Delete 버튼을 클릭합니다. chrome 에서 chrome://restart 링크 이동으로 chrome 을 재시작합니다. chrome 에서 https://centos8:9090/ 링크로 이동하여 정상 작동하는지를 확인합니다.  정상 예시\n새 창 보기\n(mosh) 설치\n$ yum install mosh 상태\n# 접속 후 netstat 상태 보기 $ mosh root@172.28.200.30 $ netstat -ntplu | grep 3253 udp 0 0 172.28.200.30:60001 0.0.0.0:* 3253/mosh-server $ netstat -ntplu | grep 3217 udp 0 0 0.0.0.0:19001 0.0.0.0:* 3217/mosh-client # 접속 옵션 $ mosh -ssh='ssh -vvv' root@172.28.200.30 chrome 확장 프로그램 Secure Shell\n링크\n(xmlstarlet) 설치\n$ dnf install epel-release $ yum install xmlstarlet 사용법\nxmlstarlet sel -N x=\"http://maven.apache.org/POM/4.0.0\" -t -v \"x:project/x:version\" ./pom.xml \n(oracle) 12c 설치 oracle 12c ee 버전 설치\npluggable database 설정, MAX_STRING_SIZE 설정, character-set 설정, oracle 계정 설정\n새 창 보기\n(yum) 설치된 목록 확인 yum list installed\n(firewall) disabled 추가된 목록: /etc/firewalld/zones/public.xml\n서비스명: firewalld\n(selinux) disabled 파일: /etc/selinux/config\nSELINUX=disabled 적용: shutdown -r now\n(network) ip 설정 파일: /etc/sysconfig/network-scripts/ifcfg-ens33\nBOOTPROTO=\"none\" IPV6INIT=\"no\" IPADDR=\"172.28.200.30\" PREFIX=\"24\" GATEWAY=\"172.28.200.2\" DNS1=\"8.8.8.8\" 적용: systemctl restart NetworkManager\n(openssl) key 생성 cmd # 암호화하지 않은 개인키 $ openssl genrsa -out private_key.pem 2048 # 3des로 암호화된 개인키 생성 # passphrase를 입력이 필요합니다. $ openssl genrsa -des3 -out enc_private_key.pem 2048 # 기존 개인키에 패스워드 추가 $ openssl rsa -des3 -in private_key.pem -out enc_private_key.pem # 기존 개인키에 패스워드 제거 $ openssl rsa -in enc_private_key.pem -out private_key.pem \n(sed) 문자열 치환 $ sed -i -e 's/hello/world/g' test.txt \n(tar) 분할 압축 # split $ tar cvfz - target | split -b 3072m - target.tgz $ cat target.tgz.* | tar zxvf - \n(tar) exclude 설정 # exclude $ cat .tarexclude build.* run.* bin .svn/* .git/* .project .tarexclude backup.sh $ tar cvfz ../target.tgz * -X .tarexclude \n(httpd) 설정 httpd.conf, vhost 설정, ssl 적용에 대한 예시\n새 창 보기\n(jenkins) 설정 플러그인 Publish Over SSH, GitLab Plugin, GitHub Integration Plugin에 대한 사용법\n새 창 보기\n","categories":"","description":"","excerpt":"(tomcat) start/stop jamwiki 라는 webapp 을 서비스하는 tomcat 설정 기본입니다.\n아래 sh 파 …","ref":"/system/","tags":"","title":"system"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/","tags":"","title":"Tags"}]