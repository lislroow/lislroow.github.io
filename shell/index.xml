<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shells on MEMO</title>
    <link>https://lislroow.github.io/shell/</link>
    <description>Recent content in Shells on MEMO</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <atom:link href="https://lislroow.github.io/shell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://lislroow.github.io/shell/bash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://lislroow.github.io/shell/bash/</guid>
      <description>grep -q grep -q: &amp;ldquo;quiet&amp;rdquo; 또는 &amp;ldquo;silent&amp;rdquo; 모드로 실행 grep은 검색 결과를 출력하지 않고, 검색 결과의 유무에 따라 exitCode 만 반환 있을 경우 exitCode 는 0 이되고, 그렇지 않을 경우 1을 반환 root@a54d5bb18443:/etc# grep -q &amp;#39;root&amp;#39; passwd root@a54d5bb18443:/etc# echo $? 0 root@a54d5bb18443:/etc# grep -q &amp;#39;root2&amp;#39; passwd root@a54d5bb18443:/etc# echo $? 1 root@a54d5bb18443:/etc# ssh 파일 전송 tar cvfz - N305.sh \ &amp;gt; | ssh root@172.28.200.2 &amp;#39;tar zxvf - -C /root/bin&amp;#39; getopts getopts는 옵션을 하나씩 처리할 때마다 옵션 문자를 OPTIND와 같은 변수에 저장하고, 각 옵션에 대한 인수는 $OPTARG에 저장됩니다.</description>
    </item>
    <item>
      <title></title>
      <link>https://lislroow.github.io/shell/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://lislroow.github.io/shell/docker/</guid>
      <description>postgres: /docker-entrypoint-initdb.d /docker-entrypoint-initdb.d 디렉토리에 sh, sql 파일이 있으면 스크립트를 실행 volumes: - postgresql_data:/var/lib/postgresql/data - ./postgresql:/docker-entrypoint-initdb.d # /docker-entrypoint-initdb.d/01_create_database.sh USER_NAME=postgres DATABASE_NAME=mattermost psql -U $USER_NAME -tc &amp;#34;SELECT 1 FROM pg_database WHERE datname = &amp;#39;${DATABASE_NAME}&amp;#39;&amp;#34; | grep -q 1 \ || psql -U $USER_NAME -c &amp;#34;CREATE DATABASE ${DATABASE_NAME}&amp;#34; DATABASE_NAME=sonarqube psql -U $USER_NAME -tc &amp;#34;SELECT 1 FROM pg_database WHERE datname = &amp;#39;${DATABASE_NAME}&amp;#39;&amp;#34; | grep -q 1 \ || psql -U $USER_NAME -c &amp;#34;CREATE DATABASE ${DATABASE_NAME}&amp;#34; </description>
    </item>
  </channel>
</rss>
