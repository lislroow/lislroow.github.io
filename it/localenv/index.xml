<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> – localenv</title>
    <link>/it/localenv/</link>
    <description>Recent content in localenv on </description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/it/localenv/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>It: git</title>
      <link>/it/localenv/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/it/localenv/git/</guid>
      <description>
        
        
        &lt;h4 id=&#34;git-remote&#34;&gt;git-remote&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git remote -v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;origin  https://github.com/lislroow/dlog.git (fetch)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;origin  https://github.com/lislroow/dlog.git (push)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git remote set-url origin git@github.com:lislroow/dlog.git
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git remote -v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;origin  git@github.com:lislroow/dlog.git (fetch)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;origin  git@github.com:lislroow/dlog.git (push)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;git-log&#34;&gt;git-log&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git log --branches --not --remotes&lt;/code&gt;: commit 목록 중 원격지에 push 하지 않은 항목 출력&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git log --oneline --graph&lt;/code&gt;: commit 목록을 1 line 으로 출력하면서 graph 로 표시&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git log -p -1&lt;/code&gt;: commit 목록 중 최근 1개에 대하여 &lt;code&gt;-p&lt;/code&gt;(patch) diff 출력&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git log -p -S 문자열&lt;/code&gt;: patch 에 문자열이 포함된 commit 목록 출력&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git log --since=&#39;2022-02-26 14:00&#39;&lt;/code&gt;: &amp;lsquo;2022-02-26 14:00&amp;rsquo; 부터 지금까지의 commit 목록 출력 (since/until)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;주요 옵션&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;옵션&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;&lt;center&gt;설명&lt;/center&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-p&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;stat&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;shortstat&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;name-only&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;name-status&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;graph&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;pretty&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;oneline&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;범위 제한 옵션&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;옵션&lt;/th&gt;
&lt;th&gt;&lt;center&gt;설명&lt;/center&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;-(n)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;since, &amp;ndash;after&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;until, &amp;ndash;before&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;author&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;committer&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;grep&lt;/td&gt;
&lt;td&gt;commit 메시지의 텍스트를 grep 합니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;ndash;S&lt;/td&gt;
&lt;td&gt;patch 내용의 텍스트를 grep 합니다.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;git-restore&#34;&gt;git-restore&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git restore path-to-file&lt;/code&gt;: working-directory 의 파일 변경 취소&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git restore --staged path-to-file&lt;/code&gt;: Index 의 파일 변경 취소&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;git-reset&#34;&gt;git-reset&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git reset -- path-to-file&lt;/code&gt;: Index 의 파일(Index에 파일이 있다는 것은 staged 상태임)을 unstaging 으로 변경&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git checkout path-to-file&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;reset 명령은 HEAD가 가리키는 브랜치의 commit 을 바꿉니다.&lt;/p&gt;
&lt;p&gt;옵션은 --soft, --mixed, --hard 3가지가 있으며 기본은 --mixed 입니다.&lt;/p&gt;
&lt;p&gt;특정 파일 1개를 3회 commit 을 한 상태, 각 commit 의 해시 값은 v1, v2, v3 라고 가정합니다.&lt;/p&gt;
&lt;p&gt;reset 명령으로 commit 상태를 v2로 변경할 때, 옵션별 실행 결과입니다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;옵션&lt;/th&gt;
&lt;th&gt;&lt;center&gt;결과&lt;/center&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;--soft  v2&lt;/td&gt;
&lt;td&gt;HEAD: v2, Index: v3, working-directory: v3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--mixed v2&lt;/td&gt;
&lt;td&gt;HEAD: v2, Index: v2, working-directory: v3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;--hard  v2&lt;/td&gt;
&lt;td&gt;HEAD: v2, Index: v2, working-directory: v2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;commit 해시 값을 파라미터로 전달하지 않고, 이전의 commit 해시 값으로 변경할 경우 아래와 같이 실행합니다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git reset --soft HEAD~&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;같이 commit 해야할 파일을 실수로 누락했을 경우 사용될 수 있습니다.&lt;/p&gt;
&lt;p&gt;reset 명령으로 Index 의 특정 파일을 HEAD에서 특정 commit 버전에 포함된 파일로 변경할 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git reset v2 -- file.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;HEAD 의 v2 버전 상태의 file.txt를 Index에 적용합니다.&lt;/p&gt;
&lt;p&gt;최근 2건의 commit 을 하나로 합쳐서 1건의 commit 으로 정리하고자 할 때 아래와 같이 reset 명령을 사용합니다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git reset --soft HEAD~2&lt;/code&gt; 혹은 &lt;code&gt;git reset --soft HEAD@{2}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;reset 명령은 Untracked 파일(로컬에서 신규 생성한 파일)은 그대로 유지합니다.&lt;/p&gt;
&lt;h4 id=&#34;git-push&#34;&gt;git-push&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git push origin +test&lt;/code&gt;: 원격지 브랜치 test에 강제 push 를 합니다. &lt;code&gt;git push origin test -f&lt;/code&gt; 와 같습니다. (강제 push를 하게되면 원격지의 commit history 가 덮어씌워 집니다.)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;git-clean&#34;&gt;git-clean&lt;/h4&gt;
&lt;p&gt;Untracked 파일만 삭제하는 명령입니다. (tracked 파일은 대상이 아닙니다.)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git clean -f&lt;/code&gt;: 파일만 삭제&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git clean -f -d&lt;/code&gt;: 파일 및 디렉토리 삭제&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git clean -f -d -x&lt;/code&gt;: 파일 및 디렉토리 및 무시된 파일 삭제&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git clean -n&lt;/code&gt;: 삭제될 대상을 확인&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;git-checkout&#34;&gt;git-checkout&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;git checkout branch&lt;/code&gt;와 &lt;code&gt;git reset --hard 브랜치&lt;/code&gt; 는&lt;/p&gt;
&lt;h4 id=&#34;git-commit&#34;&gt;git-commit&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git commit --amend&lt;/code&gt;: Index 에 추가된 항목으로 commit 을 재작성&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git commit -m &amp;#39;메시지&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git add forgotten_file
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git commit --amend
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;git-ls-files&#34;&gt;git-ls-files&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git ls-files -s&lt;/code&gt;: (Index)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;git-branch&#34;&gt;git-branch&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git branch --list&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch -vv&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch -avv&lt;/code&gt;: 로컬/원격지 모든 브랜치 조회하면서 tracking 상태 확인&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch test --track origin/main&lt;/code&gt;: 원격지 origin/main 브랜치를 start-point 로 하는 test 브랜치 생성&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch --set-upstream-to origin/main&lt;/code&gt;: 현재 로컬 브랜치를 원격지 origin/main 브랜치로 tracking 하도록 설정&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch test --set-upstream-to origin/main&lt;/code&gt;: 로컬 브랜치 test를 원격지 origin/main 브랜치로 tracking 하도록 설정&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git switch test&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push origin test&lt;/code&gt;: 로컬 브랜치 test를 원격지에 생성&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push origin :test&lt;/code&gt;: 원격지 브랜치 test를 삭제&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch -d&lt;/code&gt;: merge 하지 않은 커밋을 담고 있는 브랜치는 &lt;code&gt;git branch -D&lt;/code&gt; 로 강제 삭제할 수 있음&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch -r&lt;/code&gt;: 원격지 브랜치 조회&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch -a&lt;/code&gt;: 로컬/원격지 브랜치 모두 조회&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git remote show origin&lt;/code&gt;: 로컬/원격지 tracking 상태 확인&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git remote prune origin&lt;/code&gt;: 원격 브랜치와 유효하지 않는 참조를 삭제&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git remote update --prune&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git fetch -p&lt;/code&gt;: fetch 를 실행하면서 원격 브랜치의 참조가 유효하지 않는 상태의 브랜치를 제거&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;git-config-alias&#34;&gt;git-config (alias)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git config --global alias.br branch&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git config --global alias.unstage &#39;reset HEAD --&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git config --global alias.last &#39;log -1 HEAD&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;git-diff&#34;&gt;git-diff&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git diff&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git diff HEAD&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git diff HEAD --color-words&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git diff HEAD --word-diff&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
